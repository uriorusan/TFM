{
	"id": "819cc28e5be006d9e3131cd1407666c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract SingleSwap {\n    address public constant routerAddress =\n        0xE592427A0AEce92De3Edee1F18E0157C05861564;\n    ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress);\n\n    address public constant LINK = 0x326C977E6efc84E512bB9C30f76E30c160eD06FB;\n    address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6;\n\n    IERC20 public linkToken = IERC20(LINK);\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n    constructor() {}\n\n    function swapExactInputSingle(uint256 amountIn)\n        external\n        returns (uint256 amountOut)\n    {\n        linkToken.approve(address(swapRouter), amountIn);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams({\n                tokenIn: LINK,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: address(this),\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)\n        external\n        returns (uint256 amountIn)\n    {\n        linkToken.approve(address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter\n            .ExactOutputSingleParams({\n                tokenIn: LINK,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: address(this),\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        if (amountIn < amountInMaximum) {\n            linkToken.approve(address(swapRouter), 0);\n            linkToken.transfer(address(this), amountInMaximum - amountIn);\n        }\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/SimpleSwap.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0xce3d332dd398afc67d1b6f0430198bbc676791689bc9c24381bce801c79be226\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf8c3456e79d3f305c55f713545fa5b7db02962625ac1b581ef118157e55e577\",\"dweb:/ipfs/QmbLYnfeBQdMBNyBt6ethnjT4VKobe6Yp55tFJqkWU8VoP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SingleSwap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "LINK",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "routerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSwap.sol\":434:2485  contract SingleSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SimpleSwap.sol\":508:550  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n  0xe592427a0aece92de3edee1f18e0157c05861564\n    /* \"contracts/SimpleSwap.sol\":556:624  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n    /* \"contracts/SimpleSwap.sol\":662:704  0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n  0x326c977e6efc84e512bb9c30f76e30c160ed06fb\n    /* \"contracts/SimpleSwap.sol\":790:828  IERC20 public linkToken = IERC20(LINK) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleSwap.sol\":938:954  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SimpleSwap.sol\":434:2485  contract SingleSwap {... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSwap.sol\":434:2485  contract SingleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73bd43ad\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x73bd43ad\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc4b69a18\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b6b6d23\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3268cc56\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x57970e93\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleSwap.sol\":894:931  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":631:704  address public constant LINK = 0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":460:550  address public constant routerAddress =... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":790:828  IERC20 public linkToken = IERC20(LINK) */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":960:1602  function swapExactInputSingle(uint256 amountIn)... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":710:783  address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":556:624  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":1608:2483  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":894:931  uint24 public constant poolFee = 3000 */\n    tag_13:\n        /* \"contracts/SimpleSwap.sol\":927:931  3000 */\n      0x0bb8\n        /* \"contracts/SimpleSwap.sol\":894:931  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":631:704  address public constant LINK = 0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n    tag_17:\n        /* \"contracts/SimpleSwap.sol\":662:704  0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n      0x326c977e6efc84e512bb9c30f76e30c160ed06fb\n        /* \"contracts/SimpleSwap.sol\":631:704  address public constant LINK = 0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":460:550  address public constant routerAddress =... */\n    tag_21:\n        /* \"contracts/SimpleSwap.sol\":508:550  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n      0xe592427a0aece92de3edee1f18e0157c05861564\n        /* \"contracts/SimpleSwap.sol\":460:550  address public constant routerAddress =... */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":790:828  IERC20 public linkToken = IERC20(LINK) */\n    tag_24:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":960:1602  function swapExactInputSingle(uint256 amountIn)... */\n    tag_30:\n        /* \"contracts/SimpleSwap.sol\":1042:1059  uint256 amountOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1075:1084  linkToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":1075:1092  linkToken.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/SimpleSwap.sol\":1101:1111  swapRouter */\n      immutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n        /* \"contracts/SimpleSwap.sol\":1114:1122  amountIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":1075:1123  linkToken.approve(address(swapRouter), amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      pop\n        /* \"contracts/SimpleSwap.sol\":1134:1182  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SimpleSwap.sol\":662:704  0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n      0x326c977e6efc84e512bb9c30f76e30c160ed06fb\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":741:783  0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":927:931  3000 */\n      0x0bb8\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1363:1367  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1396:1411  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1439:1447  amountIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1483:1484  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1521:1522  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1185:1537  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":1134:1537  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":1560:1570  swapRouter */\n      immutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n        /* \"contracts/SimpleSwap.sol\":1560:1587  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/SimpleSwap.sol\":1588:1594  params */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":1560:1595  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/SimpleSwap.sol\":1548:1595  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/SimpleSwap.sol\":960:1602  function swapExactInputSingle(uint256 amountIn)... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":710:783  address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n    tag_34:\n        /* \"contracts/SimpleSwap.sol\":741:783  0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\n        /* \"contracts/SimpleSwap.sol\":710:783  address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":556:624  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n    tag_37:\n      immutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":1608:2483  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)... */\n    tag_43:\n        /* \"contracts/SimpleSwap.sol\":1717:1733  uint256 amountIn */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1749:1758  linkToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":1749:1766  linkToken.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/SimpleSwap.sol\":1775:1785  swapRouter */\n      immutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n        /* \"contracts/SimpleSwap.sol\":1788:1803  amountInMaximum */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":1749:1804  linkToken.approve(address(swapRouter), amountInMaximum) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_65:\n      pop\n        /* \"contracts/SimpleSwap.sol\":1815:1864  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SimpleSwap.sol\":662:704  0x326C977E6efc84E512bB9C30f76E30c160eD06FB */\n      0x326c977e6efc84e512bb9c30f76e30c160ed06fb\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":741:783  0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":927:931  3000 */\n      0x0bb8\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":2046:2050  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":2079:2094  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":2123:2132  amountOut */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":2167:2182  amountInMaximum */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":2219:2220  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1867:2235  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":1815:2235  ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":2257:2267  swapRouter */\n      immutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n        /* \"contracts/SimpleSwap.sol\":2257:2285  swapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb3e2198\n        /* \"contracts/SimpleSwap.sol\":2286:2292  params */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":2257:2293  swapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_71:\n        /* \"contracts/SimpleSwap.sol\":2246:2293  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/SimpleSwap.sol\":2319:2334  amountInMaximum */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":2308:2316  amountIn */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":2308:2334  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/SimpleSwap.sol\":2304:2477  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":2350:2359  linkToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":2350:2367  linkToken.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/SimpleSwap.sol\":2376:2386  swapRouter */\n      immutable(\"0xe3cb0ca89f217511efd4af6caea80048f9921bac3b9063844e65469cf515f138\")\n        /* \"contracts/SimpleSwap.sol\":2389:2390  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2350:2391  linkToken.approve(address(swapRouter), 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_78:\n      pop\n        /* \"contracts/SimpleSwap.sol\":2405:2414  linkToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":2405:2423  linkToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SimpleSwap.sol\":2432:2436  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":2457:2465  amountIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":2439:2454  amountInMaximum */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":2439:2465  amountInMaximum - amountIn */\n      sub\n        /* \"contracts/SimpleSwap.sol\":2405:2466  linkToken.transfer(address(this), amountInMaximum - amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/SimpleSwap.sol\":2304:2477  if (amountIn < amountInMaximum) {... */\n    tag_72:\n        /* \"contracts/SimpleSwap.sol\":1608:2483  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_87\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_89:\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_91\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":202:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:438   */\n    tag_93:\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":377:390   */\n      mload\n        /* \"#utility.yul\":368:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_95\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_92\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":358:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:722   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":560:562   */\n      0x20\n        /* \"#utility.yul\":548:557   */\n      dup3\n        /* \"#utility.yul\":539:546   */\n      dup5\n        /* \"#utility.yul\":535:558   */\n      sub\n        /* \"#utility.yul\":531:563   */\n      slt\n        /* \"#utility.yul\":528:530   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":573:574   */\n      dup1\n        /* \"#utility.yul\":566:578   */\n      revert\n        /* \"#utility.yul\":528:530   */\n    tag_97:\n        /* \"#utility.yul\":619:620   */\n      0x00\n        /* \"#utility.yul\":644:705   */\n      tag_98\n        /* \"#utility.yul\":697:704   */\n      dup5\n        /* \"#utility.yul\":688:694   */\n      dup3\n        /* \"#utility.yul\":677:686   */\n      dup6\n        /* \"#utility.yul\":673:695   */\n      add\n        /* \"#utility.yul\":644:705   */\n      tag_85\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":634:705   */\n      swap2\n      pop\n        /* \"#utility.yul\":590:715   */\n      pop\n        /* \"#utility.yul\":518:722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":728:990   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":836:838   */\n      0x20\n        /* \"#utility.yul\":824:833   */\n      dup3\n        /* \"#utility.yul\":815:822   */\n      dup5\n        /* \"#utility.yul\":811:834   */\n      sub\n        /* \"#utility.yul\":807:839   */\n      slt\n        /* \"#utility.yul\":804:806   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":849:850   */\n      dup1\n        /* \"#utility.yul\":842:854   */\n      revert\n        /* \"#utility.yul\":804:806   */\n    tag_100:\n        /* \"#utility.yul\":895:896   */\n      0x00\n        /* \"#utility.yul\":920:973   */\n      tag_101\n        /* \"#utility.yul\":965:972   */\n      dup5\n        /* \"#utility.yul\":956:962   */\n      dup3\n        /* \"#utility.yul\":945:954   */\n      dup6\n        /* \"#utility.yul\":941:963   */\n      add\n        /* \"#utility.yul\":920:973   */\n      tag_89\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":910:973   */\n      swap2\n      pop\n        /* \"#utility.yul\":866:983   */\n      pop\n        /* \"#utility.yul\":794:990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":996:1280   */\n    tag_59:\n      0x00\n        /* \"#utility.yul\":1115:1117   */\n      0x20\n        /* \"#utility.yul\":1103:1112   */\n      dup3\n        /* \"#utility.yul\":1094:1101   */\n      dup5\n        /* \"#utility.yul\":1090:1113   */\n      sub\n        /* \"#utility.yul\":1086:1118   */\n      slt\n        /* \"#utility.yul\":1083:1085   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1131:1132   */\n      0x00\n        /* \"#utility.yul\":1128:1129   */\n      dup1\n        /* \"#utility.yul\":1121:1133   */\n      revert\n        /* \"#utility.yul\":1083:1085   */\n    tag_103:\n        /* \"#utility.yul\":1174:1175   */\n      0x00\n        /* \"#utility.yul\":1199:1263   */\n      tag_104\n        /* \"#utility.yul\":1255:1262   */\n      dup5\n        /* \"#utility.yul\":1246:1252   */\n      dup3\n        /* \"#utility.yul\":1235:1244   */\n      dup6\n        /* \"#utility.yul\":1231:1253   */\n      add\n        /* \"#utility.yul\":1199:1263   */\n      tag_93\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1189:1263   */\n      swap2\n      pop\n        /* \"#utility.yul\":1145:1273   */\n      pop\n        /* \"#utility.yul\":1073:1280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1286:1693   */\n    tag_42:\n      0x00\n      dup1\n        /* \"#utility.yul\":1411:1413   */\n      0x40\n        /* \"#utility.yul\":1399:1408   */\n      dup4\n        /* \"#utility.yul\":1390:1397   */\n      dup6\n        /* \"#utility.yul\":1386:1409   */\n      sub\n        /* \"#utility.yul\":1382:1414   */\n      slt\n        /* \"#utility.yul\":1379:1381   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1424:1425   */\n      dup1\n        /* \"#utility.yul\":1417:1429   */\n      revert\n        /* \"#utility.yul\":1379:1381   */\n    tag_106:\n        /* \"#utility.yul\":1470:1471   */\n      0x00\n        /* \"#utility.yul\":1495:1548   */\n      tag_107\n        /* \"#utility.yul\":1540:1547   */\n      dup6\n        /* \"#utility.yul\":1531:1537   */\n      dup3\n        /* \"#utility.yul\":1520:1529   */\n      dup7\n        /* \"#utility.yul\":1516:1538   */\n      add\n        /* \"#utility.yul\":1495:1548   */\n      tag_89\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1485:1548   */\n      swap3\n      pop\n        /* \"#utility.yul\":1441:1558   */\n      pop\n        /* \"#utility.yul\":1597:1599   */\n      0x20\n        /* \"#utility.yul\":1623:1676   */\n      tag_108\n        /* \"#utility.yul\":1668:1675   */\n      dup6\n        /* \"#utility.yul\":1659:1665   */\n      dup3\n        /* \"#utility.yul\":1648:1657   */\n      dup7\n        /* \"#utility.yul\":1644:1666   */\n      add\n        /* \"#utility.yul\":1623:1676   */\n      tag_89\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1613:1676   */\n      swap2\n      pop\n        /* \"#utility.yul\":1568:1686   */\n      pop\n        /* \"#utility.yul\":1369:1693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1807   */\n    tag_109:\n        /* \"#utility.yul\":1776:1800   */\n      tag_111\n        /* \"#utility.yul\":1794:1799   */\n      dup2\n        /* \"#utility.yul\":1776:1800   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1771:1774   */\n      dup3\n        /* \"#utility.yul\":1764:1801   */\n      mstore\n        /* \"#utility.yul\":1754:1807   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1813:1931   */\n    tag_113:\n        /* \"#utility.yul\":1900:1924   */\n      tag_115\n        /* \"#utility.yul\":1918:1923   */\n      dup2\n        /* \"#utility.yul\":1900:1924   */\n      tag_112\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1895:1898   */\n      dup3\n        /* \"#utility.yul\":1888:1925   */\n      mstore\n        /* \"#utility.yul\":1878:1931   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1937:2096   */\n    tag_116:\n        /* \"#utility.yul\":2038:2089   */\n      tag_118\n        /* \"#utility.yul\":2083:2088   */\n      dup2\n        /* \"#utility.yul\":2038:2089   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2033:2036   */\n      dup3\n        /* \"#utility.yul\":2026:2090   */\n      mstore\n        /* \"#utility.yul\":2016:2096   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2271   */\n    tag_120:\n        /* \"#utility.yul\":2208:2264   */\n      tag_122\n        /* \"#utility.yul\":2258:2263   */\n      dup2\n        /* \"#utility.yul\":2208:2264   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2203:2206   */\n      dup3\n        /* \"#utility.yul\":2196:2265   */\n      mstore\n        /* \"#utility.yul\":2186:2271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2277:2424   */\n    tag_124:\n        /* \"#utility.yul\":2372:2417   */\n      tag_126\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2372:2417   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2367:2370   */\n      dup3\n        /* \"#utility.yul\":2360:2418   */\n      mstore\n        /* \"#utility.yul\":2350:2424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:4145   */\n    tag_128:\n        /* \"#utility.yul\":2697:2703   */\n      0x0100\n        /* \"#utility.yul\":2692:2695   */\n      dup3\n        /* \"#utility.yul\":2688:2704   */\n      add\n        /* \"#utility.yul\":2789:2793   */\n      0x00\n        /* \"#utility.yul\":2782:2787   */\n      dup3\n        /* \"#utility.yul\":2778:2794   */\n      add\n        /* \"#utility.yul\":2772:2795   */\n      mload\n        /* \"#utility.yul\":2808:2871   */\n      tag_130\n        /* \"#utility.yul\":2865:2869   */\n      0x00\n        /* \"#utility.yul\":2860:2863   */\n      dup6\n        /* \"#utility.yul\":2856:2870   */\n      add\n        /* \"#utility.yul\":2842:2854   */\n      dup3\n        /* \"#utility.yul\":2808:2871   */\n      tag_109\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2714:2881   */\n      pop\n        /* \"#utility.yul\":2967:2971   */\n      0x20\n        /* \"#utility.yul\":2960:2965   */\n      dup3\n        /* \"#utility.yul\":2956:2972   */\n      add\n        /* \"#utility.yul\":2950:2973   */\n      mload\n        /* \"#utility.yul\":2986:3049   */\n      tag_131\n        /* \"#utility.yul\":3043:3047   */\n      0x20\n        /* \"#utility.yul\":3038:3041   */\n      dup6\n        /* \"#utility.yul\":3034:3048   */\n      add\n        /* \"#utility.yul\":3020:3032   */\n      dup3\n        /* \"#utility.yul\":2986:3049   */\n      tag_109\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2891:3059   */\n      pop\n        /* \"#utility.yul\":3140:3144   */\n      0x40\n        /* \"#utility.yul\":3133:3138   */\n      dup3\n        /* \"#utility.yul\":3129:3145   */\n      add\n        /* \"#utility.yul\":3123:3146   */\n      mload\n        /* \"#utility.yul\":3159:3220   */\n      tag_132\n        /* \"#utility.yul\":3214:3218   */\n      0x40\n        /* \"#utility.yul\":3209:3212   */\n      dup6\n        /* \"#utility.yul\":3205:3219   */\n      add\n        /* \"#utility.yul\":3191:3203   */\n      dup3\n        /* \"#utility.yul\":3159:3220   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3069:3230   */\n      pop\n        /* \"#utility.yul\":3317:3321   */\n      0x60\n        /* \"#utility.yul\":3310:3315   */\n      dup3\n        /* \"#utility.yul\":3306:3322   */\n      add\n        /* \"#utility.yul\":3300:3323   */\n      mload\n        /* \"#utility.yul\":3336:3399   */\n      tag_134\n        /* \"#utility.yul\":3393:3397   */\n      0x60\n        /* \"#utility.yul\":3388:3391   */\n      dup6\n        /* \"#utility.yul\":3384:3398   */\n      add\n        /* \"#utility.yul\":3370:3382   */\n      dup3\n        /* \"#utility.yul\":3336:3399   */\n      tag_109\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3240:3409   */\n      pop\n        /* \"#utility.yul\":3495:3499   */\n      0x80\n        /* \"#utility.yul\":3488:3493   */\n      dup3\n        /* \"#utility.yul\":3484:3500   */\n      add\n        /* \"#utility.yul\":3478:3501   */\n      mload\n        /* \"#utility.yul\":3514:3577   */\n      tag_135\n        /* \"#utility.yul\":3571:3575   */\n      0x80\n        /* \"#utility.yul\":3566:3569   */\n      dup6\n        /* \"#utility.yul\":3562:3576   */\n      add\n        /* \"#utility.yul\":3548:3560   */\n      dup3\n        /* \"#utility.yul\":3514:3577   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3419:3587   */\n      pop\n        /* \"#utility.yul\":3673:3677   */\n      0xa0\n        /* \"#utility.yul\":3666:3671   */\n      dup3\n        /* \"#utility.yul\":3662:3678   */\n      add\n        /* \"#utility.yul\":3656:3679   */\n      mload\n        /* \"#utility.yul\":3692:3755   */\n      tag_137\n        /* \"#utility.yul\":3749:3753   */\n      0xa0\n        /* \"#utility.yul\":3744:3747   */\n      dup6\n        /* \"#utility.yul\":3740:3754   */\n      add\n        /* \"#utility.yul\":3726:3738   */\n      dup3\n        /* \"#utility.yul\":3692:3755   */\n      tag_136\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3597:3765   */\n      pop\n        /* \"#utility.yul\":3859:3863   */\n      0xc0\n        /* \"#utility.yul\":3852:3857   */\n      dup3\n        /* \"#utility.yul\":3848:3864   */\n      add\n        /* \"#utility.yul\":3842:3865   */\n      mload\n        /* \"#utility.yul\":3878:3941   */\n      tag_138\n        /* \"#utility.yul\":3935:3939   */\n      0xc0\n        /* \"#utility.yul\":3930:3933   */\n      dup6\n        /* \"#utility.yul\":3926:3940   */\n      add\n        /* \"#utility.yul\":3912:3924   */\n      dup3\n        /* \"#utility.yul\":3878:3941   */\n      tag_136\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3775:3951   */\n      pop\n        /* \"#utility.yul\":4046:4050   */\n      0xe0\n        /* \"#utility.yul\":4039:4044   */\n      dup3\n        /* \"#utility.yul\":4035:4051   */\n      add\n        /* \"#utility.yul\":4029:4052   */\n      mload\n        /* \"#utility.yul\":4065:4128   */\n      tag_139\n        /* \"#utility.yul\":4122:4126   */\n      0xe0\n        /* \"#utility.yul\":4117:4120   */\n      dup6\n        /* \"#utility.yul\":4113:4127   */\n      add\n        /* \"#utility.yul\":4099:4111   */\n      dup3\n        /* \"#utility.yul\":4065:4128   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3961:4138   */\n      pop\n        /* \"#utility.yul\":2666:4145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4247:5870   */\n    tag_141:\n        /* \"#utility.yul\":4422:4428   */\n      0x0100\n        /* \"#utility.yul\":4417:4420   */\n      dup3\n        /* \"#utility.yul\":4413:4429   */\n      add\n        /* \"#utility.yul\":4514:4518   */\n      0x00\n        /* \"#utility.yul\":4507:4512   */\n      dup3\n        /* \"#utility.yul\":4503:4519   */\n      add\n        /* \"#utility.yul\":4497:4520   */\n      mload\n        /* \"#utility.yul\":4533:4596   */\n      tag_143\n        /* \"#utility.yul\":4590:4594   */\n      0x00\n        /* \"#utility.yul\":4585:4588   */\n      dup6\n        /* \"#utility.yul\":4581:4595   */\n      add\n        /* \"#utility.yul\":4567:4579   */\n      dup3\n        /* \"#utility.yul\":4533:4596   */\n      tag_109\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4439:4606   */\n      pop\n        /* \"#utility.yul\":4692:4696   */\n      0x20\n        /* \"#utility.yul\":4685:4690   */\n      dup3\n        /* \"#utility.yul\":4681:4697   */\n      add\n        /* \"#utility.yul\":4675:4698   */\n      mload\n        /* \"#utility.yul\":4711:4774   */\n      tag_144\n        /* \"#utility.yul\":4768:4772   */\n      0x20\n        /* \"#utility.yul\":4763:4766   */\n      dup6\n        /* \"#utility.yul\":4759:4773   */\n      add\n        /* \"#utility.yul\":4745:4757   */\n      dup3\n        /* \"#utility.yul\":4711:4774   */\n      tag_109\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4616:4784   */\n      pop\n        /* \"#utility.yul\":4865:4869   */\n      0x40\n        /* \"#utility.yul\":4858:4863   */\n      dup3\n        /* \"#utility.yul\":4854:4870   */\n      add\n        /* \"#utility.yul\":4848:4871   */\n      mload\n        /* \"#utility.yul\":4884:4945   */\n      tag_145\n        /* \"#utility.yul\":4939:4943   */\n      0x40\n        /* \"#utility.yul\":4934:4937   */\n      dup6\n        /* \"#utility.yul\":4930:4944   */\n      add\n        /* \"#utility.yul\":4916:4928   */\n      dup3\n        /* \"#utility.yul\":4884:4945   */\n      tag_133\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4794:4955   */\n      pop\n        /* \"#utility.yul\":5042:5046   */\n      0x60\n        /* \"#utility.yul\":5035:5040   */\n      dup3\n        /* \"#utility.yul\":5031:5047   */\n      add\n        /* \"#utility.yul\":5025:5048   */\n      mload\n        /* \"#utility.yul\":5061:5124   */\n      tag_146\n        /* \"#utility.yul\":5118:5122   */\n      0x60\n        /* \"#utility.yul\":5113:5116   */\n      dup6\n        /* \"#utility.yul\":5109:5123   */\n      add\n        /* \"#utility.yul\":5095:5107   */\n      dup3\n        /* \"#utility.yul\":5061:5124   */\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4965:5134   */\n      pop\n        /* \"#utility.yul\":5220:5224   */\n      0x80\n        /* \"#utility.yul\":5213:5218   */\n      dup3\n        /* \"#utility.yul\":5209:5225   */\n      add\n        /* \"#utility.yul\":5203:5226   */\n      mload\n        /* \"#utility.yul\":5239:5302   */\n      tag_147\n        /* \"#utility.yul\":5296:5300   */\n      0x80\n        /* \"#utility.yul\":5291:5294   */\n      dup6\n        /* \"#utility.yul\":5287:5301   */\n      add\n        /* \"#utility.yul\":5273:5285   */\n      dup3\n        /* \"#utility.yul\":5239:5302   */\n      tag_136\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5144:5312   */\n      pop\n        /* \"#utility.yul\":5399:5403   */\n      0xa0\n        /* \"#utility.yul\":5392:5397   */\n      dup3\n        /* \"#utility.yul\":5388:5404   */\n      add\n        /* \"#utility.yul\":5382:5405   */\n      mload\n        /* \"#utility.yul\":5418:5481   */\n      tag_148\n        /* \"#utility.yul\":5475:5479   */\n      0xa0\n        /* \"#utility.yul\":5470:5473   */\n      dup6\n        /* \"#utility.yul\":5466:5480   */\n      add\n        /* \"#utility.yul\":5452:5464   */\n      dup3\n        /* \"#utility.yul\":5418:5481   */\n      tag_136\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5322:5491   */\n      pop\n        /* \"#utility.yul\":5584:5588   */\n      0xc0\n        /* \"#utility.yul\":5577:5582   */\n      dup3\n        /* \"#utility.yul\":5573:5589   */\n      add\n        /* \"#utility.yul\":5567:5590   */\n      mload\n        /* \"#utility.yul\":5603:5666   */\n      tag_149\n        /* \"#utility.yul\":5660:5664   */\n      0xc0\n        /* \"#utility.yul\":5655:5658   */\n      dup6\n        /* \"#utility.yul\":5651:5665   */\n      add\n        /* \"#utility.yul\":5637:5649   */\n      dup3\n        /* \"#utility.yul\":5603:5666   */\n      tag_136\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5501:5676   */\n      pop\n        /* \"#utility.yul\":5771:5775   */\n      0xe0\n        /* \"#utility.yul\":5764:5769   */\n      dup3\n        /* \"#utility.yul\":5760:5776   */\n      add\n        /* \"#utility.yul\":5754:5777   */\n      mload\n        /* \"#utility.yul\":5790:5853   */\n      tag_150\n        /* \"#utility.yul\":5847:5851   */\n      0xe0\n        /* \"#utility.yul\":5842:5845   */\n      dup6\n        /* \"#utility.yul\":5838:5852   */\n      add\n        /* \"#utility.yul\":5824:5836   */\n      dup3\n        /* \"#utility.yul\":5790:5853   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5686:5863   */\n      pop\n        /* \"#utility.yul\":4391:5870   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5876:5984   */\n    tag_140:\n        /* \"#utility.yul\":5953:5977   */\n      tag_152\n        /* \"#utility.yul\":5971:5976   */\n      dup2\n        /* \"#utility.yul\":5953:5977   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5948:5951   */\n      dup3\n        /* \"#utility.yul\":5941:5978   */\n      mstore\n        /* \"#utility.yul\":5931:5984   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5990:6095   */\n    tag_133:\n        /* \"#utility.yul\":6065:6088   */\n      tag_155\n        /* \"#utility.yul\":6082:6087   */\n      dup2\n        /* \"#utility.yul\":6065:6088   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6060:6063   */\n      dup3\n        /* \"#utility.yul\":6053:6089   */\n      mstore\n        /* \"#utility.yul\":6043:6095   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6216   */\n    tag_157:\n        /* \"#utility.yul\":6186:6209   */\n      tag_159\n        /* \"#utility.yul\":6203:6208   */\n      dup2\n        /* \"#utility.yul\":6186:6209   */\n      tag_156\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6210   */\n      mstore\n        /* \"#utility.yul\":6164:6216   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6222:6330   */\n    tag_136:\n        /* \"#utility.yul\":6299:6323   */\n      tag_161\n        /* \"#utility.yul\":6317:6322   */\n      dup2\n        /* \"#utility.yul\":6299:6323   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6294:6297   */\n      dup3\n        /* \"#utility.yul\":6287:6324   */\n      mstore\n        /* \"#utility.yul\":6277:6330   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6336:6454   */\n    tag_163:\n        /* \"#utility.yul\":6423:6447   */\n      tag_165\n        /* \"#utility.yul\":6441:6446   */\n      dup2\n        /* \"#utility.yul\":6423:6447   */\n      tag_162\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6418:6421   */\n      dup3\n        /* \"#utility.yul\":6411:6448   */\n      mstore\n        /* \"#utility.yul\":6401:6454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6460:6682   */\n    tag_19:\n      0x00\n        /* \"#utility.yul\":6591:6593   */\n      0x20\n        /* \"#utility.yul\":6580:6589   */\n      dup3\n        /* \"#utility.yul\":6576:6594   */\n      add\n        /* \"#utility.yul\":6568:6594   */\n      swap1\n      pop\n        /* \"#utility.yul\":6604:6675   */\n      tag_167\n        /* \"#utility.yul\":6672:6673   */\n      0x00\n        /* \"#utility.yul\":6661:6670   */\n      dup4\n        /* \"#utility.yul\":6657:6674   */\n      add\n        /* \"#utility.yul\":6648:6654   */\n      dup5\n        /* \"#utility.yul\":6604:6675   */\n      tag_113\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6558:6682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:7036   */\n    tag_74:\n      0x00\n        /* \"#utility.yul\":6855:6857   */\n      0x40\n        /* \"#utility.yul\":6844:6853   */\n      dup3\n        /* \"#utility.yul\":6840:6858   */\n      add\n        /* \"#utility.yul\":6832:6858   */\n      swap1\n      pop\n        /* \"#utility.yul\":6868:6939   */\n      tag_169\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6925:6934   */\n      dup4\n        /* \"#utility.yul\":6921:6938   */\n      add\n        /* \"#utility.yul\":6912:6918   */\n      dup6\n        /* \"#utility.yul\":6868:6939   */\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6949:7029   */\n      tag_170\n        /* \"#utility.yul\":7025:7027   */\n      0x20\n        /* \"#utility.yul\":7014:7023   */\n      dup4\n        /* \"#utility.yul\":7010:7028   */\n      add\n        /* \"#utility.yul\":7001:7007   */\n      dup5\n        /* \"#utility.yul\":6949:7029   */\n      tag_124\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6822:7036   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7042:7374   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":7201:7203   */\n      0x40\n        /* \"#utility.yul\":7190:7199   */\n      dup3\n        /* \"#utility.yul\":7186:7204   */\n      add\n        /* \"#utility.yul\":7178:7204   */\n      swap1\n      pop\n        /* \"#utility.yul\":7214:7285   */\n      tag_172\n        /* \"#utility.yul\":7282:7283   */\n      0x00\n        /* \"#utility.yul\":7271:7280   */\n      dup4\n        /* \"#utility.yul\":7267:7284   */\n      add\n        /* \"#utility.yul\":7258:7264   */\n      dup6\n        /* \"#utility.yul\":7214:7285   */\n      tag_113\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7295:7367   */\n      tag_173\n        /* \"#utility.yul\":7363:7365   */\n      0x20\n        /* \"#utility.yul\":7352:7361   */\n      dup4\n        /* \"#utility.yul\":7348:7366   */\n      add\n        /* \"#utility.yul\":7339:7345   */\n      dup5\n        /* \"#utility.yul\":7295:7367   */\n      tag_163\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7168:7374   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7380:7630   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":7525:7527   */\n      0x20\n        /* \"#utility.yul\":7514:7523   */\n      dup3\n        /* \"#utility.yul\":7510:7528   */\n      add\n        /* \"#utility.yul\":7502:7528   */\n      swap1\n      pop\n        /* \"#utility.yul\":7538:7623   */\n      tag_175\n        /* \"#utility.yul\":7620:7621   */\n      0x00\n        /* \"#utility.yul\":7609:7618   */\n      dup4\n        /* \"#utility.yul\":7605:7622   */\n      add\n        /* \"#utility.yul\":7596:7602   */\n      dup5\n        /* \"#utility.yul\":7538:7623   */\n      tag_116\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7492:7630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7636:7896   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":7786:7788   */\n      0x20\n        /* \"#utility.yul\":7775:7784   */\n      dup3\n        /* \"#utility.yul\":7771:7789   */\n      add\n        /* \"#utility.yul\":7763:7789   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:7889   */\n      tag_177\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7875:7884   */\n      dup4\n        /* \"#utility.yul\":7871:7888   */\n      add\n        /* \"#utility.yul\":7862:7868   */\n      dup5\n        /* \"#utility.yul\":7799:7889   */\n      tag_120\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7753:7896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7902:8277   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":8109:8112   */\n      0x0100\n        /* \"#utility.yul\":8098:8107   */\n      dup3\n        /* \"#utility.yul\":8094:8113   */\n      add\n        /* \"#utility.yul\":8086:8113   */\n      swap1\n      pop\n        /* \"#utility.yul\":8123:8270   */\n      tag_179\n        /* \"#utility.yul\":8267:8268   */\n      0x00\n        /* \"#utility.yul\":8256:8265   */\n      dup4\n        /* \"#utility.yul\":8252:8269   */\n      add\n        /* \"#utility.yul\":8243:8249   */\n      dup5\n        /* \"#utility.yul\":8123:8270   */\n      tag_128\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8076:8277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8283:8662   */\n    tag_67:\n      0x00\n        /* \"#utility.yul\":8492:8495   */\n      0x0100\n        /* \"#utility.yul\":8481:8490   */\n      dup3\n        /* \"#utility.yul\":8477:8496   */\n      add\n        /* \"#utility.yul\":8469:8496   */\n      swap1\n      pop\n        /* \"#utility.yul\":8506:8655   */\n      tag_181\n        /* \"#utility.yul\":8652:8653   */\n      0x00\n        /* \"#utility.yul\":8641:8650   */\n      dup4\n        /* \"#utility.yul\":8637:8654   */\n      add\n        /* \"#utility.yul\":8628:8634   */\n      dup5\n        /* \"#utility.yul\":8506:8655   */\n      tag_141\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":8459:8662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8668:8886   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":8797:8799   */\n      0x20\n        /* \"#utility.yul\":8786:8795   */\n      dup3\n        /* \"#utility.yul\":8782:8800   */\n      add\n        /* \"#utility.yul\":8774:8800   */\n      swap1\n      pop\n        /* \"#utility.yul\":8810:8879   */\n      tag_183\n        /* \"#utility.yul\":8876:8877   */\n      0x00\n        /* \"#utility.yul\":8865:8874   */\n      dup4\n        /* \"#utility.yul\":8861:8878   */\n      add\n        /* \"#utility.yul\":8852:8858   */\n      dup5\n        /* \"#utility.yul\":8810:8879   */\n      tag_157\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":8764:8886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8892:9114   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":9023:9025   */\n      0x20\n        /* \"#utility.yul\":9012:9021   */\n      dup3\n        /* \"#utility.yul\":9008:9026   */\n      add\n        /* \"#utility.yul\":9000:9026   */\n      swap1\n      pop\n        /* \"#utility.yul\":9036:9107   */\n      tag_185\n        /* \"#utility.yul\":9104:9105   */\n      0x00\n        /* \"#utility.yul\":9093:9102   */\n      dup4\n        /* \"#utility.yul\":9089:9106   */\n      add\n        /* \"#utility.yul\":9080:9086   */\n      dup5\n        /* \"#utility.yul\":9036:9107   */\n      tag_163\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":8990:9114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9120:9216   */\n    tag_112:\n      0x00\n        /* \"#utility.yul\":9186:9210   */\n      tag_187\n        /* \"#utility.yul\":9204:9209   */\n      dup3\n        /* \"#utility.yul\":9186:9210   */\n      tag_153\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":9175:9210   */\n      swap1\n      pop\n        /* \"#utility.yul\":9165:9216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9222:9312   */\n    tag_188:\n      0x00\n        /* \"#utility.yul\":9299:9304   */\n      dup2\n        /* \"#utility.yul\":9292:9305   */\n      iszero\n        /* \"#utility.yul\":9285:9306   */\n      iszero\n        /* \"#utility.yul\":9274:9306   */\n      swap1\n      pop\n        /* \"#utility.yul\":9264:9312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9318:9444   */\n    tag_153:\n      0x00\n        /* \"#utility.yul\":9395:9437   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9388:9393   */\n      dup3\n        /* \"#utility.yul\":9384:9438   */\n      and\n        /* \"#utility.yul\":9373:9438   */\n      swap1\n      pop\n        /* \"#utility.yul\":9363:9444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9450:9541   */\n    tag_156:\n      0x00\n        /* \"#utility.yul\":9526:9534   */\n      0xffffff\n        /* \"#utility.yul\":9519:9524   */\n      dup3\n        /* \"#utility.yul\":9515:9535   */\n      and\n        /* \"#utility.yul\":9504:9535   */\n      swap1\n      pop\n        /* \"#utility.yul\":9494:9541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9547:9624   */\n    tag_162:\n      0x00\n        /* \"#utility.yul\":9613:9618   */\n      dup2\n        /* \"#utility.yul\":9602:9618   */\n      swap1\n      pop\n        /* \"#utility.yul\":9592:9624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9630:9784   */\n    tag_119:\n      0x00\n        /* \"#utility.yul\":9727:9778   */\n      tag_194\n        /* \"#utility.yul\":9772:9777   */\n      dup3\n        /* \"#utility.yul\":9727:9778   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":9714:9778   */\n      swap1\n      pop\n        /* \"#utility.yul\":9704:9784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9790:9917   */\n    tag_195:\n      0x00\n        /* \"#utility.yul\":9887:9911   */\n      tag_197\n        /* \"#utility.yul\":9905:9910   */\n      dup3\n        /* \"#utility.yul\":9887:9911   */\n      tag_153\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9874:9911   */\n      swap1\n      pop\n        /* \"#utility.yul\":9864:9917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9923:10087   */\n    tag_123:\n      0x00\n        /* \"#utility.yul\":10025:10081   */\n      tag_199\n        /* \"#utility.yul\":10075:10080   */\n      dup3\n        /* \"#utility.yul\":10025:10081   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":10012:10081   */\n      swap1\n      pop\n        /* \"#utility.yul\":10002:10087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10093:10225   */\n    tag_200:\n      0x00\n        /* \"#utility.yul\":10195:10219   */\n      tag_202\n        /* \"#utility.yul\":10213:10218   */\n      dup3\n        /* \"#utility.yul\":10195:10219   */\n      tag_153\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":10182:10219   */\n      swap1\n      pop\n        /* \"#utility.yul\":10172:10225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10231:10352   */\n    tag_127:\n      0x00\n        /* \"#utility.yul\":10322:10346   */\n      tag_204\n        /* \"#utility.yul\":10340:10345   */\n      dup3\n        /* \"#utility.yul\":10322:10346   */\n      tag_162\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":10309:10346   */\n      swap1\n      pop\n        /* \"#utility.yul\":10299:10352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10358:10474   */\n    tag_88:\n        /* \"#utility.yul\":10428:10449   */\n      tag_206\n        /* \"#utility.yul\":10443:10448   */\n      dup2\n        /* \"#utility.yul\":10428:10449   */\n      tag_188\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":10421:10426   */\n      dup2\n        /* \"#utility.yul\":10418:10450   */\n      eq\n        /* \"#utility.yul\":10408:10410   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":10464:10465   */\n      0x00\n        /* \"#utility.yul\":10461:10462   */\n      dup1\n        /* \"#utility.yul\":10454:10466   */\n      revert\n        /* \"#utility.yul\":10408:10410   */\n    tag_207:\n        /* \"#utility.yul\":10398:10474   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10480:10602   */\n    tag_92:\n        /* \"#utility.yul\":10553:10577   */\n      tag_209\n        /* \"#utility.yul\":10571:10576   */\n      dup2\n        /* \"#utility.yul\":10553:10577   */\n      tag_162\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10546:10551   */\n      dup2\n        /* \"#utility.yul\":10543:10578   */\n      eq\n        /* \"#utility.yul\":10533:10535   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":10592:10593   */\n      0x00\n        /* \"#utility.yul\":10589:10590   */\n      dup1\n        /* \"#utility.yul\":10582:10594   */\n      revert\n        /* \"#utility.yul\":10533:10535   */\n    tag_210:\n        /* \"#utility.yul\":10523:10602   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fcfcb82bdc3f36449ea0962ef0834b7c288003d3dcfe458fcb0ccee6bc08c78d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405273e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b81525073326c977e6efc84e512bb9c30f76e30c160ed06fb6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100ae57600080fd5b5060805160601c610d4b6100e56000398061023c5280610395528061046052806104c3528061061b528061070c5250610d4b6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806373bd43ad1161005b57806373bd43ad14610105578063ad5c464814610135578063c31c9c0714610153578063c4b69a181461017157610088565b8063089fe6aa1461008d5780631b6b6d23146100ab5780633268cc56146100c957806357970e93146100e7575b600080fd5b6100956101a1565b6040516100a29190610c00565b60405180910390f35b6100b36101a7565b6040516100c09190610b25565b60405180910390f35b6100d16101bf565b6040516100de9190610b25565b60405180910390f35b6100ef6101d7565b6040516100fc9190610b92565b60405180910390f35b61011f600480360381019061011a91906108bd565b6101fb565b60405161012c9190610c1b565b60405180910390f35b61013d610446565b60405161014a9190610b25565b60405180910390f35b61015b61045e565b6040516101689190610bad565b60405180910390f35b61018b6004803603810190610186919061090f565b610482565b6040516101989190610c1b565b60405180910390f35b610bb881565b73326c977e6efc84e512bb9c30f76e30c160ed06fb81565b73e592427a0aece92de3edee1f18e0157c0586156481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610279929190610b69565b602060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610894565b50600060405180610100016040528073326c977e6efc84e512bb9c30f76e30c160ed06fb73ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103ec9190610bc8565b602060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e91906108e6565b915050919050565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610500929190610b69565b602060405180830381600087803b15801561051a57600080fd5b505af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610894565b50600060405180610100016040528073326c977e6efc84e512bb9c30f76e30c160ed06fb73ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016106729190610be4565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c491906108e6565b91508282101561084e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f000000000000000000000000000000000000000000000000000000000000000060006040518363ffffffff1660e01b815260040161074a929190610b40565b602060405180830381600087803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610894565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb308486036040518363ffffffff1660e01b81526004016107fa929190610b69565b602060405180830381600087803b15801561081457600080fd5b505af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190610894565b505b5092915050565b60008151905061086481610ce7565b92915050565b60008135905061087981610cfe565b92915050565b60008151905061088e81610cfe565b92915050565b6000602082840312156108a657600080fd5b60006108b484828501610855565b91505092915050565b6000602082840312156108cf57600080fd5b60006108dd8482850161086a565b91505092915050565b6000602082840312156108f857600080fd5b60006109068482850161087f565b91505092915050565b6000806040838503121561092257600080fd5b60006109308582860161086a565b92505060206109418582860161086a565b9150509250929050565b61095481610c36565b82525050565b61096381610c36565b82525050565b61097281610c8d565b82525050565b61098181610cb1565b82525050565b61099081610cd5565b82525050565b610100820160008201516109ad600085018261094b565b5060208201516109c0602085018261094b565b5060408201516109d36040850182610ae9565b5060608201516109e6606085018261094b565b5060808201516109f96080850182610b07565b5060a0820151610a0c60a0850182610b07565b5060c0820151610a1f60c0850182610b07565b5060e0820151610a3260e0850182610ada565b50505050565b61010082016000820151610a4f600085018261094b565b506020820151610a62602085018261094b565b506040820151610a756040850182610ae9565b506060820151610a88606085018261094b565b506080820151610a9b6080850182610b07565b5060a0820151610aae60a0850182610b07565b5060c0820151610ac160c0850182610b07565b5060e0820151610ad460e0850182610ada565b50505050565b610ae381610c54565b82525050565b610af281610c74565b82525050565b610b0181610c74565b82525050565b610b1081610c83565b82525050565b610b1f81610c83565b82525050565b6000602082019050610b3a600083018461095a565b92915050565b6000604082019050610b55600083018561095a565b610b626020830184610987565b9392505050565b6000604082019050610b7e600083018561095a565b610b8b6020830184610b16565b9392505050565b6000602082019050610ba76000830184610969565b92915050565b6000602082019050610bc26000830184610978565b92915050565b600061010082019050610bde6000830184610996565b92915050565b600061010082019050610bfa6000830184610a38565b92915050565b6000602082019050610c156000830184610af8565b92915050565b6000602082019050610c306000830184610b16565b92915050565b6000610c4182610c54565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610c9882610c9f565b9050919050565b6000610caa82610c54565b9050919050565b6000610cbc82610cc3565b9050919050565b6000610cce82610c54565b9050919050565b6000610ce082610c83565b9050919050565b610cf081610c48565b8114610cfb57600080fd5b50565b610d0781610c83565b8114610d1257600080fd5b5056fea2646970667358221220fcfcb82bdc3f36449ea0962ef0834b7c288003d3dcfe458fcb0ccee6bc08c78d64736f6c63430007060033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xD4B PUSH2 0xE5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x23C MSTORE DUP1 PUSH2 0x395 MSTORE DUP1 PUSH2 0x460 MSTORE DUP1 PUSH2 0x4C3 MSTORE DUP1 PUSH2 0x61B MSTORE DUP1 PUSH2 0x70C MSTORE POP PUSH2 0xD4B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73BD43AD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x171 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB DUP2 JUMP JUMPDEST PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP3 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 DUP7 SUB PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x828 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x864 DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x879 DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B4 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DD DUP5 DUP3 DUP6 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x930 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x941 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x981 DUP2 PUSH2 0xCB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x9AD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x9C0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x9D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x9E6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x9F9 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xA0C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xA1F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xA32 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xA4F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xA62 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xA75 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xA88 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xA9B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xAAE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xAC1 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xAD4 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAF2 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAA DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 PUSH2 0xC83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD07 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP2 EQ PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xFC 0xB8 0x2B 0xDC EXTCODEHASH CALLDATASIZE DIFFICULTY SWAP15 LOG0 SWAP7 0x2E CREATE DUP4 0x4B PUSH29 0x288003D3DCFE458FCB0CCEE6BC08C78D64736F6C634300070600330000 ",
							"sourceMap": "434:2051:2:-:0;;;508:42;556:68;;;;;;;;;;;662:42;790:38;;;;;;;;;;;;;;;;;;;;938:16;;;;;;;;;;434:2051;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10605:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:3",
														"type": ""
													}
												],
												"src": "7:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:3",
														"type": ""
													}
												],
												"src": "150:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "368:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "336:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "344:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "352:5:3",
														"type": ""
													}
												],
												"src": "295:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "518:204:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "564:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "573:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "566:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "566:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "566:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "539:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "548:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "560:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "531:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:32:3"
															},
															"nodeType": "YulIf",
															"src": "528:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "590:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "605:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "619:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "609:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "634:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "677:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "688:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "697:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "644:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "634:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "499:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "511:6:3",
														"type": ""
													}
												],
												"src": "444:278:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:196:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "840:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "849:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "842:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "842:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "842:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "815:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "824:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "811:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "836:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "807:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:32:3"
															},
															"nodeType": "YulIf",
															"src": "804:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "866:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "881:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "895:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "885:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "910:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "945:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "956:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "941:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "941:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "965:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "920:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "910:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "764:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "775:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "787:6:3",
														"type": ""
													}
												],
												"src": "728:262:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:207:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1119:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1128:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1121:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1121:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1121:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1094:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1090:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1115:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1086:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:32:3"
															},
															"nodeType": "YulIf",
															"src": "1083:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1145:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1160:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1164:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1189:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1235:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1246:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1231:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1255:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1199:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1199:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1189:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1043:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1054:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1066:6:3",
														"type": ""
													}
												],
												"src": "996:284:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1369:324:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1415:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1424:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1427:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1417:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1417:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1417:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1390:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1399:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1386:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1386:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1411:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1382:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1382:32:3"
															},
															"nodeType": "YulIf",
															"src": "1379:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1441:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1456:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1470:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1460:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1485:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1520:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1531:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1516:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1516:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1540:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1495:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1485:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1568:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1583:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1587:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1613:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1648:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1659:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1644:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1623:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1613:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1331:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1342:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1354:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1362:6:3",
														"type": ""
													}
												],
												"src": "1286:407:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1771:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1794:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1776:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1764:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1742:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1749:3:3",
														"type": ""
													}
												],
												"src": "1699:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1918:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1900:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1900:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1866:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1873:3:3",
														"type": ""
													}
												],
												"src": "1813:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2016:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2033:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2083:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$139_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2038:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2038:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2026:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2004:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2011:3:3",
														"type": ""
													}
												],
												"src": "1937:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2186:85:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2203:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2258:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$109_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2208:49:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2208:56:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2196:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2196:69:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2174:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2181:3:3",
														"type": ""
													}
												],
												"src": "2102:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2350:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2367:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2372:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2372:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2360:58:3"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2338:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2345:3:3",
														"type": ""
													}
												],
												"src": "2277:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2666:1479:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2676:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2692:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:6:3",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:16:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2680:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2714:167:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2752:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2782:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2789:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2778:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2778:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2772:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2772:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2756:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2842:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2860:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2865:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2856:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2856:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2808:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2808:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2891:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2930:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2960:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2967:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2956:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2956:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2950:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2950:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2934:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3020:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3038:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3043:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3034:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3034:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2986:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2986:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2986:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3069:161:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3103:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3133:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3140:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3129:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3129:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3123:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3107:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3191:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3209:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3214:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3205:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3205:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "3159:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:61:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3159:61:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3240:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3280:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3310:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3317:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3306:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3306:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3300:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3300:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3284:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3370:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3388:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3393:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3384:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3384:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3336:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3336:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3419:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3458:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3488:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3495:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3484:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3478:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3462:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3548:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3566:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3571:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3562:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3562:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3514:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3514:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3597:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3636:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3666:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3673:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3662:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3662:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3656:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3656:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3640:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3726:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3744:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3749:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3740:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3740:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3692:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3692:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3775:176:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3822:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3852:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3859:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3848:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3848:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3842:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3842:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3826:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3912:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3930:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3935:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3926:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3926:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3878:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3878:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3961:177:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4009:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4039:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4046:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4035:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4035:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4029:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4029:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4013:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4099:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4117:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4122:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4113:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4113:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "4065:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4065:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4065:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2653:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2660:3:3",
														"type": ""
													}
												],
												"src": "2524:1621:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:1479:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4401:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4422:6:3",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:16:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4405:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4439:167:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4477:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4507:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4514:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4503:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4503:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4497:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4481:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4567:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4585:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4590:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4581:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4581:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4533:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4533:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4533:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4616:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4655:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4685:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4692:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4681:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4681:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4675:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4659:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4745:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4763:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4768:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4759:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4759:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4711:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4711:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4711:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4794:161:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4828:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4858:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4865:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4854:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4854:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4848:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4832:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4916:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4934:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4939:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4930:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4930:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "4884:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:61:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4884:61:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4965:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5005:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5035:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5042:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5031:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5031:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5025:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5009:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5095:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5113:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5118:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5109:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5109:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5061:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5061:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5061:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5144:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5183:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5213:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5220:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5209:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5209:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5203:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5203:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5187:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5273:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5291:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5296:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5287:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5287:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5239:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5239:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5322:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5362:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5392:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5399:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5388:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5388:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5382:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5366:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5452:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5470:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5475:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5466:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5466:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5418:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5418:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5418:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5501:175:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5547:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5577:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5584:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5573:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5573:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5567:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5551:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5637:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5655:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5660:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5651:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5651:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5603:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5603:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5603:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5686:177:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5734:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5764:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5771:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5760:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5760:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5754:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5754:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5738:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5824:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5842:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5847:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5838:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5838:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "5790:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5790:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4378:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4385:3:3",
														"type": ""
													}
												],
												"src": "4247:1623:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5931:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5948:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5971:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "5953:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5941:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5941:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5919:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5926:3:3",
														"type": ""
													}
												],
												"src": "5876:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6043:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6060:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6082:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "6065:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6065:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6053:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6053:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6053:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6031:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6038:3:3",
														"type": ""
													}
												],
												"src": "5990:105:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6164:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6203:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "6186:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6174:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6174:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6152:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6159:3:3",
														"type": ""
													}
												],
												"src": "6101:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6277:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6294:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6317:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6299:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6299:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6287:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6265:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6272:3:3",
														"type": ""
													}
												],
												"src": "6222:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6401:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6418:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6441:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6423:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6423:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6411:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6411:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6389:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6396:3:3",
														"type": ""
													}
												],
												"src": "6336:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6558:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6568:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6580:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6591:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6576:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6568:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6648:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6661:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6672:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6657:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6604:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6604:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6530:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6542:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6553:4:3",
														"type": ""
													}
												],
												"src": "6460:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6822:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6832:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6844:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6855:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6840:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6840:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6832:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6912:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6925:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6936:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6868:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6868:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7001:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7014:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7025:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7010:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7010:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6949:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:80:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6949:80:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6786:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6798:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6806:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6817:4:3",
														"type": ""
													}
												],
												"src": "6688:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7168:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7178:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7190:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7201:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7186:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7178:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7258:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7282:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7267:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7214:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7339:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7295:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7295:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7132:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7144:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7152:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7163:4:3",
														"type": ""
													}
												],
												"src": "7042:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7492:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7502:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7514:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7525:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7510:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7510:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7502:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7596:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7609:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7620:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7605:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7605:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7538:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7538:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7538:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$139__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7464:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7476:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7487:4:3",
														"type": ""
													}
												],
												"src": "7380:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7753:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7763:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7775:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7771:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7763:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7862:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7875:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7886:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7871:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7871:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7799:62:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7799:90:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7799:90:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$109__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7725:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7737:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7748:4:3",
														"type": ""
													}
												],
												"src": "7636:260:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8076:201:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8086:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8098:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8109:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8094:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8086:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8243:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8256:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8267:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8252:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8252:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8123:119:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8123:147:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8123:147:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8048:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8060:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8071:4:3",
														"type": ""
													}
												],
												"src": "7902:375:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8459:203:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8469:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8481:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8469:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8628:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8652:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8637:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8637:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8506:121:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8506:149:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8506:149:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$81_memory_ptr__to_t_struct$_ExactOutputSingleParams_$81_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8431:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8443:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8454:4:3",
														"type": ""
													}
												],
												"src": "8283:379:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8764:122:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8774:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8786:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8797:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8782:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8774:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8852:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8865:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8876:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8861:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8861:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8810:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8810:69:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8736:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8748:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8759:4:3",
														"type": ""
													}
												],
												"src": "8668:218:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8990:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9000:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9012:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9023:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9008:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9000:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9080:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9104:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9089:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9089:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9036:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9036:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9036:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8962:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8974:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8985:4:3",
														"type": ""
													}
												],
												"src": "8892:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9165:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9175:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9204:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9186:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9186:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9175:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9147:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9157:7:3",
														"type": ""
													}
												],
												"src": "9120:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9264:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9274:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9299:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9292:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9292:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9285:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9285:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9274:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9246:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9256:7:3",
														"type": ""
													}
												],
												"src": "9222:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9363:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9373:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9388:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9395:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9384:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9384:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9373:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9345:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9355:7:3",
														"type": ""
													}
												],
												"src": "9318:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9494:47:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9504:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9519:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9526:8:3",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9515:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:20:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9504:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9476:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9486:7:3",
														"type": ""
													}
												],
												"src": "9450:91:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9602:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9613:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9602:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9574:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9584:7:3",
														"type": ""
													}
												],
												"src": "9547:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9704:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9714:64:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9772:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$139_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9727:44:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:51:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9714:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$139_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9684:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9694:9:3",
														"type": ""
													}
												],
												"src": "9630:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9864:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9874:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9905:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9887:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9874:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$139_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9844:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9854:9:3",
														"type": ""
													}
												],
												"src": "9790:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10002:85:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10012:69:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10075:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_ISwapRouter_$109_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10025:49:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:56:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10012:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$109_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9982:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9992:9:3",
														"type": ""
													}
												],
												"src": "9923:164:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10172:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10182:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10213:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10195:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10195:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10182:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$109_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10152:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10162:9:3",
														"type": ""
													}
												],
												"src": "10093:132:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10299:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10309:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10340:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10322:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10322:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10309:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10279:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10289:9:3",
														"type": ""
													}
												],
												"src": "10231:121:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10398:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10452:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10461:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10464:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10454:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10454:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10454:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10443:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10428:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10428:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10418:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10418:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10411:40:3"
															},
															"nodeType": "YulIf",
															"src": "10408:2:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10391:5:3",
														"type": ""
													}
												],
												"src": "10358:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10523:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10580:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10589:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10592:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10582:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10582:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10582:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10546:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10571:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10553:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10553:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10543:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10543:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:43:3"
															},
															"nodeType": "YulIf",
															"src": "10533:2:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10516:5:3",
														"type": ""
													}
												],
												"src": "10480:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$139_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$109_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$139__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$109__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$81_memory_ptr__to_t_struct$_ExactOutputSingleParams_$81_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$139_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$139_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$139_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$109_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISwapRouter_$109_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$109_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"147": [
									{
										"length": 32,
										"start": 572
									},
									{
										"length": 32,
										"start": 917
									},
									{
										"length": 32,
										"start": 1120
									},
									{
										"length": 32,
										"start": 1219
									},
									{
										"length": 32,
										"start": 1563
									},
									{
										"length": 32,
										"start": 1804
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806373bd43ad1161005b57806373bd43ad14610105578063ad5c464814610135578063c31c9c0714610153578063c4b69a181461017157610088565b8063089fe6aa1461008d5780631b6b6d23146100ab5780633268cc56146100c957806357970e93146100e7575b600080fd5b6100956101a1565b6040516100a29190610c00565b60405180910390f35b6100b36101a7565b6040516100c09190610b25565b60405180910390f35b6100d16101bf565b6040516100de9190610b25565b60405180910390f35b6100ef6101d7565b6040516100fc9190610b92565b60405180910390f35b61011f600480360381019061011a91906108bd565b6101fb565b60405161012c9190610c1b565b60405180910390f35b61013d610446565b60405161014a9190610b25565b60405180910390f35b61015b61045e565b6040516101689190610bad565b60405180910390f35b61018b6004803603810190610186919061090f565b610482565b6040516101989190610c1b565b60405180910390f35b610bb881565b73326c977e6efc84e512bb9c30f76e30c160ed06fb81565b73e592427a0aece92de3edee1f18e0157c0586156481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610279929190610b69565b602060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610894565b50600060405180610100016040528073326c977e6efc84e512bb9c30f76e30c160ed06fb73ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103ec9190610bc8565b602060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e91906108e6565b915050919050565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610500929190610b69565b602060405180830381600087803b15801561051a57600080fd5b505af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610894565b50600060405180610100016040528073326c977e6efc84e512bb9c30f76e30c160ed06fb73ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016106729190610be4565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c491906108e6565b91508282101561084e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f000000000000000000000000000000000000000000000000000000000000000060006040518363ffffffff1660e01b815260040161074a929190610b40565b602060405180830381600087803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610894565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb308486036040518363ffffffff1660e01b81526004016107fa929190610b69565b602060405180830381600087803b15801561081457600080fd5b505af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190610894565b505b5092915050565b60008151905061086481610ce7565b92915050565b60008135905061087981610cfe565b92915050565b60008151905061088e81610cfe565b92915050565b6000602082840312156108a657600080fd5b60006108b484828501610855565b91505092915050565b6000602082840312156108cf57600080fd5b60006108dd8482850161086a565b91505092915050565b6000602082840312156108f857600080fd5b60006109068482850161087f565b91505092915050565b6000806040838503121561092257600080fd5b60006109308582860161086a565b92505060206109418582860161086a565b9150509250929050565b61095481610c36565b82525050565b61096381610c36565b82525050565b61097281610c8d565b82525050565b61098181610cb1565b82525050565b61099081610cd5565b82525050565b610100820160008201516109ad600085018261094b565b5060208201516109c0602085018261094b565b5060408201516109d36040850182610ae9565b5060608201516109e6606085018261094b565b5060808201516109f96080850182610b07565b5060a0820151610a0c60a0850182610b07565b5060c0820151610a1f60c0850182610b07565b5060e0820151610a3260e0850182610ada565b50505050565b61010082016000820151610a4f600085018261094b565b506020820151610a62602085018261094b565b506040820151610a756040850182610ae9565b506060820151610a88606085018261094b565b506080820151610a9b6080850182610b07565b5060a0820151610aae60a0850182610b07565b5060c0820151610ac160c0850182610b07565b5060e0820151610ad460e0850182610ada565b50505050565b610ae381610c54565b82525050565b610af281610c74565b82525050565b610b0181610c74565b82525050565b610b1081610c83565b82525050565b610b1f81610c83565b82525050565b6000602082019050610b3a600083018461095a565b92915050565b6000604082019050610b55600083018561095a565b610b626020830184610987565b9392505050565b6000604082019050610b7e600083018561095a565b610b8b6020830184610b16565b9392505050565b6000602082019050610ba76000830184610969565b92915050565b6000602082019050610bc26000830184610978565b92915050565b600061010082019050610bde6000830184610996565b92915050565b600061010082019050610bfa6000830184610a38565b92915050565b6000602082019050610c156000830184610af8565b92915050565b6000602082019050610c306000830184610b16565b92915050565b6000610c4182610c54565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610c9882610c9f565b9050919050565b6000610caa82610c54565b9050919050565b6000610cbc82610cc3565b9050919050565b6000610cce82610c54565b9050919050565b6000610ce082610c83565b9050919050565b610cf081610c48565b8114610cfb57600080fd5b50565b610d0781610c83565b8114610d1257600080fd5b5056fea2646970667358221220fcfcb82bdc3f36449ea0962ef0834b7c288003d3dcfe458fcb0ccee6bc08c78d64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73BD43AD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x171 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB DUP2 JUMP JUMPDEST PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP3 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 DUP7 SUB PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x828 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x864 DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x879 DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B4 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DD DUP5 DUP3 DUP6 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x930 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x941 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x981 DUP2 PUSH2 0xCB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x9AD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x9C0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x9D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x9E6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x9F9 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xA0C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xA1F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xA32 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xA4F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xA62 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xA75 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xA88 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xA9B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xAAE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xAC1 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xAD4 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAF2 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAA DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 PUSH2 0xC83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD07 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP2 EQ PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xFC 0xB8 0x2B 0xDC EXTCODEHASH CALLDATASIZE DIFFICULTY SWAP15 LOG0 SWAP7 0x2E CREATE DUP4 0x4B PUSH29 0x288003D3DCFE458FCB0CCEE6BC08C78D64736F6C634300070600330000 ",
							"sourceMap": "434:2051:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;631:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;460:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;790:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;960:642;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;556:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1608:875;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;894:37;927:4;894:37;:::o;631:73::-;662:42;631:73;:::o;460:90::-;508:42;460:90;:::o;790:38::-;;;;;;;;;;;;:::o;960:642::-;1042:17;1075:9;;;;;;;;;;;:17;;;1101:10;1114:8;1075:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1134;1185:352;;;;;;;;662:42;1185:352;;;;;;741:42;1185:352;;;;;;927:4;1185:352;;;;;;1363:4;1185:352;;;;;;1396:15;1185:352;;;;1439:8;1185:352;;;;1483:1;1185:352;;;;1521:1;1185:352;;;;;1134:403;;1560:10;:27;;;1588:6;1560:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1548:47;;960:642;;;;:::o;710:73::-;741:42;710:73;:::o;556:68::-;;;:::o;1608:875::-;1717:16;1749:9;;;;;;;;;;;:17;;;1775:10;1788:15;1749:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1815:49;1867:368;;;;;;;;662:42;1867:368;;;;;;741:42;1867:368;;;;;;927:4;1867:368;;;;;;2046:4;1867:368;;;;;;2079:15;1867:368;;;;2123:9;1867:368;;;;2167:15;1867:368;;;;2219:1;1867:368;;;;;1815:420;;2257:10;:28;;;2286:6;2257:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2246:47;;2319:15;2308:8;:26;2304:173;;;2350:9;;;;;;;;;;:17;;;2376:10;2389:1;2350:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2405:9;;;;;;;;;;:18;;;2432:4;2457:8;2439:15;:26;2405:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2304:173;1608:875;;;;;:::o;7:137:3:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:143::-;;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;358:80;;;;:::o;444:278::-;;560:2;548:9;539:7;535:23;531:32;528:2;;;576:1;573;566:12;528:2;619:1;644:61;697:7;688:6;677:9;673:22;644:61;:::i;:::-;634:71;;590:125;518:204;;;;:::o;728:262::-;;836:2;824:9;815:7;811:23;807:32;804:2;;;852:1;849;842:12;804:2;895:1;920:53;965:7;956:6;945:9;941:22;920:53;:::i;:::-;910:63;;866:117;794:196;;;;:::o;996:284::-;;1115:2;1103:9;1094:7;1090:23;1086:32;1083:2;;;1131:1;1128;1121:12;1083:2;1174:1;1199:64;1255:7;1246:6;1235:9;1231:22;1199:64;:::i;:::-;1189:74;;1145:128;1073:207;;;;:::o;1286:407::-;;;1411:2;1399:9;1390:7;1386:23;1382:32;1379:2;;;1427:1;1424;1417:12;1379:2;1470:1;1495:53;1540:7;1531:6;1520:9;1516:22;1495:53;:::i;:::-;1485:63;;1441:117;1597:2;1623:53;1668:7;1659:6;1648:9;1644:22;1623:53;:::i;:::-;1613:63;;1568:118;1369:324;;;;;:::o;1699:108::-;1776:24;1794:5;1776:24;:::i;:::-;1771:3;1764:37;1754:53;;:::o;1813:118::-;1900:24;1918:5;1900:24;:::i;:::-;1895:3;1888:37;1878:53;;:::o;1937:159::-;2038:51;2083:5;2038:51;:::i;:::-;2033:3;2026:64;2016:80;;:::o;2102:169::-;2208:56;2258:5;2208:56;:::i;:::-;2203:3;2196:69;2186:85;;:::o;2277:147::-;2372:45;2411:5;2372:45;:::i;:::-;2367:3;2360:58;2350:74;;:::o;2524:1621::-;2697:6;2692:3;2688:16;2789:4;2782:5;2778:16;2772:23;2808:63;2865:4;2860:3;2856:14;2842:12;2808:63;:::i;:::-;2714:167;2967:4;2960:5;2956:16;2950:23;2986:63;3043:4;3038:3;3034:14;3020:12;2986:63;:::i;:::-;2891:168;3140:4;3133:5;3129:16;3123:23;3159:61;3214:4;3209:3;3205:14;3191:12;3159:61;:::i;:::-;3069:161;3317:4;3310:5;3306:16;3300:23;3336:63;3393:4;3388:3;3384:14;3370:12;3336:63;:::i;:::-;3240:169;3495:4;3488:5;3484:16;3478:23;3514:63;3571:4;3566:3;3562:14;3548:12;3514:63;:::i;:::-;3419:168;3673:4;3666:5;3662:16;3656:23;3692:63;3749:4;3744:3;3740:14;3726:12;3692:63;:::i;:::-;3597:168;3859:4;3852:5;3848:16;3842:23;3878:63;3935:4;3930:3;3926:14;3912:12;3878:63;:::i;:::-;3775:176;4046:4;4039:5;4035:16;4029:23;4065:63;4122:4;4117:3;4113:14;4099:12;4065:63;:::i;:::-;3961:177;2666:1479;;;:::o;4247:1623::-;4422:6;4417:3;4413:16;4514:4;4507:5;4503:16;4497:23;4533:63;4590:4;4585:3;4581:14;4567:12;4533:63;:::i;:::-;4439:167;4692:4;4685:5;4681:16;4675:23;4711:63;4768:4;4763:3;4759:14;4745:12;4711:63;:::i;:::-;4616:168;4865:4;4858:5;4854:16;4848:23;4884:61;4939:4;4934:3;4930:14;4916:12;4884:61;:::i;:::-;4794:161;5042:4;5035:5;5031:16;5025:23;5061:63;5118:4;5113:3;5109:14;5095:12;5061:63;:::i;:::-;4965:169;5220:4;5213:5;5209:16;5203:23;5239:63;5296:4;5291:3;5287:14;5273:12;5239:63;:::i;:::-;5144:168;5399:4;5392:5;5388:16;5382:23;5418:63;5475:4;5470:3;5466:14;5452:12;5418:63;:::i;:::-;5322:169;5584:4;5577:5;5573:16;5567:23;5603:63;5660:4;5655:3;5651:14;5637:12;5603:63;:::i;:::-;5501:175;5771:4;5764:5;5760:16;5754:23;5790:63;5847:4;5842:3;5838:14;5824:12;5790:63;:::i;:::-;5686:177;4391:1479;;;:::o;5876:108::-;5953:24;5971:5;5953:24;:::i;:::-;5948:3;5941:37;5931:53;;:::o;5990:105::-;6065:23;6082:5;6065:23;:::i;:::-;6060:3;6053:36;6043:52;;:::o;6101:115::-;6186:23;6203:5;6186:23;:::i;:::-;6181:3;6174:36;6164:52;;:::o;6222:108::-;6299:24;6317:5;6299:24;:::i;:::-;6294:3;6287:37;6277:53;;:::o;6336:118::-;6423:24;6441:5;6423:24;:::i;:::-;6418:3;6411:37;6401:53;;:::o;6460:222::-;;6591:2;6580:9;6576:18;6568:26;;6604:71;6672:1;6661:9;6657:17;6648:6;6604:71;:::i;:::-;6558:124;;;;:::o;6688:348::-;;6855:2;6844:9;6840:18;6832:26;;6868:71;6936:1;6925:9;6921:17;6912:6;6868:71;:::i;:::-;6949:80;7025:2;7014:9;7010:18;7001:6;6949:80;:::i;:::-;6822:214;;;;;:::o;7042:332::-;;7201:2;7190:9;7186:18;7178:26;;7214:71;7282:1;7271:9;7267:17;7258:6;7214:71;:::i;:::-;7295:72;7363:2;7352:9;7348:18;7339:6;7295:72;:::i;:::-;7168:206;;;;;:::o;7380:250::-;;7525:2;7514:9;7510:18;7502:26;;7538:85;7620:1;7609:9;7605:17;7596:6;7538:85;:::i;:::-;7492:138;;;;:::o;7636:260::-;;7786:2;7775:9;7771:18;7763:26;;7799:90;7886:1;7875:9;7871:17;7862:6;7799:90;:::i;:::-;7753:143;;;;:::o;7902:375::-;;8109:3;8098:9;8094:19;8086:27;;8123:147;8267:1;8256:9;8252:17;8243:6;8123:147;:::i;:::-;8076:201;;;;:::o;8283:379::-;;8492:3;8481:9;8477:19;8469:27;;8506:149;8652:1;8641:9;8637:17;8628:6;8506:149;:::i;:::-;8459:203;;;;:::o;8668:218::-;;8797:2;8786:9;8782:18;8774:26;;8810:69;8876:1;8865:9;8861:17;8852:6;8810:69;:::i;:::-;8764:122;;;;:::o;8892:222::-;;9023:2;9012:9;9008:18;9000:26;;9036:71;9104:1;9093:9;9089:17;9080:6;9036:71;:::i;:::-;8990:124;;;;:::o;9120:96::-;;9186:24;9204:5;9186:24;:::i;:::-;9175:35;;9165:51;;;:::o;9222:90::-;;9299:5;9292:13;9285:21;9274:32;;9264:48;;;:::o;9318:126::-;;9395:42;9388:5;9384:54;9373:65;;9363:81;;;:::o;9450:91::-;;9526:8;9519:5;9515:20;9504:31;;9494:47;;;:::o;9547:77::-;;9613:5;9602:16;;9592:32;;;:::o;9630:154::-;;9727:51;9772:5;9727:51;:::i;:::-;9714:64;;9704:80;;;:::o;9790:127::-;;9887:24;9905:5;9887:24;:::i;:::-;9874:37;;9864:53;;;:::o;9923:164::-;;10025:56;10075:5;10025:56;:::i;:::-;10012:69;;10002:85;;;:::o;10093:132::-;;10195:24;10213:5;10195:24;:::i;:::-;10182:37;;10172:53;;;:::o;10231:121::-;;10322:24;10340:5;10322:24;:::i;:::-;10309:37;;10299:53;;;:::o;10358:116::-;10428:21;10443:5;10428:21;:::i;:::-;10421:5;10418:32;10408:2;;10464:1;10461;10454:12;10408:2;10398:76;:::o;10480:122::-;10553:24;10571:5;10553:24;:::i;:::-;10546:5;10543:35;10533:2;;10592:1;10589;10582:12;10533:2;10523:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "680600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LINK()": "401",
								"WETH()": "400",
								"linkToken()": "1321",
								"poolFee()": "336",
								"routerAddress()": "423",
								"swapExactInputSingle(uint256)": "infinite",
								"swapExactOutputSingle(uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 508,
									"end": 550,
									"name": "PUSH",
									"source": 2,
									"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
								},
								{
									"begin": 556,
									"end": 624,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 556,
									"end": 624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 556,
									"end": 624,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 556,
									"end": 624,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 556,
									"end": 624,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 556,
									"end": 624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 556,
									"end": 624,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 556,
									"end": 624,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 556,
									"end": 624,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 556,
									"end": 624,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 556,
									"end": 624,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 662,
									"end": 704,
									"name": "PUSH",
									"source": 2,
									"value": "326C977E6EFC84E512BB9C30F76E30C160ED06FB"
								},
								{
									"begin": 790,
									"end": 828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 790,
									"end": 828,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 790,
									"end": 828,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 790,
									"end": 828,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 790,
									"end": 828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 938,
									"end": 954,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 954,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 938,
									"end": 954,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 938,
									"end": 954,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "147"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 2485,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fcfcb82bdc3f36449ea0962ef0834b7c288003d3dcfe458fcb0ccee6bc08c78d64736f6c63430007060033",
									".code": [
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "73BD43AD"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "73BD43AD"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "AD5C4648"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "C31C9C07"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "C4B69A18"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "89FE6AA"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "1B6B6D23"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "3268CC56"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "57970E93"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 2485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 894,
											"end": 931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 931,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 662,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "326C977E6EFC84E512BB9C30F76E30C160ED06FB"
										},
										{
											"begin": 631,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 508,
											"end": 550,
											"name": "PUSH",
											"source": 2,
											"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
										},
										{
											"begin": 460,
											"end": 550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 460,
											"end": 550,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 828,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 828,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1092,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1101,
											"end": 1111,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 662,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "326C977E6EFC84E512BB9C30F76E30C160ED06FB"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 741,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "B4FBF271143F4FBF7B91A5DED31805E42B2208D6"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1367,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1411,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1447,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1570,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1560,
											"end": 1587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1587,
											"name": "PUSH",
											"source": 2,
											"value": "414BF389"
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1602,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 741,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "B4FBF271143F4FBF7B91A5DED31805E42B2208D6"
										},
										{
											"begin": 710,
											"end": 783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 710,
											"end": 783,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 556,
											"end": 624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 556,
											"end": 624,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1775,
											"end": 1785,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1788,
											"end": 1803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 662,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "326C977E6EFC84E512BB9C30F76E30C160ED06FB"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 741,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "B4FBF271143F4FBF7B91A5DED31805E42B2208D6"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2094,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 2235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2267,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "DB3E2198"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2334,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2477,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2304,
											"end": 2477,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2465,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2454,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2477,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2304,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 2483,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 150,
											"end": 289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 202,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 202,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 202,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 202,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 202,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 377,
											"end": 390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 368,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 368,
											"end": 390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 438,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 358,
											"end": 438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 358,
											"end": 438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 438,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 722,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 444,
											"end": 722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 444,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 539,
											"end": 546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 531,
											"end": 563,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 528,
											"end": 530,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 528,
											"end": 530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 578,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 528,
											"end": 530,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 528,
											"end": 530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 697,
											"end": 704,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 677,
											"end": 686,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 673,
											"end": 695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 644,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 644,
											"end": 705,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 644,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 634,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 722,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 518,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 518,
											"end": 722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 722,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 728,
											"end": 990,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 728,
											"end": 990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 728,
											"end": 990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 811,
											"end": 834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 804,
											"end": 806,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 854,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 804,
											"end": 806,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 965,
											"end": 972,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 945,
											"end": 954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 941,
											"end": 963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 920,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 920,
											"end": 973,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 973,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 920,
											"end": 973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 910,
											"end": 973,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 990,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 794,
											"end": 990,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 794,
											"end": 990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 990,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 996,
											"end": 1280,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 996,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1117,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1118,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1255,
											"end": 1262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1199,
											"end": 1263,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1263,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1199,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1263,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1280,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1693,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1286,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1409,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1414,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1540,
											"end": 1547,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1495,
											"end": 1548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1548,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1495,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1548,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1699,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1807,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1813,
											"end": 1931,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1813,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1937,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1937,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2083,
											"end": 2088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2038,
											"end": 2089,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2038,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2096,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2102,
											"end": 2271,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2102,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2208,
											"end": 2264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2208,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2208,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2271,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2277,
											"end": 2424,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2277,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2372,
											"end": 2417,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2372,
											"end": 2417,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2372,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2424,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2524,
											"end": 4145,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2524,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2865,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2863,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2870,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2808,
											"end": 2871,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2871,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2808,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2950,
											"end": 2973,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3041,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3034,
											"end": 3048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3214,
											"end": 3218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3212,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3205,
											"end": 3219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3159,
											"end": 3220,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3159,
											"end": 3220,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3159,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3323,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3393,
											"end": 3397,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3388,
											"end": 3391,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3240,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3566,
											"end": 3569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3560,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3514,
											"end": 3577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3514,
											"end": 3577,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3514,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 3677,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3749,
											"end": 3753,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3744,
											"end": 3747,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3597,
											"end": 3765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3863,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3848,
											"end": 3864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3935,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3930,
											"end": 3933,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3775,
											"end": 3951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4050,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4039,
											"end": 4044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4052,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4099,
											"end": 4111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4065,
											"end": 4128,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4065,
											"end": 4128,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4065,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 4145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 4145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 4145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 4145,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4247,
											"end": 5870,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4247,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4519,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4520,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4588,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4533,
											"end": 4596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4533,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4533,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4439,
											"end": 4606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4768,
											"end": 4772,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 4863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4854,
											"end": 4870,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4939,
											"end": 4943,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4930,
											"end": 4944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4884,
											"end": 4945,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4884,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4794,
											"end": 4955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5035,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5118,
											"end": 5122,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5113,
											"end": 5116,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5123,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5095,
											"end": 5107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4965,
											"end": 5134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5296,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5291,
											"end": 5294,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5273,
											"end": 5285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5239,
											"end": 5302,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5239,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5239,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5144,
											"end": 5312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 5392,
											"end": 5397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5475,
											"end": 5479,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5466,
											"end": 5480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5322,
											"end": 5491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5588,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 5577,
											"end": 5582,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 5655,
											"end": 5658,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5637,
											"end": 5649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5501,
											"end": 5676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5764,
											"end": 5769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5776,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5838,
											"end": 5852,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5790,
											"end": 5853,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5790,
											"end": 5853,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5790,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 5870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 5870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 5870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 5870,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5876,
											"end": 5984,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5876,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5953,
											"end": 5977,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5953,
											"end": 5977,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5953,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 5951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 5978,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5984,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5990,
											"end": 6095,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5990,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6082,
											"end": 6087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6089,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6101,
											"end": 6216,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6101,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6186,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6203,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6186,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6186,
											"end": 6209,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6186,
											"end": 6209,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6186,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6216,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6222,
											"end": 6330,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6222,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6317,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6299,
											"end": 6323,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6299,
											"end": 6323,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6299,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6330,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6336,
											"end": 6454,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6336,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6460,
											"end": 6682,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6460,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6460,
											"end": 6682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6604,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6672,
											"end": 6673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6654,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6604,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6604,
											"end": 6675,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6604,
											"end": 6675,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6604,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6682,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6682,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6688,
											"end": 7036,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6688,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 7036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6857,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7025,
											"end": 7027,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7014,
											"end": 7023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6949,
											"end": 7029,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6949,
											"end": 7029,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6949,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 7036,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 7036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 7036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 7036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 7036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 7036,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7042,
											"end": 7374,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 7042,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7267,
											"end": 7284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7374,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7374,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7374,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7380,
											"end": 7630,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7380,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7514,
											"end": 7523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7510,
											"end": 7528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7538,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7618,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7596,
											"end": 7602,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7538,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 7538,
											"end": 7623,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7538,
											"end": 7623,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7538,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7630,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7630,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7636,
											"end": 7896,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 7636,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7775,
											"end": 7784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7763,
											"end": 7789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7763,
											"end": 7789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7799,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 7888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7862,
											"end": 7868,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7799,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7799,
											"end": 7889,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7799,
											"end": 7889,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7799,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7753,
											"end": 7896,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7753,
											"end": 7896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7753,
											"end": 7896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7753,
											"end": 7896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7753,
											"end": 7896,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7902,
											"end": 8277,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7902,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 8277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8112,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8098,
											"end": 8107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8094,
											"end": 8113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8269,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8243,
											"end": 8249,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 8123,
											"end": 8270,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8123,
											"end": 8270,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8123,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8277,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8277,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8283,
											"end": 8662,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 8283,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8283,
											"end": 8662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8477,
											"end": 8496,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8506,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 8652,
											"end": 8653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8628,
											"end": 8634,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8506,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 8506,
											"end": 8655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8506,
											"end": 8655,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 8506,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8459,
											"end": 8662,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8459,
											"end": 8662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8459,
											"end": 8662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8459,
											"end": 8662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8459,
											"end": 8662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8668,
											"end": 8886,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 8668,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8668,
											"end": 8886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8797,
											"end": 8799,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8786,
											"end": 8795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 8800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 8800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8874,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8861,
											"end": 8878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8810,
											"end": 8879,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8810,
											"end": 8879,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8810,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8886,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8886,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8892,
											"end": 9114,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 8892,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8892,
											"end": 9114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9000,
											"end": 9026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9000,
											"end": 9026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9036,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 9104,
											"end": 9105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9036,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 9036,
											"end": 9107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9036,
											"end": 9107,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 9036,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8990,
											"end": 9114,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8990,
											"end": 9114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8990,
											"end": 9114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8990,
											"end": 9114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8990,
											"end": 9114,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9120,
											"end": 9216,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9120,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9120,
											"end": 9216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9204,
											"end": 9209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9186,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9186,
											"end": 9210,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9186,
											"end": 9210,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9186,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9175,
											"end": 9210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9175,
											"end": 9210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9165,
											"end": 9216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9165,
											"end": 9216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9165,
											"end": 9216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9165,
											"end": 9216,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9222,
											"end": 9312,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 9222,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9222,
											"end": 9312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9305,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9285,
											"end": 9306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9274,
											"end": 9306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9274,
											"end": 9306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9312,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9318,
											"end": 9444,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9318,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9318,
											"end": 9444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9395,
											"end": 9437,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9388,
											"end": 9393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9384,
											"end": 9438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9444,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9450,
											"end": 9541,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 9450,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9450,
											"end": 9541,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9526,
											"end": 9534,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 9519,
											"end": 9524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9515,
											"end": 9535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9494,
											"end": 9541,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9494,
											"end": 9541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9494,
											"end": 9541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9494,
											"end": 9541,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9547,
											"end": 9624,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 9547,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9547,
											"end": 9624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9602,
											"end": 9618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9602,
											"end": 9618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9624,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9630,
											"end": 9784,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 9630,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9630,
											"end": 9784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9772,
											"end": 9777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9727,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9727,
											"end": 9778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9727,
											"end": 9778,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9727,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9714,
											"end": 9778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9714,
											"end": 9778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9704,
											"end": 9784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9704,
											"end": 9784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9704,
											"end": 9784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9704,
											"end": 9784,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9790,
											"end": 9917,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9790,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9917,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 9905,
											"end": 9910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9887,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9887,
											"end": 9911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9887,
											"end": 9911,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 9887,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9874,
											"end": 9911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9874,
											"end": 9911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9864,
											"end": 9917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9864,
											"end": 9917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9864,
											"end": 9917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9864,
											"end": 9917,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9923,
											"end": 10087,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 9923,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 10087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10025,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10025,
											"end": 10081,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10025,
											"end": 10081,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 10025,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10087,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10093,
											"end": 10225,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10093,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10195,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10195,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10195,
											"end": 10219,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10195,
											"end": 10219,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 10195,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10182,
											"end": 10219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10182,
											"end": 10219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10172,
											"end": 10225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10172,
											"end": 10225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10172,
											"end": 10225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10172,
											"end": 10225,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10231,
											"end": 10352,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 10231,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10340,
											"end": 10345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10352,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10358,
											"end": 10474,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 10358,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10443,
											"end": 10448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10428,
											"end": 10449,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 10449,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10428,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10450,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10408,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 10408,
											"end": 10410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10461,
											"end": 10462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10454,
											"end": 10466,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10408,
											"end": 10410,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 10408,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10398,
											"end": 10474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10398,
											"end": 10474,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10480,
											"end": 10602,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 10480,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10553,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10553,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 10553,
											"end": 10577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10553,
											"end": 10577,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 10553,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10546,
											"end": 10551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10543,
											"end": 10578,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10533,
											"end": 10535,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10589,
											"end": 10590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10582,
											"end": 10594,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10535,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10533,
											"end": 10535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LINK()": "1b6b6d23",
							"WETH()": "ad5c4648",
							"linkToken()": "57970e93",
							"poolFee()": "089fe6aa",
							"routerAddress()": "3268cc56",
							"swapExactInputSingle(uint256)": "73bd43ad",
							"swapExactOutputSingle(uint256,uint256)": "c4b69a18",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SingleSwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0xce3d332dd398afc67d1b6f0430198bbc676791689bc9c24381bce801c79be226\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf8c3456e79d3f305c55f713545fa5b7db02962625ac1b581ef118157e55e577\",\"dweb:/ipfs/QmbLYnfeBQdMBNyBt6ethnjT4VKobe6Yp55tFJqkWU8VoP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "contracts/SimpleSwap.sol:SingleSwap",
								"label": "linkToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)139"
							}
						],
						"types": {
							"t_contract(IERC20)139": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0"
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							109
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 110,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 16,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 17,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 14,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3SwapCallback",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 13,
										"src": "305:22:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$13",
											"typeString": "contract IUniswapV3SwapCallback"
										}
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:1"
								}
							],
							"contractDependencies": [
								13
							],
							"contractKind": "interface",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								13
							],
							"name": "ISwapRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "374:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "425:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 25,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "445:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "472:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountIn",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "498:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "524:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "558:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 35,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 109,
									"src": "334:256:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "877:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 39,
													"name": "ExactInputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:1"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "943:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:1"
									},
									"scope": 109,
									"src": "851:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 56,
									"members": [
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "path",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1002:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 46,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1022:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 48,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1049:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "amountIn",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1075:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 52,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1101:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 54,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nodeType": "StructDefinition",
									"scope": 109,
									"src": "968:164:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1436:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$56_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 58,
													"name": "ExactInputParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 56,
													"src": "1436:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$56_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1496:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:1"
									},
									"scope": 109,
									"src": "1416:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 81,
									"members": [
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1562:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 65,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1587:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 67,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1613:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 69,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1633:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1660:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 73,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "amountOut",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1686:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1713:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1746:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 79,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 109,
									"src": "1521:257:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2066:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 83,
													"name": "ExactOutputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 81,
													"src": "2066:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2133:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:1"
									},
									"scope": 109,
									"src": "2039:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 100,
									"members": [
										{
											"constant": false,
											"id": 91,
											"mutability": "mutable",
											"name": "path",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "2192:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 90,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 93,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "2212:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 92,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "2239:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 94,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "amountOut",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "2265:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 96,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 99,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "2292:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 98,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nodeType": "StructDefinition",
									"scope": 109,
									"src": "2157:165:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2638:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$100_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 102,
													"name": "ExactOutputParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 100,
													"src": "2638:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$100_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2699:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:1"
									},
									"scope": 109,
									"src": "2617:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 110,
							"src": "280:2439:1"
						}
					],
					"src": "45:2675:1"
				},
				"id": 1
			},
			"contracts/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							139
						],
						"ISwapRouter": [
							109
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"SingleSwap": [
							285
						]
					},
					"id": 286,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"id": 112,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 113,
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 110,
							"src": "90:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:17:2"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "242:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:9:2"
									},
									"scope": 139,
									"src": "183:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "275:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "294:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:35:2"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "344:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "344:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:6:2"
									},
									"scope": 139,
									"src": "257:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "373:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "390:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:33:2"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "424:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:6:2"
									},
									"scope": 139,
									"src": "356:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 286,
							"src": "160:272:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285
							],
							"name": "SingleSwap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "3268cc56",
									"id": 142,
									"mutability": "constant",
									"name": "routerAddress",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "460:90:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 140,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
										"id": 141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "508:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 147,
									"mutability": "immutable",
									"name": "swapRouter",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "556:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$109",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 143,
										"name": "ISwapRouter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "556:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$109",
											"typeString": "contract ISwapRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 145,
												"name": "routerAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 142,
												"src": "610:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 144,
											"name": "ISwapRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 109,
											"src": "598:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$109_$",
												"typeString": "type(contract ISwapRouter)"
											}
										},
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "598:26:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$109",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1b6b6d23",
									"id": 150,
									"mutability": "constant",
									"name": "LINK",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "631:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 148,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
										"id": 149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "662:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ad5c4648",
									"id": 153,
									"mutability": "constant",
									"name": "WETH",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "710:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 151,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307842344642463237313134334634464266374239314135646564333138303565343262323230386436",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "741:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57970e93",
									"id": 158,
									"mutability": "mutable",
									"name": "linkToken",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "790:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$139",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 154,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "790:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$139",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 156,
												"name": "LINK",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 150,
												"src": "823:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 155,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 139,
											"src": "816:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$139_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "816:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$139",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 161,
									"mutability": "constant",
									"name": "poolFee",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "894:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 159,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "894:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "927:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "952:2:2",
										"statements": []
									},
									"id": 165,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:2:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:2"
									},
									"scope": 285,
									"src": "938:16:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "1065:537:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 177,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "1101:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$109",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$109",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1093:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1093:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1093:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 179,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1114:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 172,
															"name": "linkToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1075:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$139",
																"typeString": "contract IERC20"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "1075:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1075:48:2"
											},
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "1134:48:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 184,
															"name": "ISwapRouter.ExactInputSingleParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 37,
															"src": "1134:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1260:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1292:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1319:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"id": 193,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1363:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SingleSwap_$285",
																		"typeString": "contract SingleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SingleSwap_$285",
																		"typeString": "contract SingleSwap"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1355:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1355:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1355:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 195,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1396:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1396:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 197,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1439:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1483:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1521:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 186,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1185:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$109_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "1185:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$37_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1185:352:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1134:403:2"
											},
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1548:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 205,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "1588:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 203,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "1560:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$109",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "1560:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "1548:47:2"
											}
										]
									},
									"functionSelector": "73bd43ad",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "990:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:18:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1042:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:19:2"
									},
									"scope": 285,
									"src": "960:642:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1739:744:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 224,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "1775:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$109",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$109",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1767:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 222,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1767:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1767:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1788:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 219,
															"name": "linkToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1749:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$139",
																"typeString": "contract IERC20"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "1749:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1749:55:2"
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "1815:49:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 231,
															"name": "ISwapRouter.ExactOutputSingleParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 81,
															"src": "1815:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 235,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1943:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1975:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2002:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2046:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SingleSwap_$285",
																		"typeString": "contract SingleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SingleSwap_$285",
																		"typeString": "contract SingleSwap"
																	}
																],
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2038:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 238,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2038:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2038:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 242,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2079:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2079:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 244,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "2123:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 245,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2167:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 233,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1867:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$109_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "1867:48:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$81_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1867:368:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1815:420:2"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2246:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 252,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2286:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 250,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "2257:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$109",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 89,
															"src": "2257:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$81_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2257:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2246:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2246:47:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 256,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2308:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 257,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "2319:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2308:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2304:173:2",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2336:141:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 264,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "2376:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$109",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$109",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2368:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 262,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2368:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2368:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2389:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 259,
																		"name": "linkToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "2350:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$139",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 138,
																	"src": "2350:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2350:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 268,
															"nodeType": "ExpressionStatement",
															"src": "2350:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 274,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2432:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SingleSwap_$285",
																					"typeString": "contract SingleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SingleSwap_$285",
																					"typeString": "contract SingleSwap"
																				}
																			],
																			"id": 273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2424:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 272,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2424:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2424:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 276,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "2439:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 277,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "2457:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2439:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 269,
																		"name": "linkToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "2405:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$139",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 129,
																	"src": "2405:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2405:61:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "2405:61:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c4b69a18",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1639:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:44:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1717:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:18:2"
									},
									"scope": 285,
									"src": "1608:875:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 286,
							"src": "434:2051:2"
						}
					],
					"src": "45:2440:2"
				},
				"id": 2
			}
		}
	}
}