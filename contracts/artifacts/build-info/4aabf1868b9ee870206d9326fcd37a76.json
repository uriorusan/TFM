{
	"id": "4aabf1868b9ee870206d9326fcd37a76",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapContract.sol": {
				"content": "// contracts/FlashLoan.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ISwapRouter} from '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport {TransferHelper} from '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\ncontract SwapContract {\n    address payable owner;\n\n    // Events\n    event SwapInitiated(ISwapRouter.ExactInputSingleParams params);\n    event SwapFinished(uint256 amountOut);\n    event InputSet(address indexed token, address indexed spender, uint256 amount);\n\n    constructor() {\n        owner = payable(msg.sender); // make the deployer of the contract the owner\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n\n    function swapSingle(\n        address _tokenIn,\n        address _tokenOut,\n        address _swapRouter,\n        uint256 _amount,\n        uint24 _poolFee\n    )\n    external onlyOwner returns (uint256 amountOut)\n    {\n        emit InputSet(_tokenIn, address(_swapRouter), _amount);\n        ISwapRouter swapRouter = ISwapRouter(_swapRouter);\n        IERC20 tokenIn = IERC20(_tokenIn);\n\n        tokenIn.approve(address(_swapRouter), _amount);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: _tokenIn,\n            tokenOut: _tokenOut,\n            fee: _poolFee,\n            recipient: msg.sender,\n            deadline: block.timestamp,\n            amountIn: _amount,\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        });\n\n        emit SwapInitiated(params);\n\n        amountOut = swapRouter.exactInputSingle(params);\n\n        emit SwapFinished(amountOut);\n        return amountOut;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapContract.sol": {
				"SwapContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InputSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"indexed": false,
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "SwapInitiated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenOut",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "_poolFee",
									"type": "uint24"
								}
							],
							"name": "swapSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapContract.sol\":338:1811  contract SwapContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SwapContract.sol\":604:709  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SwapContract.sol\":644:654  msg.sender */\n  caller\n    /* \"contracts/SwapContract.sol\":628:633  owner */\n  0x00\n  dup1\n    /* \"contracts/SwapContract.sol\":628:655  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SwapContract.sol\":338:1811  contract SwapContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapContract.sol\":338:1811  contract SwapContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf6e8f4ff\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapContract.sol\":835:1809  function swapSingle(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/SwapContract.sol\":1025:1042  uint256 amountOut */\n      0x00\n        /* \"contracts/SwapContract.sol\":768:773  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SwapContract.sol\":754:773  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SwapContract.sol\":754:764  msg.sender */\n      caller\n        /* \"contracts/SwapContract.sol\":754:773  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SwapContract.sol\":746:811  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"contracts/SwapContract.sol\":1090:1101  _swapRouter */\n      dup4\n        /* \"contracts/SwapContract.sol\":1063:1112  InputSet(_tokenIn, address(_swapRouter), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SwapContract.sol\":1072:1080  _tokenIn */\n      dup7\n        /* \"contracts/SwapContract.sol\":1063:1112  InputSet(_tokenIn, address(_swapRouter), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae0be8e6252914a661bbfc7564105c224e78711fa1ca76fc41d3209a3ecddd3a\n        /* \"contracts/SwapContract.sol\":1104:1111  _amount */\n      dup6\n        /* \"contracts/SwapContract.sol\":1063:1112  InputSet(_tokenIn, address(_swapRouter), _amount) */\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SwapContract.sol\":1122:1144  ISwapRouter swapRouter */\n      0x00\n        /* \"contracts/SwapContract.sol\":1159:1170  _swapRouter */\n      dup5\n        /* \"contracts/SwapContract.sol\":1122:1171  ISwapRouter swapRouter = ISwapRouter(_swapRouter) */\n      swap1\n      pop\n        /* \"contracts/SwapContract.sol\":1181:1195  IERC20 tokenIn */\n      0x00\n        /* \"contracts/SwapContract.sol\":1205:1213  _tokenIn */\n      dup8\n        /* \"contracts/SwapContract.sol\":1181:1214  IERC20 tokenIn = IERC20(_tokenIn) */\n      swap1\n      pop\n        /* \"contracts/SwapContract.sol\":1225:1232  tokenIn */\n      dup1\n        /* \"contracts/SwapContract.sol\":1225:1240  tokenIn.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/SwapContract.sol\":1249:1260  _swapRouter */\n      dup8\n        /* \"contracts/SwapContract.sol\":1263:1270  _amount */\n      dup8\n        /* \"contracts/SwapContract.sol\":1225:1271  tokenIn.approve(address(_swapRouter), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      pop\n        /* \"contracts/SwapContract.sol\":1282:1330  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapContract.sol\":1391:1399  _tokenIn */\n      dup11\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1423:1432  _tokenOut */\n      dup10\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1451:1459  _poolFee */\n      dup7\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1484:1494  msg.sender */\n      caller\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1518:1533  block.timestamp */\n      timestamp\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1557:1564  _amount */\n      dup8\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1596:1597  0 */\n      0x00\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1630:1631  0 */\n      0x00\n        /* \"contracts/SwapContract.sol\":1333:1642  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapContract.sol\":1282:1642  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"contracts/SwapContract.sol\":1658:1679  SwapInitiated(params) */\n      0x9cc9e4e0604c38363594f7c8f52370967eee2a7ab393f48c3c38aaa1a015e2c7\n        /* \"contracts/SwapContract.sol\":1672:1678  params */\n      dup2\n        /* \"contracts/SwapContract.sol\":1658:1679  SwapInitiated(params) */\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SwapContract.sol\":1702:1712  swapRouter */\n      dup3\n        /* \"contracts/SwapContract.sol\":1702:1729  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/SwapContract.sol\":1730:1736  params */\n      dup3\n        /* \"contracts/SwapContract.sol\":1702:1737  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_24:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"contracts/SwapContract.sol\":1690:1737  amountOut = swapRouter.exactInputSingle(params) */\n      swap4\n      pop\n        /* \"contracts/SwapContract.sol\":1753:1776  SwapFinished(amountOut) */\n      0xf28e9c4f1b694c726eacd8c6049062f63c124c8af3fe23a314a3e75484d03a56\n        /* \"contracts/SwapContract.sol\":1766:1775  amountOut */\n      dup5\n        /* \"contracts/SwapContract.sol\":1753:1776  SwapFinished(amountOut) */\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SwapContract.sol\":1786:1802  return amountOut */\n      pop\n      pop\n      pop\n        /* \"contracts/SwapContract.sol\":835:1809  function swapSingle(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_33:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_34:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_63\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_33\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_35:\n        /* \"#utility.yul\":641:665   */\n      tag_65\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_34\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_66:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_36:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_68\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_35\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_37:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_38:\n        /* \"#utility.yul\":997:1021   */\n      tag_71\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_37\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_72:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_39:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_74\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_38\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1288   */\n    tag_40:\n        /* \"#utility.yul\":1233:1240   */\n      0x00\n        /* \"#utility.yul\":1273:1281   */\n      0xffffff\n        /* \"#utility.yul\":1266:1271   */\n      dup3\n        /* \"#utility.yul\":1262:1282   */\n      and\n        /* \"#utility.yul\":1251:1282   */\n      swap1\n      pop\n        /* \"#utility.yul\":1197:1288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1414   */\n    tag_41:\n        /* \"#utility.yul\":1366:1389   */\n      tag_77\n        /* \"#utility.yul\":1383:1388   */\n      dup2\n        /* \"#utility.yul\":1366:1389   */\n      tag_40\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1359:1364   */\n      dup2\n        /* \"#utility.yul\":1356:1390   */\n      eq\n        /* \"#utility.yul\":1346:1408   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1401:1402   */\n      dup1\n        /* \"#utility.yul\":1394:1406   */\n      revert\n        /* \"#utility.yul\":1346:1408   */\n    tag_78:\n        /* \"#utility.yul\":1294:1414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1557   */\n    tag_42:\n        /* \"#utility.yul\":1465:1470   */\n      0x00\n        /* \"#utility.yul\":1503:1509   */\n      dup2\n        /* \"#utility.yul\":1490:1510   */\n      calldataload\n        /* \"#utility.yul\":1481:1510   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1551   */\n      tag_80\n        /* \"#utility.yul\":1545:1550   */\n      dup2\n        /* \"#utility.yul\":1519:1551   */\n      tag_41\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1420:1557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:2472   */\n    tag_6:\n        /* \"#utility.yul\":1657:1663   */\n      0x00\n        /* \"#utility.yul\":1665:1671   */\n      dup1\n        /* \"#utility.yul\":1673:1679   */\n      0x00\n        /* \"#utility.yul\":1681:1687   */\n      dup1\n        /* \"#utility.yul\":1689:1695   */\n      0x00\n        /* \"#utility.yul\":1738:1741   */\n      0xa0\n        /* \"#utility.yul\":1726:1735   */\n      dup7\n        /* \"#utility.yul\":1717:1724   */\n      dup9\n        /* \"#utility.yul\":1713:1736   */\n      sub\n        /* \"#utility.yul\":1709:1742   */\n      slt\n        /* \"#utility.yul\":1706:1826   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1745:1824   */\n      tag_83\n      tag_31\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1706:1826   */\n    tag_82:\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1890:1943   */\n      tag_84\n        /* \"#utility.yul\":1935:1942   */\n      dup9\n        /* \"#utility.yul\":1926:1932   */\n      dup3\n        /* \"#utility.yul\":1915:1924   */\n      dup10\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1890:1943   */\n      tag_36\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1880:1943   */\n      swap6\n      pop\n        /* \"#utility.yul\":1836:1953   */\n      pop\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":2018:2071   */\n      tag_85\n        /* \"#utility.yul\":2063:2070   */\n      dup9\n        /* \"#utility.yul\":2054:2060   */\n      dup3\n        /* \"#utility.yul\":2043:2052   */\n      dup10\n        /* \"#utility.yul\":2039:2061   */\n      add\n        /* \"#utility.yul\":2018:2071   */\n      tag_36\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2008:2071   */\n      swap5\n      pop\n        /* \"#utility.yul\":1963:2081   */\n      pop\n        /* \"#utility.yul\":2120:2122   */\n      0x40\n        /* \"#utility.yul\":2146:2199   */\n      tag_86\n        /* \"#utility.yul\":2191:2198   */\n      dup9\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2171:2180   */\n      dup10\n        /* \"#utility.yul\":2167:2189   */\n      add\n        /* \"#utility.yul\":2146:2199   */\n      tag_36\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2136:2199   */\n      swap4\n      pop\n        /* \"#utility.yul\":2091:2209   */\n      pop\n        /* \"#utility.yul\":2248:2250   */\n      0x60\n        /* \"#utility.yul\":2274:2327   */\n      tag_87\n        /* \"#utility.yul\":2319:2326   */\n      dup9\n        /* \"#utility.yul\":2310:2316   */\n      dup3\n        /* \"#utility.yul\":2299:2308   */\n      dup10\n        /* \"#utility.yul\":2295:2317   */\n      add\n        /* \"#utility.yul\":2274:2327   */\n      tag_39\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2264:2327   */\n      swap3\n      pop\n        /* \"#utility.yul\":2219:2337   */\n      pop\n        /* \"#utility.yul\":2376:2379   */\n      0x80\n        /* \"#utility.yul\":2403:2455   */\n      tag_88\n        /* \"#utility.yul\":2447:2454   */\n      dup9\n        /* \"#utility.yul\":2438:2444   */\n      dup3\n        /* \"#utility.yul\":2427:2436   */\n      dup10\n        /* \"#utility.yul\":2423:2445   */\n      add\n        /* \"#utility.yul\":2403:2455   */\n      tag_42\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2393:2455   */\n      swap2\n      pop\n        /* \"#utility.yul\":2347:2465   */\n      pop\n        /* \"#utility.yul\":1563:2472   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2478:2596   */\n    tag_43:\n        /* \"#utility.yul\":2565:2589   */\n      tag_90\n        /* \"#utility.yul\":2583:2588   */\n      dup2\n        /* \"#utility.yul\":2565:2589   */\n      tag_37\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2560:2563   */\n      dup3\n        /* \"#utility.yul\":2553:2590   */\n      mstore\n        /* \"#utility.yul\":2478:2596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2824   */\n    tag_9:\n        /* \"#utility.yul\":2695:2699   */\n      0x00\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2722:2731   */\n      dup3\n        /* \"#utility.yul\":2718:2736   */\n      add\n        /* \"#utility.yul\":2710:2736   */\n      swap1\n      pop\n        /* \"#utility.yul\":2746:2817   */\n      tag_92\n        /* \"#utility.yul\":2814:2815   */\n      0x00\n        /* \"#utility.yul\":2803:2812   */\n      dup4\n        /* \"#utility.yul\":2799:2816   */\n      add\n        /* \"#utility.yul\":2790:2796   */\n      dup5\n        /* \"#utility.yul\":2746:2817   */\n      tag_43\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2602:2824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2830:2999   */\n    tag_44:\n        /* \"#utility.yul\":2914:2925   */\n      0x00\n        /* \"#utility.yul\":2948:2954   */\n      dup3\n        /* \"#utility.yul\":2943:2946   */\n      dup3\n        /* \"#utility.yul\":2936:2955   */\n      mstore\n        /* \"#utility.yul\":2988:2992   */\n      0x20\n        /* \"#utility.yul\":2983:2986   */\n      dup3\n        /* \"#utility.yul\":2979:2993   */\n      add\n        /* \"#utility.yul\":2964:2993   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3005:3225   */\n    tag_45:\n        /* \"#utility.yul\":3145:3179   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":3141:3142   */\n      0x00\n        /* \"#utility.yul\":3133:3139   */\n      dup3\n        /* \"#utility.yul\":3129:3143   */\n      add\n        /* \"#utility.yul\":3122:3180   */\n      mstore\n        /* \"#utility.yul\":3214:3217   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3209:3211   */\n      0x20\n        /* \"#utility.yul\":3201:3207   */\n      dup3\n        /* \"#utility.yul\":3197:3212   */\n      add\n        /* \"#utility.yul\":3190:3218   */\n      mstore\n        /* \"#utility.yul\":3005:3225   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3597   */\n    tag_46:\n        /* \"#utility.yul\":3373:3376   */\n      0x00\n        /* \"#utility.yul\":3394:3461   */\n      tag_96\n        /* \"#utility.yul\":3458:3460   */\n      0x21\n        /* \"#utility.yul\":3453:3456   */\n      dup4\n        /* \"#utility.yul\":3394:3461   */\n      tag_44\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3387:3461   */\n      swap2\n      pop\n        /* \"#utility.yul\":3470:3563   */\n      tag_97\n        /* \"#utility.yul\":3559:3562   */\n      dup3\n        /* \"#utility.yul\":3470:3563   */\n      tag_45\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3588:3590   */\n      0x40\n        /* \"#utility.yul\":3583:3586   */\n      dup3\n        /* \"#utility.yul\":3579:3591   */\n      add\n        /* \"#utility.yul\":3572:3591   */\n      swap1\n      pop\n        /* \"#utility.yul\":3231:3597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:4022   */\n    tag_13:\n        /* \"#utility.yul\":3769:3773   */\n      0x00\n        /* \"#utility.yul\":3807:3809   */\n      0x20\n        /* \"#utility.yul\":3796:3805   */\n      dup3\n        /* \"#utility.yul\":3792:3810   */\n      add\n        /* \"#utility.yul\":3784:3810   */\n      swap1\n      pop\n        /* \"#utility.yul\":3856:3865   */\n      dup2\n        /* \"#utility.yul\":3850:3854   */\n      dup2\n        /* \"#utility.yul\":3846:3866   */\n      sub\n        /* \"#utility.yul\":3842:3843   */\n      0x00\n        /* \"#utility.yul\":3831:3840   */\n      dup4\n        /* \"#utility.yul\":3827:3844   */\n      add\n        /* \"#utility.yul\":3820:3867   */\n      mstore\n        /* \"#utility.yul\":3884:4015   */\n      tag_99\n        /* \"#utility.yul\":4010:4014   */\n      dup2\n        /* \"#utility.yul\":3884:4015   */\n      tag_46\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3876:4015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3603:4022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4028:4146   */\n    tag_47:\n        /* \"#utility.yul\":4115:4139   */\n      tag_101\n        /* \"#utility.yul\":4133:4138   */\n      dup2\n        /* \"#utility.yul\":4115:4139   */\n      tag_34\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4110:4113   */\n      dup3\n        /* \"#utility.yul\":4103:4140   */\n      mstore\n        /* \"#utility.yul\":4028:4146   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4484   */\n    tag_17:\n        /* \"#utility.yul\":4273:4277   */\n      0x00\n        /* \"#utility.yul\":4311:4313   */\n      0x40\n        /* \"#utility.yul\":4300:4309   */\n      dup3\n        /* \"#utility.yul\":4296:4314   */\n      add\n        /* \"#utility.yul\":4288:4314   */\n      swap1\n      pop\n        /* \"#utility.yul\":4324:4395   */\n      tag_103\n        /* \"#utility.yul\":4392:4393   */\n      0x00\n        /* \"#utility.yul\":4381:4390   */\n      dup4\n        /* \"#utility.yul\":4377:4394   */\n      add\n        /* \"#utility.yul\":4368:4374   */\n      dup6\n        /* \"#utility.yul\":4324:4395   */\n      tag_47\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4405:4477   */\n      tag_104\n        /* \"#utility.yul\":4473:4475   */\n      0x20\n        /* \"#utility.yul\":4462:4471   */\n      dup4\n        /* \"#utility.yul\":4458:4476   */\n      add\n        /* \"#utility.yul\":4449:4455   */\n      dup5\n        /* \"#utility.yul\":4405:4477   */\n      tag_43\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4152:4484   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4490:4580   */\n    tag_48:\n        /* \"#utility.yul\":4524:4531   */\n      0x00\n        /* \"#utility.yul\":4567:4572   */\n      dup2\n        /* \"#utility.yul\":4560:4573   */\n      iszero\n        /* \"#utility.yul\":4553:4574   */\n      iszero\n        /* \"#utility.yul\":4542:4574   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4586:4702   */\n    tag_49:\n        /* \"#utility.yul\":4656:4677   */\n      tag_107\n        /* \"#utility.yul\":4671:4676   */\n      dup2\n        /* \"#utility.yul\":4656:4677   */\n      tag_48\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4649:4654   */\n      dup2\n        /* \"#utility.yul\":4646:4678   */\n      eq\n        /* \"#utility.yul\":4636:4696   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":4692:4693   */\n      0x00\n        /* \"#utility.yul\":4689:4690   */\n      dup1\n        /* \"#utility.yul\":4682:4694   */\n      revert\n        /* \"#utility.yul\":4636:4696   */\n    tag_108:\n        /* \"#utility.yul\":4586:4702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4708:4845   */\n    tag_50:\n        /* \"#utility.yul\":4762:4767   */\n      0x00\n        /* \"#utility.yul\":4793:4799   */\n      dup2\n        /* \"#utility.yul\":4787:4800   */\n      mload\n        /* \"#utility.yul\":4778:4800   */\n      swap1\n      pop\n        /* \"#utility.yul\":4809:4839   */\n      tag_110\n        /* \"#utility.yul\":4833:4838   */\n      dup2\n        /* \"#utility.yul\":4809:4839   */\n      tag_49\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4708:4845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4851:5196   */\n    tag_21:\n        /* \"#utility.yul\":4918:4924   */\n      0x00\n        /* \"#utility.yul\":4967:4969   */\n      0x20\n        /* \"#utility.yul\":4955:4964   */\n      dup3\n        /* \"#utility.yul\":4946:4953   */\n      dup5\n        /* \"#utility.yul\":4942:4965   */\n      sub\n        /* \"#utility.yul\":4938:4970   */\n      slt\n        /* \"#utility.yul\":4935:5054   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":4973:5052   */\n      tag_113\n      tag_31\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4935:5054   */\n    tag_112:\n        /* \"#utility.yul\":5093:5094   */\n      0x00\n        /* \"#utility.yul\":5118:5179   */\n      tag_114\n        /* \"#utility.yul\":5171:5178   */\n      dup5\n        /* \"#utility.yul\":5162:5168   */\n      dup3\n        /* \"#utility.yul\":5151:5160   */\n      dup6\n        /* \"#utility.yul\":5147:5169   */\n      add\n        /* \"#utility.yul\":5118:5179   */\n      tag_50\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":5108:5179   */\n      swap2\n      pop\n        /* \"#utility.yul\":5064:5189   */\n      pop\n        /* \"#utility.yul\":4851:5196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5202:5310   */\n    tag_51:\n        /* \"#utility.yul\":5279:5303   */\n      tag_116\n        /* \"#utility.yul\":5297:5302   */\n      dup2\n        /* \"#utility.yul\":5279:5303   */\n      tag_34\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5274:5277   */\n      dup3\n        /* \"#utility.yul\":5267:5304   */\n      mstore\n        /* \"#utility.yul\":5202:5310   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5316:5421   */\n    tag_52:\n        /* \"#utility.yul\":5391:5414   */\n      tag_118\n        /* \"#utility.yul\":5408:5413   */\n      dup2\n        /* \"#utility.yul\":5391:5414   */\n      tag_40\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5386:5389   */\n      dup3\n        /* \"#utility.yul\":5379:5415   */\n      mstore\n        /* \"#utility.yul\":5316:5421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5427:5535   */\n    tag_53:\n        /* \"#utility.yul\":5504:5528   */\n      tag_120\n        /* \"#utility.yul\":5522:5527   */\n      dup2\n        /* \"#utility.yul\":5504:5528   */\n      tag_37\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":5499:5502   */\n      dup3\n        /* \"#utility.yul\":5492:5529   */\n      mstore\n        /* \"#utility.yul\":5427:5535   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5541:5649   */\n    tag_54:\n        /* \"#utility.yul\":5618:5642   */\n      tag_122\n        /* \"#utility.yul\":5636:5641   */\n      dup2\n        /* \"#utility.yul\":5618:5642   */\n      tag_33\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5613:5616   */\n      dup3\n        /* \"#utility.yul\":5606:5643   */\n      mstore\n        /* \"#utility.yul\":5541:5649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5749:7372   */\n    tag_55:\n        /* \"#utility.yul\":5924:5930   */\n      0x0100\n        /* \"#utility.yul\":5919:5922   */\n      dup3\n        /* \"#utility.yul\":5915:5931   */\n      add\n        /* \"#utility.yul\":6016:6020   */\n      0x00\n        /* \"#utility.yul\":6009:6014   */\n      dup3\n        /* \"#utility.yul\":6005:6021   */\n      add\n        /* \"#utility.yul\":5999:6022   */\n      mload\n        /* \"#utility.yul\":6035:6098   */\n      tag_124\n        /* \"#utility.yul\":6092:6096   */\n      0x00\n        /* \"#utility.yul\":6087:6090   */\n      dup6\n        /* \"#utility.yul\":6083:6097   */\n      add\n        /* \"#utility.yul\":6069:6081   */\n      dup3\n        /* \"#utility.yul\":6035:6098   */\n      tag_51\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5941:6108   */\n      pop\n        /* \"#utility.yul\":6194:6198   */\n      0x20\n        /* \"#utility.yul\":6187:6192   */\n      dup3\n        /* \"#utility.yul\":6183:6199   */\n      add\n        /* \"#utility.yul\":6177:6200   */\n      mload\n        /* \"#utility.yul\":6213:6276   */\n      tag_125\n        /* \"#utility.yul\":6270:6274   */\n      0x20\n        /* \"#utility.yul\":6265:6268   */\n      dup6\n        /* \"#utility.yul\":6261:6275   */\n      add\n        /* \"#utility.yul\":6247:6259   */\n      dup3\n        /* \"#utility.yul\":6213:6276   */\n      tag_51\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":6118:6286   */\n      pop\n        /* \"#utility.yul\":6367:6371   */\n      0x40\n        /* \"#utility.yul\":6360:6365   */\n      dup3\n        /* \"#utility.yul\":6356:6372   */\n      add\n        /* \"#utility.yul\":6350:6373   */\n      mload\n        /* \"#utility.yul\":6386:6447   */\n      tag_126\n        /* \"#utility.yul\":6441:6445   */\n      0x40\n        /* \"#utility.yul\":6436:6439   */\n      dup6\n        /* \"#utility.yul\":6432:6446   */\n      add\n        /* \"#utility.yul\":6418:6430   */\n      dup3\n        /* \"#utility.yul\":6386:6447   */\n      tag_52\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":6296:6457   */\n      pop\n        /* \"#utility.yul\":6544:6548   */\n      0x60\n        /* \"#utility.yul\":6537:6542   */\n      dup3\n        /* \"#utility.yul\":6533:6549   */\n      add\n        /* \"#utility.yul\":6527:6550   */\n      mload\n        /* \"#utility.yul\":6563:6626   */\n      tag_127\n        /* \"#utility.yul\":6620:6624   */\n      0x60\n        /* \"#utility.yul\":6615:6618   */\n      dup6\n        /* \"#utility.yul\":6611:6625   */\n      add\n        /* \"#utility.yul\":6597:6609   */\n      dup3\n        /* \"#utility.yul\":6563:6626   */\n      tag_51\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6467:6636   */\n      pop\n        /* \"#utility.yul\":6722:6726   */\n      0x80\n        /* \"#utility.yul\":6715:6720   */\n      dup3\n        /* \"#utility.yul\":6711:6727   */\n      add\n        /* \"#utility.yul\":6705:6728   */\n      mload\n        /* \"#utility.yul\":6741:6804   */\n      tag_128\n        /* \"#utility.yul\":6798:6802   */\n      0x80\n        /* \"#utility.yul\":6793:6796   */\n      dup6\n        /* \"#utility.yul\":6789:6803   */\n      add\n        /* \"#utility.yul\":6775:6787   */\n      dup3\n        /* \"#utility.yul\":6741:6804   */\n      tag_53\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":6646:6814   */\n      pop\n        /* \"#utility.yul\":6900:6904   */\n      0xa0\n        /* \"#utility.yul\":6893:6898   */\n      dup3\n        /* \"#utility.yul\":6889:6905   */\n      add\n        /* \"#utility.yul\":6883:6906   */\n      mload\n        /* \"#utility.yul\":6919:6982   */\n      tag_129\n        /* \"#utility.yul\":6976:6980   */\n      0xa0\n        /* \"#utility.yul\":6971:6974   */\n      dup6\n        /* \"#utility.yul\":6967:6981   */\n      add\n        /* \"#utility.yul\":6953:6965   */\n      dup3\n        /* \"#utility.yul\":6919:6982   */\n      tag_53\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":6824:6992   */\n      pop\n        /* \"#utility.yul\":7086:7090   */\n      0xc0\n        /* \"#utility.yul\":7079:7084   */\n      dup3\n        /* \"#utility.yul\":7075:7091   */\n      add\n        /* \"#utility.yul\":7069:7092   */\n      mload\n        /* \"#utility.yul\":7105:7168   */\n      tag_130\n        /* \"#utility.yul\":7162:7166   */\n      0xc0\n        /* \"#utility.yul\":7157:7160   */\n      dup6\n        /* \"#utility.yul\":7153:7167   */\n      add\n        /* \"#utility.yul\":7139:7151   */\n      dup3\n        /* \"#utility.yul\":7105:7168   */\n      tag_53\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":7002:7178   */\n      pop\n        /* \"#utility.yul\":7273:7277   */\n      0xe0\n        /* \"#utility.yul\":7266:7271   */\n      dup3\n        /* \"#utility.yul\":7262:7278   */\n      add\n        /* \"#utility.yul\":7256:7279   */\n      mload\n        /* \"#utility.yul\":7292:7355   */\n      tag_131\n        /* \"#utility.yul\":7349:7353   */\n      0xe0\n        /* \"#utility.yul\":7344:7347   */\n      dup6\n        /* \"#utility.yul\":7340:7354   */\n      add\n        /* \"#utility.yul\":7326:7338   */\n      dup3\n        /* \"#utility.yul\":7292:7355   */\n      tag_54\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":7188:7365   */\n      pop\n        /* \"#utility.yul\":5893:7372   */\n      pop\n        /* \"#utility.yul\":5749:7372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7378:7757   */\n    tag_23:\n        /* \"#utility.yul\":7549:7553   */\n      0x00\n        /* \"#utility.yul\":7587:7590   */\n      0x0100\n        /* \"#utility.yul\":7576:7585   */\n      dup3\n        /* \"#utility.yul\":7572:7591   */\n      add\n        /* \"#utility.yul\":7564:7591   */\n      swap1\n      pop\n        /* \"#utility.yul\":7601:7750   */\n      tag_133\n        /* \"#utility.yul\":7747:7748   */\n      0x00\n        /* \"#utility.yul\":7736:7745   */\n      dup4\n        /* \"#utility.yul\":7732:7749   */\n      add\n        /* \"#utility.yul\":7723:7729   */\n      dup5\n        /* \"#utility.yul\":7601:7750   */\n      tag_55\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":7378:7757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7763:7906   */\n    tag_56:\n        /* \"#utility.yul\":7820:7825   */\n      0x00\n        /* \"#utility.yul\":7851:7857   */\n      dup2\n        /* \"#utility.yul\":7845:7858   */\n      mload\n        /* \"#utility.yul\":7836:7858   */\n      swap1\n      pop\n        /* \"#utility.yul\":7867:7900   */\n      tag_135\n        /* \"#utility.yul\":7894:7899   */\n      dup2\n        /* \"#utility.yul\":7867:7900   */\n      tag_38\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":7763:7906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7912:8263   */\n    tag_28:\n        /* \"#utility.yul\":7982:7988   */\n      0x00\n        /* \"#utility.yul\":8031:8033   */\n      0x20\n        /* \"#utility.yul\":8019:8028   */\n      dup3\n        /* \"#utility.yul\":8010:8017   */\n      dup5\n        /* \"#utility.yul\":8006:8029   */\n      sub\n        /* \"#utility.yul\":8002:8034   */\n      slt\n        /* \"#utility.yul\":7999:8118   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":8037:8116   */\n      tag_138\n      tag_31\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":7999:8118   */\n    tag_137:\n        /* \"#utility.yul\":8157:8158   */\n      0x00\n        /* \"#utility.yul\":8182:8246   */\n      tag_139\n        /* \"#utility.yul\":8238:8245   */\n      dup5\n        /* \"#utility.yul\":8229:8235   */\n      dup3\n        /* \"#utility.yul\":8218:8227   */\n      dup6\n        /* \"#utility.yul\":8214:8236   */\n      add\n        /* \"#utility.yul\":8182:8246   */\n      tag_56\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":8172:8246   */\n      swap2\n      pop\n        /* \"#utility.yul\":8128:8256   */\n      pop\n        /* \"#utility.yul\":7912:8263   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ced7d22871bfa86722d4ff07bdc77829cc82861bb9b99193ae8ffa8e2084f5c764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061076b8061005b5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f6e8f4ff1461002d575b5f80fd5b6100476004803603810190610042919061042d565b61005d565b60405161005491906104b3565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e39061054c565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fae0be8e6252914a661bbfc7564105c224e78711fa1ca76fc41d3209a3ecddd3a8560405161014991906104b3565b60405180910390a35f8490505f8790508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b387876040518363ffffffff1660e01b8152600401610194929190610579565b6020604051808303815f875af11580156101b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d491906105d5565b505f6040518061010001604052808a73ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018662ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018781526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f9cc9e4e0604c38363594f7c8f52370967eee2a7ab393f48c3c38aaa1a015e2c78160405161029e91906106dc565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102df91906106dc565b6020604051808303815f875af11580156102fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031f919061070a565b93507ff28e9c4f1b694c726eacd8c6049062f63c124c8af3fe23a314a3e75484d03a568460405161035091906104b3565b60405180910390a150505095945050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61039182610368565b9050919050565b6103a181610387565b81146103ab575f80fd5b50565b5f813590506103bc81610398565b92915050565b5f819050919050565b6103d4816103c2565b81146103de575f80fd5b50565b5f813590506103ef816103cb565b92915050565b5f62ffffff82169050919050565b61040c816103f5565b8114610416575f80fd5b50565b5f8135905061042781610403565b92915050565b5f805f805f60a0868803121561044657610445610364565b5b5f610453888289016103ae565b9550506020610464888289016103ae565b9450506040610475888289016103ae565b9350506060610486888289016103e1565b925050608061049788828901610419565b9150509295509295909350565b6104ad816103c2565b82525050565b5f6020820190506104c65f8301846104a4565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6105366021836104cc565b9150610541826104dc565b604082019050919050565b5f6020820190508181035f8301526105638161052a565b9050919050565b61057381610387565b82525050565b5f60408201905061058c5f83018561056a565b61059960208301846104a4565b9392505050565b5f8115159050919050565b6105b4816105a0565b81146105be575f80fd5b50565b5f815190506105cf816105ab565b92915050565b5f602082840312156105ea576105e9610364565b5b5f6105f7848285016105c1565b91505092915050565b61060981610387565b82525050565b610618816103f5565b82525050565b610627816103c2565b82525050565b61063681610368565b82525050565b61010082015f8201516106515f850182610600565b5060208201516106646020850182610600565b506040820151610677604085018261060f565b50606082015161068a6060850182610600565b50608082015161069d608085018261061e565b5060a08201516106b060a085018261061e565b5060c08201516106c360c085018261061e565b5060e08201516106d660e085018261062d565b50505050565b5f610100820190506106f05f83018461063c565b92915050565b5f81519050610704816103cb565b92915050565b5f6020828403121561071f5761071e610364565b5b5f61072c848285016106f6565b9150509291505056fea2646970667358221220ced7d22871bfa86722d4ff07bdc77829cc82861bb9b99193ae8ffa8e2084f5c764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x76B DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF6E8F4FF EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3 SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE0BE8E6252914A661BBFC7564105C224E78711FA1CA76FC41D3209A3ECDDD3A DUP6 PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP5 SWAP1 POP PUSH0 DUP8 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x9CC9E4E0604C38363594F7C8F52370967EEE2A7AB393F48C3C38AAA1A015E2C7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x70A JUMP JUMPDEST SWAP4 POP PUSH32 0xF28E9C4F1B694C726EACD8C6049062F63C124C8AF3FE23A314A3E75484D03A56 DUP5 PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x391 DUP3 PUSH2 0x368 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A1 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BC DUP2 PUSH2 0x398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D4 DUP2 PUSH2 0x3C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x3CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40C DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x416 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x427 DUP2 PUSH2 0x403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x453 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x464 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x475 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x486 DUP9 DUP3 DUP10 ADD PUSH2 0x3E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x497 DUP9 DUP3 DUP10 ADD PUSH2 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x4AD DUP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH1 0x21 DUP4 PUSH2 0x4CC JUMP JUMPDEST SWAP2 POP PUSH2 0x541 DUP3 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x563 DUP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x58C PUSH0 DUP4 ADD DUP6 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x599 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0x5A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x5BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CF DUP2 PUSH2 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5F7 DUP5 DUP3 DUP6 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x609 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x618 DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x636 DUP2 PUSH2 0x368 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x651 PUSH0 DUP6 ADD DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x664 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x677 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x60F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x68A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x69D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x6B0 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x6C3 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x6D6 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x62D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x6F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x63C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x704 DUP2 PUSH2 0x3CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x72C DUP5 DUP3 DUP6 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xD7 0xD2 0x28 PUSH18 0xBFA86722D4FF07BDC77829CC82861BB9B991 SWAP4 0xAE DUP16 STATICCALL DUP15 KECCAK256 DUP5 CREATE2 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "338:1473:4:-:0;;;604:105;;;;;;;;;;644:10;628:5;;:27;;;;;;;;;;;;;;;;;;338:1473;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@swapSingle_500": {
									"entryPoint": 93,
									"id": 500,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint24": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8266:5",
										"nodeType": "YulBlock",
										"src": "0:8266:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1241:47:5",
													"nodeType": "YulBlock",
													"src": "1241:47:5",
													"statements": [
														{
															"nativeSrc": "1251:31:5",
															"nodeType": "YulAssignment",
															"src": "1251:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1266:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1266:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1273:8:5",
																		"nodeType": "YulLiteral",
																		"src": "1273:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1262:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:5"
																},
																"nativeSrc": "1262:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1262:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1251:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1251:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "1197:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1223:5:5",
														"nodeType": "YulTypedName",
														"src": "1223:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1233:7:5",
														"nodeType": "YulTypedName",
														"src": "1233:7:5",
														"type": ""
													}
												],
												"src": "1197:91:5"
											},
											{
												"body": {
													"nativeSrc": "1336:78:5",
													"nodeType": "YulBlock",
													"src": "1336:78:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1392:16:5",
																"nodeType": "YulBlock",
																"src": "1392:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1401:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1401:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1404:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1394:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1394:6:5"
																			},
																			"nativeSrc": "1394:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1394:12:5"
																		},
																		"nativeSrc": "1394:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1394:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1359:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1359:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1383:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1383:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "1366:16:5",
																					"nodeType": "YulIdentifier",
																					"src": "1366:16:5"
																				},
																				"nativeSrc": "1366:23:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1366:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1356:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1356:2:5"
																		},
																		"nativeSrc": "1356:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1349:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1349:6:5"
																},
																"nativeSrc": "1349:42:5",
																"nodeType": "YulFunctionCall",
																"src": "1349:42:5"
															},
															"nativeSrc": "1346:62:5",
															"nodeType": "YulIf",
															"src": "1346:62:5"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "1294:120:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1329:5:5",
														"nodeType": "YulTypedName",
														"src": "1329:5:5",
														"type": ""
													}
												],
												"src": "1294:120:5"
											},
											{
												"body": {
													"nativeSrc": "1471:86:5",
													"nodeType": "YulBlock",
													"src": "1471:86:5",
													"statements": [
														{
															"nativeSrc": "1481:29:5",
															"nodeType": "YulAssignment",
															"src": "1481:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1503:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1490:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1490:12:5"
																},
																"nativeSrc": "1490:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1490:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1481:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1481:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1545:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1545:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "1519:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "1519:25:5"
																},
																"nativeSrc": "1519:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1519:32:5"
															},
															"nativeSrc": "1519:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "1519:32:5"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "1420:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1449:6:5",
														"nodeType": "YulTypedName",
														"src": "1449:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1457:3:5",
														"nodeType": "YulTypedName",
														"src": "1457:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1465:5:5",
														"nodeType": "YulTypedName",
														"src": "1465:5:5",
														"type": ""
													}
												],
												"src": "1420:137:5"
											},
											{
												"body": {
													"nativeSrc": "1696:776:5",
													"nodeType": "YulBlock",
													"src": "1696:776:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1743:83:5",
																"nodeType": "YulBlock",
																"src": "1743:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1745:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1745:77:5"
																			},
																			"nativeSrc": "1745:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1745:79:5"
																		},
																		"nativeSrc": "1745:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1745:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1717:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1717:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1726:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1726:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1713:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1713:3:5"
																		},
																		"nativeSrc": "1713:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1713:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1738:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1738:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:5"
																},
																"nativeSrc": "1709:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1709:33:5"
															},
															"nativeSrc": "1706:120:5",
															"nodeType": "YulIf",
															"src": "1706:120:5"
														},
														{
															"nativeSrc": "1836:117:5",
															"nodeType": "YulBlock",
															"src": "1836:117:5",
															"statements": [
																{
																	"nativeSrc": "1851:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1851:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1865:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1855:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1855:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1880:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1880:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1915:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1915:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1926:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1926:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1911:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1911:3:5"
																				},
																				"nativeSrc": "1911:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1911:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1935:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1935:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1890:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1890:20:5"
																		},
																		"nativeSrc": "1890:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1890:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1880:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1880:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1963:118:5",
															"nodeType": "YulBlock",
															"src": "1963:118:5",
															"statements": [
																{
																	"nativeSrc": "1978:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1992:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1982:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2008:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2008:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2043:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2043:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2054:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2054:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2039:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2039:3:5"
																				},
																				"nativeSrc": "2039:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2039:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2063:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2018:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2018:20:5"
																		},
																		"nativeSrc": "2018:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2008:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2008:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2091:118:5",
															"nodeType": "YulBlock",
															"src": "2091:118:5",
															"statements": [
																{
																	"nativeSrc": "2106:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2106:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2120:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2110:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2110:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2136:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2136:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2171:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2171:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2182:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2182:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2167:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:5"
																				},
																				"nativeSrc": "2167:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2146:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2146:20:5"
																		},
																		"nativeSrc": "2146:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2136:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2136:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2219:118:5",
															"nodeType": "YulBlock",
															"src": "2219:118:5",
															"statements": [
																{
																	"nativeSrc": "2234:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2234:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2248:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2238:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2238:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2264:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2264:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2299:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2299:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:5"
																				},
																				"nativeSrc": "2295:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2319:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2319:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2274:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2274:20:5"
																		},
																		"nativeSrc": "2274:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2264:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2264:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2347:118:5",
															"nodeType": "YulBlock",
															"src": "2347:118:5",
															"statements": [
																{
																	"nativeSrc": "2362:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2362:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2376:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2376:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2366:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2366:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2393:62:5",
																	"nodeType": "YulAssignment",
																	"src": "2393:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2427:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2427:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2438:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2438:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2423:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2423:3:5"
																				},
																				"nativeSrc": "2423:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2423:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2447:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2447:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "2403:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "2403:19:5"
																		},
																		"nativeSrc": "2403:52:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2393:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2393:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint24",
												"nativeSrc": "1563:909:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1634:9:5",
														"nodeType": "YulTypedName",
														"src": "1634:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1645:7:5",
														"nodeType": "YulTypedName",
														"src": "1645:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1657:6:5",
														"nodeType": "YulTypedName",
														"src": "1657:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1665:6:5",
														"nodeType": "YulTypedName",
														"src": "1665:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1673:6:5",
														"nodeType": "YulTypedName",
														"src": "1673:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1681:6:5",
														"nodeType": "YulTypedName",
														"src": "1681:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1689:6:5",
														"nodeType": "YulTypedName",
														"src": "1689:6:5",
														"type": ""
													}
												],
												"src": "1563:909:5"
											},
											{
												"body": {
													"nativeSrc": "2543:53:5",
													"nodeType": "YulBlock",
													"src": "2543:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2560:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2560:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2583:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2565:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2565:17:5"
																		},
																		"nativeSrc": "2565:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2553:6:5"
																},
																"nativeSrc": "2553:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2553:37:5"
															},
															"nativeSrc": "2553:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2553:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2478:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2531:5:5",
														"nodeType": "YulTypedName",
														"src": "2531:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2538:3:5",
														"nodeType": "YulTypedName",
														"src": "2538:3:5",
														"type": ""
													}
												],
												"src": "2478:118:5"
											},
											{
												"body": {
													"nativeSrc": "2700:124:5",
													"nodeType": "YulBlock",
													"src": "2700:124:5",
													"statements": [
														{
															"nativeSrc": "2710:26:5",
															"nodeType": "YulAssignment",
															"src": "2710:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2722:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2722:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2733:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2718:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:5"
																},
																"nativeSrc": "2718:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2718:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2710:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2710:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2790:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2790:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2803:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2814:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2799:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:5"
																		},
																		"nativeSrc": "2799:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2746:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2746:43:5"
																},
																"nativeSrc": "2746:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2746:71:5"
															},
															"nativeSrc": "2746:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2746:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2602:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:5",
														"nodeType": "YulTypedName",
														"src": "2672:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2684:6:5",
														"nodeType": "YulTypedName",
														"src": "2684:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2695:4:5",
														"nodeType": "YulTypedName",
														"src": "2695:4:5",
														"type": ""
													}
												],
												"src": "2602:222:5"
											},
											{
												"body": {
													"nativeSrc": "2926:73:5",
													"nodeType": "YulBlock",
													"src": "2926:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2943:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2943:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2948:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2948:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2936:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2936:6:5"
																},
																"nativeSrc": "2936:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2936:19:5"
															},
															"nativeSrc": "2936:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2936:19:5"
														},
														{
															"nativeSrc": "2964:29:5",
															"nodeType": "YulAssignment",
															"src": "2964:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2988:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2979:3:5"
																},
																"nativeSrc": "2979:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2979:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2964:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "2964:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2830:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2898:3:5",
														"nodeType": "YulTypedName",
														"src": "2898:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2903:6:5",
														"nodeType": "YulTypedName",
														"src": "2903:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2914:11:5",
														"nodeType": "YulTypedName",
														"src": "2914:11:5",
														"type": ""
													}
												],
												"src": "2830:169:5"
											},
											{
												"body": {
													"nativeSrc": "3111:114:5",
													"nodeType": "YulBlock",
													"src": "3111:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3133:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3133:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3141:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3141:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3129:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:5"
																		},
																		"nativeSrc": "3129:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3129:14:5"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "3145:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3145:34:5",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3122:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:5"
																},
																"nativeSrc": "3122:58:5",
																"nodeType": "YulFunctionCall",
																"src": "3122:58:5"
															},
															"nativeSrc": "3122:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "3122:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3201:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3201:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3209:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3209:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3197:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:5"
																		},
																		"nativeSrc": "3197:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:15:5"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "3214:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3214:3:5",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3190:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:5"
																},
																"nativeSrc": "3190:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3190:28:5"
															},
															"nativeSrc": "3190:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "3190:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "3005:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3103:6:5",
														"nodeType": "YulTypedName",
														"src": "3103:6:5",
														"type": ""
													}
												],
												"src": "3005:220:5"
											},
											{
												"body": {
													"nativeSrc": "3377:220:5",
													"nodeType": "YulBlock",
													"src": "3377:220:5",
													"statements": [
														{
															"nativeSrc": "3387:74:5",
															"nodeType": "YulAssignment",
															"src": "3387:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3453:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3453:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3458:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3458:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3394:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3394:58:5"
																},
																"nativeSrc": "3394:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3394:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3387:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3559:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3559:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "3470:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3470:88:5"
																},
																"nativeSrc": "3470:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3470:93:5"
															},
															"nativeSrc": "3470:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3470:93:5"
														},
														{
															"nativeSrc": "3572:19:5",
															"nodeType": "YulAssignment",
															"src": "3572:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3583:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3583:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3588:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3588:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:5"
																},
																"nativeSrc": "3579:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3579:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3572:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3572:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3231:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3365:3:5",
														"nodeType": "YulTypedName",
														"src": "3365:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3373:3:5",
														"nodeType": "YulTypedName",
														"src": "3373:3:5",
														"type": ""
													}
												],
												"src": "3231:366:5"
											},
											{
												"body": {
													"nativeSrc": "3774:248:5",
													"nodeType": "YulBlock",
													"src": "3774:248:5",
													"statements": [
														{
															"nativeSrc": "3784:26:5",
															"nodeType": "YulAssignment",
															"src": "3784:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3796:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3796:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3792:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:5"
																},
																"nativeSrc": "3792:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3792:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3784:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3784:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3831:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3842:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3842:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:5"
																		},
																		"nativeSrc": "3827:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3827:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3850:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3850:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3856:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3856:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3846:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:5"
																		},
																		"nativeSrc": "3846:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3820:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:5"
																},
																"nativeSrc": "3820:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3820:47:5"
															},
															"nativeSrc": "3820:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3820:47:5"
														},
														{
															"nativeSrc": "3876:139:5",
															"nodeType": "YulAssignment",
															"src": "3876:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4010:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4010:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3884:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "3884:124:5"
																},
																"nativeSrc": "3884:131:5",
																"nodeType": "YulFunctionCall",
																"src": "3884:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3876:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3876:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3603:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3754:9:5",
														"nodeType": "YulTypedName",
														"src": "3754:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3769:4:5",
														"nodeType": "YulTypedName",
														"src": "3769:4:5",
														"type": ""
													}
												],
												"src": "3603:419:5"
											},
											{
												"body": {
													"nativeSrc": "4093:53:5",
													"nodeType": "YulBlock",
													"src": "4093:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4110:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4110:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4133:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4133:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4115:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4115:17:5"
																		},
																		"nativeSrc": "4115:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4115:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4103:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:5"
																},
																"nativeSrc": "4103:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4103:37:5"
															},
															"nativeSrc": "4103:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4103:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4028:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4081:5:5",
														"nodeType": "YulTypedName",
														"src": "4081:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4088:3:5",
														"nodeType": "YulTypedName",
														"src": "4088:3:5",
														"type": ""
													}
												],
												"src": "4028:118:5"
											},
											{
												"body": {
													"nativeSrc": "4278:206:5",
													"nodeType": "YulBlock",
													"src": "4278:206:5",
													"statements": [
														{
															"nativeSrc": "4288:26:5",
															"nodeType": "YulAssignment",
															"src": "4288:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4300:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4300:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4311:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4311:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4296:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4296:3:5"
																},
																"nativeSrc": "4296:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4288:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4288:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4368:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4368:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4392:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:5"
																		},
																		"nativeSrc": "4377:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4324:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4324:43:5"
																},
																"nativeSrc": "4324:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4324:71:5"
															},
															"nativeSrc": "4324:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4324:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4449:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4449:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4462:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4462:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4473:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4473:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4458:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:5"
																		},
																		"nativeSrc": "4458:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4458:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4405:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4405:43:5"
																},
																"nativeSrc": "4405:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4405:72:5"
															},
															"nativeSrc": "4405:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4405:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4152:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4242:9:5",
														"nodeType": "YulTypedName",
														"src": "4242:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4254:6:5",
														"nodeType": "YulTypedName",
														"src": "4254:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4262:6:5",
														"nodeType": "YulTypedName",
														"src": "4262:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4273:4:5",
														"nodeType": "YulTypedName",
														"src": "4273:4:5",
														"type": ""
													}
												],
												"src": "4152:332:5"
											},
											{
												"body": {
													"nativeSrc": "4532:48:5",
													"nodeType": "YulBlock",
													"src": "4532:48:5",
													"statements": [
														{
															"nativeSrc": "4542:32:5",
															"nodeType": "YulAssignment",
															"src": "4542:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4567:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4567:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4560:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4560:6:5"
																		},
																		"nativeSrc": "4560:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:5"
																},
																"nativeSrc": "4553:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4553:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4542:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4542:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4490:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4514:5:5",
														"nodeType": "YulTypedName",
														"src": "4514:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4524:7:5",
														"nodeType": "YulTypedName",
														"src": "4524:7:5",
														"type": ""
													}
												],
												"src": "4490:90:5"
											},
											{
												"body": {
													"nativeSrc": "4626:76:5",
													"nodeType": "YulBlock",
													"src": "4626:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4680:16:5",
																"nodeType": "YulBlock",
																"src": "4680:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4689:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4689:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4692:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4692:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4682:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4682:6:5"
																			},
																			"nativeSrc": "4682:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4682:12:5"
																		},
																		"nativeSrc": "4682:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4682:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4649:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4649:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4671:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4671:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4656:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "4656:14:5"
																				},
																				"nativeSrc": "4656:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4656:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4646:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4646:2:5"
																		},
																		"nativeSrc": "4646:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:5"
																},
																"nativeSrc": "4639:40:5",
																"nodeType": "YulFunctionCall",
																"src": "4639:40:5"
															},
															"nativeSrc": "4636:60:5",
															"nodeType": "YulIf",
															"src": "4636:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4586:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4619:5:5",
														"nodeType": "YulTypedName",
														"src": "4619:5:5",
														"type": ""
													}
												],
												"src": "4586:116:5"
											},
											{
												"body": {
													"nativeSrc": "4768:77:5",
													"nodeType": "YulBlock",
													"src": "4768:77:5",
													"statements": [
														{
															"nativeSrc": "4778:22:5",
															"nodeType": "YulAssignment",
															"src": "4778:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4793:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4793:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4787:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4787:5:5"
																},
																"nativeSrc": "4787:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4787:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4778:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4809:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "4809:23:5"
																},
																"nativeSrc": "4809:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4809:30:5"
															},
															"nativeSrc": "4809:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4809:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4708:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4746:6:5",
														"nodeType": "YulTypedName",
														"src": "4746:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4754:3:5",
														"nodeType": "YulTypedName",
														"src": "4754:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4762:5:5",
														"nodeType": "YulTypedName",
														"src": "4762:5:5",
														"type": ""
													}
												],
												"src": "4708:137:5"
											},
											{
												"body": {
													"nativeSrc": "4925:271:5",
													"nodeType": "YulBlock",
													"src": "4925:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4971:83:5",
																"nodeType": "YulBlock",
																"src": "4971:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4973:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4973:77:5"
																			},
																			"nativeSrc": "4973:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4973:79:5"
																		},
																		"nativeSrc": "4973:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4973:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4946:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4946:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4955:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4955:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4942:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:5"
																		},
																		"nativeSrc": "4942:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4967:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4938:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:5"
																},
																"nativeSrc": "4938:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4938:32:5"
															},
															"nativeSrc": "4935:119:5",
															"nodeType": "YulIf",
															"src": "4935:119:5"
														},
														{
															"nativeSrc": "5064:125:5",
															"nodeType": "YulBlock",
															"src": "5064:125:5",
															"statements": [
																{
																	"nativeSrc": "5079:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5079:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5093:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5093:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5083:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5083:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5108:71:5",
																	"nodeType": "YulAssignment",
																	"src": "5108:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5147:3:5"
																				},
																				"nativeSrc": "5147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5118:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "5118:28:5"
																		},
																		"nativeSrc": "5118:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5118:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5108:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5108:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4851:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4895:9:5",
														"nodeType": "YulTypedName",
														"src": "4895:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4906:7:5",
														"nodeType": "YulTypedName",
														"src": "4906:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4918:6:5",
														"nodeType": "YulTypedName",
														"src": "4918:6:5",
														"type": ""
													}
												],
												"src": "4851:345:5"
											},
											{
												"body": {
													"nativeSrc": "5257:53:5",
													"nodeType": "YulBlock",
													"src": "5257:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5274:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5274:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5297:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5297:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5279:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5279:17:5"
																		},
																		"nativeSrc": "5279:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5267:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:5"
																},
																"nativeSrc": "5267:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5267:37:5"
															},
															"nativeSrc": "5267:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5267:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "5202:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5245:5:5",
														"nodeType": "YulTypedName",
														"src": "5245:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5252:3:5",
														"nodeType": "YulTypedName",
														"src": "5252:3:5",
														"type": ""
													}
												],
												"src": "5202:108:5"
											},
											{
												"body": {
													"nativeSrc": "5369:52:5",
													"nodeType": "YulBlock",
													"src": "5369:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5386:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5408:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5408:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "5391:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "5391:16:5"
																		},
																		"nativeSrc": "5391:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:5"
																},
																"nativeSrc": "5379:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5379:36:5"
															},
															"nativeSrc": "5379:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5379:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "5316:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5357:5:5",
														"nodeType": "YulTypedName",
														"src": "5357:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5364:3:5",
														"nodeType": "YulTypedName",
														"src": "5364:3:5",
														"type": ""
													}
												],
												"src": "5316:105:5"
											},
											{
												"body": {
													"nativeSrc": "5482:53:5",
													"nodeType": "YulBlock",
													"src": "5482:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5499:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5499:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5522:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5522:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5504:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5504:17:5"
																		},
																		"nativeSrc": "5504:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5504:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5492:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:5"
																},
																"nativeSrc": "5492:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5492:37:5"
															},
															"nativeSrc": "5492:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5492:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5427:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5470:5:5",
														"nodeType": "YulTypedName",
														"src": "5470:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5477:3:5",
														"nodeType": "YulTypedName",
														"src": "5477:3:5",
														"type": ""
													}
												],
												"src": "5427:108:5"
											},
											{
												"body": {
													"nativeSrc": "5596:53:5",
													"nodeType": "YulBlock",
													"src": "5596:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5613:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5613:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5636:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5636:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "5618:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5618:17:5"
																		},
																		"nativeSrc": "5618:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5618:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:5"
																},
																"nativeSrc": "5606:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5606:37:5"
															},
															"nativeSrc": "5606:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5606:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "5541:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5584:5:5",
														"nodeType": "YulTypedName",
														"src": "5584:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5591:3:5",
														"nodeType": "YulTypedName",
														"src": "5591:3:5",
														"type": ""
													}
												],
												"src": "5541:108:5"
											},
											{
												"body": {
													"nativeSrc": "5893:1479:5",
													"nodeType": "YulBlock",
													"src": "5893:1479:5",
													"statements": [
														{
															"nativeSrc": "5903:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5903:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5919:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5919:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5924:6:5",
																		"nodeType": "YulLiteral",
																		"src": "5924:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5915:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5915:3:5"
																},
																"nativeSrc": "5915:16:5",
																"nodeType": "YulFunctionCall",
																"src": "5915:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5907:4:5",
																	"nodeType": "YulTypedName",
																	"src": "5907:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5941:167:5",
															"nodeType": "YulBlock",
															"src": "5941:167:5",
															"statements": [
																{
																	"nativeSrc": "5979:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5979:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6009:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6009:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6016:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6016:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6005:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6005:3:5"
																				},
																				"nativeSrc": "6005:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6005:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5999:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5999:5:5"
																		},
																		"nativeSrc": "5999:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5999:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5983:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5983:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6069:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6069:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6087:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6087:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6092:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6092:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6083:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6083:3:5"
																				},
																				"nativeSrc": "6083:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6083:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6035:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6035:33:5"
																		},
																		"nativeSrc": "6035:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:63:5"
																	},
																	"nativeSrc": "6035:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6035:63:5"
																}
															]
														},
														{
															"nativeSrc": "6118:168:5",
															"nodeType": "YulBlock",
															"src": "6118:168:5",
															"statements": [
																{
																	"nativeSrc": "6157:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6157:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6187:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6187:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6194:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6194:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6183:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6183:3:5"
																				},
																				"nativeSrc": "6183:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6183:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6177:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:5"
																		},
																		"nativeSrc": "6177:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6161:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6161:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6247:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6247:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6265:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6265:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6270:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6270:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6261:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6261:3:5"
																				},
																				"nativeSrc": "6261:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6261:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6213:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6213:33:5"
																		},
																		"nativeSrc": "6213:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6213:63:5"
																	},
																	"nativeSrc": "6213:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6213:63:5"
																}
															]
														},
														{
															"nativeSrc": "6296:161:5",
															"nodeType": "YulBlock",
															"src": "6296:161:5",
															"statements": [
																{
																	"nativeSrc": "6330:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6330:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6360:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6360:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6367:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6367:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6356:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6356:3:5"
																				},
																				"nativeSrc": "6356:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6356:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6350:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6350:5:5"
																		},
																		"nativeSrc": "6350:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6350:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6334:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6334:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6418:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6418:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6436:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6436:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6441:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6441:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6432:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6432:3:5"
																				},
																				"nativeSrc": "6432:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6432:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "6386:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "6386:31:5"
																		},
																		"nativeSrc": "6386:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6386:61:5"
																	},
																	"nativeSrc": "6386:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6386:61:5"
																}
															]
														},
														{
															"nativeSrc": "6467:169:5",
															"nodeType": "YulBlock",
															"src": "6467:169:5",
															"statements": [
																{
																	"nativeSrc": "6507:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6507:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6537:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6537:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6544:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6544:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6533:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6533:3:5"
																				},
																				"nativeSrc": "6533:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6533:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6527:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6527:5:5"
																		},
																		"nativeSrc": "6527:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6527:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6511:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6511:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6597:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6597:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6615:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6615:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6620:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6620:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6611:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6611:3:5"
																				},
																				"nativeSrc": "6611:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6611:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6563:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6563:33:5"
																		},
																		"nativeSrc": "6563:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6563:63:5"
																	},
																	"nativeSrc": "6563:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6563:63:5"
																}
															]
														},
														{
															"nativeSrc": "6646:168:5",
															"nodeType": "YulBlock",
															"src": "6646:168:5",
															"statements": [
																{
																	"nativeSrc": "6685:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6685:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6715:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6715:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6722:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6722:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6711:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6711:3:5"
																				},
																				"nativeSrc": "6711:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6711:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6705:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6705:5:5"
																		},
																		"nativeSrc": "6705:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6705:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6689:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6689:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6775:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6775:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6793:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6793:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6798:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6798:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6789:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6789:3:5"
																				},
																				"nativeSrc": "6789:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6789:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6741:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6741:33:5"
																		},
																		"nativeSrc": "6741:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:63:5"
																	},
																	"nativeSrc": "6741:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6741:63:5"
																}
															]
														},
														{
															"nativeSrc": "6824:168:5",
															"nodeType": "YulBlock",
															"src": "6824:168:5",
															"statements": [
																{
																	"nativeSrc": "6863:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6863:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6893:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6893:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6900:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6900:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6889:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6889:3:5"
																				},
																				"nativeSrc": "6889:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6889:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6883:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6883:5:5"
																		},
																		"nativeSrc": "6883:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6883:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6867:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6867:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6953:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6953:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6971:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6971:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6976:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6976:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6967:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6967:3:5"
																				},
																				"nativeSrc": "6967:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6967:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6919:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6919:33:5"
																		},
																		"nativeSrc": "6919:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6919:63:5"
																	},
																	"nativeSrc": "6919:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6919:63:5"
																}
															]
														},
														{
															"nativeSrc": "7002:176:5",
															"nodeType": "YulBlock",
															"src": "7002:176:5",
															"statements": [
																{
																	"nativeSrc": "7049:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7049:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7079:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7079:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7086:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7086:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7075:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7075:3:5"
																				},
																				"nativeSrc": "7075:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7075:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7069:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7069:5:5"
																		},
																		"nativeSrc": "7069:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7069:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7053:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7053:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7139:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7139:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7157:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7157:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7162:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7162:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7153:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7153:3:5"
																				},
																				"nativeSrc": "7153:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7153:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7105:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7105:33:5"
																		},
																		"nativeSrc": "7105:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:63:5"
																	},
																	"nativeSrc": "7105:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7105:63:5"
																}
															]
														},
														{
															"nativeSrc": "7188:177:5",
															"nodeType": "YulBlock",
															"src": "7188:177:5",
															"statements": [
																{
																	"nativeSrc": "7236:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7236:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7266:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7266:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7262:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7262:3:5"
																				},
																				"nativeSrc": "7262:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7262:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7256:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7256:5:5"
																		},
																		"nativeSrc": "7256:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7256:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7240:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7240:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7326:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7326:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7344:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7344:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7349:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7349:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7340:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7340:3:5"
																				},
																				"nativeSrc": "7340:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7340:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "7292:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7292:33:5"
																		},
																		"nativeSrc": "7292:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7292:63:5"
																	},
																	"nativeSrc": "7292:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7292:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "5749:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5880:5:5",
														"nodeType": "YulTypedName",
														"src": "5880:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5887:3:5",
														"nodeType": "YulTypedName",
														"src": "5887:3:5",
														"type": ""
													}
												],
												"src": "5749:1623:5"
											},
											{
												"body": {
													"nativeSrc": "7554:203:5",
													"nodeType": "YulBlock",
													"src": "7554:203:5",
													"statements": [
														{
															"nativeSrc": "7564:27:5",
															"nodeType": "YulAssignment",
															"src": "7564:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7576:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7576:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7587:3:5",
																		"nodeType": "YulLiteral",
																		"src": "7587:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7572:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7572:3:5"
																},
																"nativeSrc": "7572:19:5",
																"nodeType": "YulFunctionCall",
																"src": "7572:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7564:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7564:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7723:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7723:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7736:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7736:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7747:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7747:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7732:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7732:3:5"
																		},
																		"nativeSrc": "7732:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7732:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "7601:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "7601:121:5"
																},
																"nativeSrc": "7601:149:5",
																"nodeType": "YulFunctionCall",
																"src": "7601:149:5"
															},
															"nativeSrc": "7601:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "7601:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "7378:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7526:9:5",
														"nodeType": "YulTypedName",
														"src": "7526:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7538:6:5",
														"nodeType": "YulTypedName",
														"src": "7538:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7549:4:5",
														"nodeType": "YulTypedName",
														"src": "7549:4:5",
														"type": ""
													}
												],
												"src": "7378:379:5"
											},
											{
												"body": {
													"nativeSrc": "7826:80:5",
													"nodeType": "YulBlock",
													"src": "7826:80:5",
													"statements": [
														{
															"nativeSrc": "7836:22:5",
															"nodeType": "YulAssignment",
															"src": "7836:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7851:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7851:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7845:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7845:5:5"
																},
																"nativeSrc": "7845:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7845:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7836:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7836:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7894:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7894:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7867:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "7867:26:5"
																},
																"nativeSrc": "7867:33:5",
																"nodeType": "YulFunctionCall",
																"src": "7867:33:5"
															},
															"nativeSrc": "7867:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "7867:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7763:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7804:6:5",
														"nodeType": "YulTypedName",
														"src": "7804:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7812:3:5",
														"nodeType": "YulTypedName",
														"src": "7812:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7820:5:5",
														"nodeType": "YulTypedName",
														"src": "7820:5:5",
														"type": ""
													}
												],
												"src": "7763:143:5"
											},
											{
												"body": {
													"nativeSrc": "7989:274:5",
													"nodeType": "YulBlock",
													"src": "7989:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8035:83:5",
																"nodeType": "YulBlock",
																"src": "8035:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8037:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8037:77:5"
																			},
																			"nativeSrc": "8037:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8037:79:5"
																		},
																		"nativeSrc": "8037:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8037:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8010:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8010:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8019:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8019:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8006:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8006:3:5"
																		},
																		"nativeSrc": "8006:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8006:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8031:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8031:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8002:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8002:3:5"
																},
																"nativeSrc": "8002:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8002:32:5"
															},
															"nativeSrc": "7999:119:5",
															"nodeType": "YulIf",
															"src": "7999:119:5"
														},
														{
															"nativeSrc": "8128:128:5",
															"nodeType": "YulBlock",
															"src": "8128:128:5",
															"statements": [
																{
																	"nativeSrc": "8143:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8143:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8157:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8157:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8147:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8147:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8172:74:5",
																	"nodeType": "YulAssignment",
																	"src": "8172:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8218:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8218:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8229:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8229:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8214:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8214:3:5"
																				},
																				"nativeSrc": "8214:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8214:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8238:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8238:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8182:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "8182:31:5"
																		},
																		"nativeSrc": "8182:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8182:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8172:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8172:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7912:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7959:9:5",
														"nodeType": "YulTypedName",
														"src": "7959:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7970:7:5",
														"nodeType": "YulTypedName",
														"src": "7970:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7982:6:5",
														"nodeType": "YulTypedName",
														"src": "7982:6:5",
														"type": ""
													}
												],
												"src": "7912:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint24(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f6e8f4ff1461002d575b5f80fd5b6100476004803603810190610042919061042d565b61005d565b60405161005491906104b3565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e39061054c565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fae0be8e6252914a661bbfc7564105c224e78711fa1ca76fc41d3209a3ecddd3a8560405161014991906104b3565b60405180910390a35f8490505f8790508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b387876040518363ffffffff1660e01b8152600401610194929190610579565b6020604051808303815f875af11580156101b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d491906105d5565b505f6040518061010001604052808a73ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018662ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018781526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f9cc9e4e0604c38363594f7c8f52370967eee2a7ab393f48c3c38aaa1a015e2c78160405161029e91906106dc565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102df91906106dc565b6020604051808303815f875af11580156102fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031f919061070a565b93507ff28e9c4f1b694c726eacd8c6049062f63c124c8af3fe23a314a3e75484d03a568460405161035091906104b3565b60405180910390a150505095945050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61039182610368565b9050919050565b6103a181610387565b81146103ab575f80fd5b50565b5f813590506103bc81610398565b92915050565b5f819050919050565b6103d4816103c2565b81146103de575f80fd5b50565b5f813590506103ef816103cb565b92915050565b5f62ffffff82169050919050565b61040c816103f5565b8114610416575f80fd5b50565b5f8135905061042781610403565b92915050565b5f805f805f60a0868803121561044657610445610364565b5b5f610453888289016103ae565b9550506020610464888289016103ae565b9450506040610475888289016103ae565b9350506060610486888289016103e1565b925050608061049788828901610419565b9150509295509295909350565b6104ad816103c2565b82525050565b5f6020820190506104c65f8301846104a4565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6105366021836104cc565b9150610541826104dc565b604082019050919050565b5f6020820190508181035f8301526105638161052a565b9050919050565b61057381610387565b82525050565b5f60408201905061058c5f83018561056a565b61059960208301846104a4565b9392505050565b5f8115159050919050565b6105b4816105a0565b81146105be575f80fd5b50565b5f815190506105cf816105ab565b92915050565b5f602082840312156105ea576105e9610364565b5b5f6105f7848285016105c1565b91505092915050565b61060981610387565b82525050565b610618816103f5565b82525050565b610627816103c2565b82525050565b61063681610368565b82525050565b61010082015f8201516106515f850182610600565b5060208201516106646020850182610600565b506040820151610677604085018261060f565b50606082015161068a6060850182610600565b50608082015161069d608085018261061e565b5060a08201516106b060a085018261061e565b5060c08201516106c360c085018261061e565b5060e08201516106d660e085018261062d565b50505050565b5f610100820190506106f05f83018461063c565b92915050565b5f81519050610704816103cb565b92915050565b5f6020828403121561071f5761071e610364565b5b5f61072c848285016106f6565b9150509291505056fea2646970667358221220ced7d22871bfa86722d4ff07bdc77829cc82861bb9b99193ae8ffa8e2084f5c764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF6E8F4FF EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3 SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE0BE8E6252914A661BBFC7564105C224E78711FA1CA76FC41D3209A3ECDDD3A DUP6 PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP5 SWAP1 POP PUSH0 DUP8 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x9CC9E4E0604C38363594F7C8F52370967EEE2A7AB393F48C3C38AAA1A015E2C7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x70A JUMP JUMPDEST SWAP4 POP PUSH32 0xF28E9C4F1B694C726EACD8C6049062F63C124C8AF3FE23A314A3E75484D03A56 DUP5 PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x391 DUP3 PUSH2 0x368 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A1 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BC DUP2 PUSH2 0x398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D4 DUP2 PUSH2 0x3C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x3CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40C DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x416 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x427 DUP2 PUSH2 0x403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x453 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x464 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x475 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x486 DUP9 DUP3 DUP10 ADD PUSH2 0x3E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x497 DUP9 DUP3 DUP10 ADD PUSH2 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x4AD DUP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH1 0x21 DUP4 PUSH2 0x4CC JUMP JUMPDEST SWAP2 POP PUSH2 0x541 DUP3 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x563 DUP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x58C PUSH0 DUP4 ADD DUP6 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x599 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0x5A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x5BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CF DUP2 PUSH2 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5F7 DUP5 DUP3 DUP6 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x609 DUP2 PUSH2 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x618 DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x636 DUP2 PUSH2 0x368 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x651 PUSH0 DUP6 ADD DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x664 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x677 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x60F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x68A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x600 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x69D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x6B0 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x6C3 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x6D6 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x62D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x6F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x63C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x704 DUP2 PUSH2 0x3CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x72C DUP5 DUP3 DUP6 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xD7 0xD2 0x28 PUSH18 0xBFA86722D4FF07BDC77829CC82861BB9B991 SWAP4 0xAE DUP16 STATICCALL DUP15 KECCAK256 DUP5 CREATE2 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "338:1473:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:974;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1025:17;768:5;;;;;;;;;;;754:19;;:10;:19;;;746:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1090:11:::1;1063:49;;1072:8;1063:49;;;1104:7;1063:49;;;;;;:::i;:::-;;;;;;;;1122:22;1159:11;1122:49;;1181:14;1205:8;1181:33;;1225:7;:15;;;1249:11;1263:7;1225:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1282:48;1333:309;;;;;;;;1391:8;1333:309;;;;;;1423:9;1333:309;;;;;;1451:8;1333:309;;;;;;1484:10;1333:309;;;;;;1518:15;1333:309;;;;1557:7;1333:309;;;;1596:1;1333:309;;;;1630:1;1333:309;;;;::::0;1282:360:::1;;1658:21;1672:6;1658:21;;;;;;:::i;:::-;;;;;;;;1702:10;:27;;;1730:6;1702:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1690:47;;1753:23;1766:9;1753:23;;;;;;:::i;:::-;;;;;;;;1786:16;;;835:974:::0;;;;;;;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:91::-;1233:7;1273:8;1266:5;1262:20;1251:31;;1197:91;;;:::o;1294:120::-;1366:23;1383:5;1366:23;:::i;:::-;1359:5;1356:34;1346:62;;1404:1;1401;1394:12;1346:62;1294:120;:::o;1420:137::-;1465:5;1503:6;1490:20;1481:29;;1519:32;1545:5;1519:32;:::i;:::-;1420:137;;;;:::o;1563:909::-;1657:6;1665;1673;1681;1689;1738:3;1726:9;1717:7;1713:23;1709:33;1706:120;;;1745:79;;:::i;:::-;1706:120;1865:1;1890:53;1935:7;1926:6;1915:9;1911:22;1890:53;:::i;:::-;1880:63;;1836:117;1992:2;2018:53;2063:7;2054:6;2043:9;2039:22;2018:53;:::i;:::-;2008:63;;1963:118;2120:2;2146:53;2191:7;2182:6;2171:9;2167:22;2146:53;:::i;:::-;2136:63;;2091:118;2248:2;2274:53;2319:7;2310:6;2299:9;2295:22;2274:53;:::i;:::-;2264:63;;2219:118;2376:3;2403:52;2447:7;2438:6;2427:9;2423:22;2403:52;:::i;:::-;2393:62;;2347:118;1563:909;;;;;;;;:::o;2478:118::-;2565:24;2583:5;2565:24;:::i;:::-;2560:3;2553:37;2478:118;;:::o;2602:222::-;2695:4;2733:2;2722:9;2718:18;2710:26;;2746:71;2814:1;2803:9;2799:17;2790:6;2746:71;:::i;:::-;2602:222;;;;:::o;2830:169::-;2914:11;2948:6;2943:3;2936:19;2988:4;2983:3;2979:14;2964:29;;2830:169;;;;:::o;3005:220::-;3145:34;3141:1;3133:6;3129:14;3122:58;3214:3;3209:2;3201:6;3197:15;3190:28;3005:220;:::o;3231:366::-;3373:3;3394:67;3458:2;3453:3;3394:67;:::i;:::-;3387:74;;3470:93;3559:3;3470:93;:::i;:::-;3588:2;3583:3;3579:12;3572:19;;3231:366;;;:::o;3603:419::-;3769:4;3807:2;3796:9;3792:18;3784:26;;3856:9;3850:4;3846:20;3842:1;3831:9;3827:17;3820:47;3884:131;4010:4;3884:131;:::i;:::-;3876:139;;3603:419;;;:::o;4028:118::-;4115:24;4133:5;4115:24;:::i;:::-;4110:3;4103:37;4028:118;;:::o;4152:332::-;4273:4;4311:2;4300:9;4296:18;4288:26;;4324:71;4392:1;4381:9;4377:17;4368:6;4324:71;:::i;:::-;4405:72;4473:2;4462:9;4458:18;4449:6;4405:72;:::i;:::-;4152:332;;;;;:::o;4490:90::-;4524:7;4567:5;4560:13;4553:21;4542:32;;4490:90;;;:::o;4586:116::-;4656:21;4671:5;4656:21;:::i;:::-;4649:5;4646:32;4636:60;;4692:1;4689;4682:12;4636:60;4586:116;:::o;4708:137::-;4762:5;4793:6;4787:13;4778:22;;4809:30;4833:5;4809:30;:::i;:::-;4708:137;;;;:::o;4851:345::-;4918:6;4967:2;4955:9;4946:7;4942:23;4938:32;4935:119;;;4973:79;;:::i;:::-;4935:119;5093:1;5118:61;5171:7;5162:6;5151:9;5147:22;5118:61;:::i;:::-;5108:71;;5064:125;4851:345;;;;:::o;5202:108::-;5279:24;5297:5;5279:24;:::i;:::-;5274:3;5267:37;5202:108;;:::o;5316:105::-;5391:23;5408:5;5391:23;:::i;:::-;5386:3;5379:36;5316:105;;:::o;5427:108::-;5504:24;5522:5;5504:24;:::i;:::-;5499:3;5492:37;5427:108;;:::o;5541:::-;5618:24;5636:5;5618:24;:::i;:::-;5613:3;5606:37;5541:108;;:::o;5749:1623::-;5924:6;5919:3;5915:16;6016:4;6009:5;6005:16;5999:23;6035:63;6092:4;6087:3;6083:14;6069:12;6035:63;:::i;:::-;5941:167;6194:4;6187:5;6183:16;6177:23;6213:63;6270:4;6265:3;6261:14;6247:12;6213:63;:::i;:::-;6118:168;6367:4;6360:5;6356:16;6350:23;6386:61;6441:4;6436:3;6432:14;6418:12;6386:61;:::i;:::-;6296:161;6544:4;6537:5;6533:16;6527:23;6563:63;6620:4;6615:3;6611:14;6597:12;6563:63;:::i;:::-;6467:169;6722:4;6715:5;6711:16;6705:23;6741:63;6798:4;6793:3;6789:14;6775:12;6741:63;:::i;:::-;6646:168;6900:4;6893:5;6889:16;6883:23;6919:63;6976:4;6971:3;6967:14;6953:12;6919:63;:::i;:::-;6824:168;7086:4;7079:5;7075:16;7069:23;7105:63;7162:4;7157:3;7153:14;7139:12;7105:63;:::i;:::-;7002:176;7273:4;7266:5;7262:16;7256:23;7292:63;7349:4;7344:3;7340:14;7326:12;7292:63;:::i;:::-;7188:177;5893:1479;5749:1623;;:::o;7378:379::-;7549:4;7587:3;7576:9;7572:19;7564:27;;7601:149;7747:1;7736:9;7732:17;7723:6;7601:149;:::i;:::-;7378:379;;;;:::o;7763:143::-;7820:5;7851:6;7845:13;7836:22;;7867:33;7894:5;7867:33;:::i;:::-;7763:143;;;;:::o;7912:351::-;7982:6;8031:2;8019:9;8010:7;8006:23;8002:32;7999:119;;;8037:79;;:::i;:::-;7999:119;8157:1;8182:64;8238:7;8229:6;8218:9;8214:22;8182:64;:::i;:::-;8172:74;;8128:128;7912:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "379800",
								"executionCost": "24681",
								"totalCost": "404481"
							},
							"external": {
								"swapSingle(address,address,address,uint256,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 338,
									"end": 1811,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 709,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 709,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 709,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 604,
									"end": 709,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 644,
									"end": 654,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 628,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 633,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 628,
									"end": 655,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 628,
									"end": 655,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 628,
									"end": 655,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 1811,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ced7d22871bfa86722d4ff07bdc77829cc82861bb9b99193ae8ffa8e2084f5c764736f6c63430008190033",
									".code": [
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "F6E8F4FF"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 338,
											"end": 1811,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 835,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 835,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 835,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 754,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 773,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 754,
											"end": 764,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 754,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 773,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 754,
											"end": 773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 746,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 746,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 746,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1080,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "AE0BE8E6252914A661BBFC7564105C224E78711FA1CA76FC41D3209A3ECDDD3A"
										},
										{
											"begin": 1104,
											"end": 1111,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1063,
											"end": 1112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1112,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1170,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1249,
											"end": 1260,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1270,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1225,
											"end": 1271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1271,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1225,
											"end": 1271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1391,
											"end": 1399,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1432,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1494,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1533,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1564,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1596,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9CC9E4E0604C38363594F7C8F52370967EEE2A7AB393F48C3C38AAA1A015E2C7"
										},
										{
											"begin": 1672,
											"end": 1678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1658,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1679,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 1730,
											"end": 1736,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1702,
											"end": 1737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1702,
											"end": 1737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1702,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F28E9C4F1B694C726EACD8C6049062F63C124C8AF3FE23A314A3E75484D03A56"
										},
										{
											"begin": 1766,
											"end": 1775,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1753,
											"end": 1776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1776,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 1266,
											"end": 1271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1383,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1356,
											"end": 1390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1519,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1741,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1745,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1890,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2018,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2071,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2180,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2146,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2199,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2319,
											"end": 2326,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2274,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2436,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2403,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2583,
											"end": 2588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2565,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2560,
											"end": 2563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2746,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3225,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3005,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3458,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3453,
											"end": 3456,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3394,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3559,
											"end": 3562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3470,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3866,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4010,
											"end": 4014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3884,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4146,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4028,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4133,
											"end": 4138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4115,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4300,
											"end": 4309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4392,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4324,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4395,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4324,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4462,
											"end": 4471,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4405,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4477,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4405,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4580,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4490,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4560,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4702,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4586,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4671,
											"end": 4676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4656,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 4654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4678,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4692,
											"end": 4693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4694,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4845,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4708,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4800,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4833,
											"end": 4838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4809,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4845,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 5196,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4851,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4918,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4969,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 4965,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4970,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4973,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5171,
											"end": 5178,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5118,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5179,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5118,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 5196,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 5196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 5196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 5196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 5196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5310,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5202,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5279,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5279,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5267,
											"end": 5304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5421,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5316,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5408,
											"end": 5413,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5421,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5421,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5535,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5427,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5522,
											"end": 5527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 5504,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5528,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5504,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5649,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5541,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5636,
											"end": 5641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5618,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 7372,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5749,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5930,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 6020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6022,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6090,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6069,
											"end": 6081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6035,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6098,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6035,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5941,
											"end": 6108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6194,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6187,
											"end": 6192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6183,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6200,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6270,
											"end": 6274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6261,
											"end": 6275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6213,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6276,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6213,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6365,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6441,
											"end": 6445,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6418,
											"end": 6430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 6386,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6447,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6386,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6296,
											"end": 6457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6537,
											"end": 6542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6563,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6626,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6563,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6722,
											"end": 6726,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6711,
											"end": 6727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6803,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6741,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6804,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6741,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6900,
											"end": 6904,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6893,
											"end": 6898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6906,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6976,
											"end": 6980,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6971,
											"end": 6974,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6967,
											"end": 6981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6919,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6982,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6919,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6824,
											"end": 6992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7092,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7157,
											"end": 7160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7151,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 7105,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7266,
											"end": 7271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7262,
											"end": 7278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7256,
											"end": 7279,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7292,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7344,
											"end": 7347,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7340,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7292,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 7292,
											"end": 7355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7292,
											"end": 7355,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7292,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 7372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 7372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 7372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 7372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7757,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 7378,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7549,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7587,
											"end": 7590,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 7747,
											"end": 7748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7729,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 7601,
											"end": 7750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7750,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 7601,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7757,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7906,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 7763,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 7825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 7857,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7858,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 7858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 7858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7894,
											"end": 7899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 7867,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7900,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7867,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7906,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8019,
											"end": 8028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8010,
											"end": 8017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8034,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8118,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 7999,
											"end": 8118,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8037,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8118,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 7999,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 8238,
											"end": 8245,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8218,
											"end": 8227,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 8182,
											"end": 8246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8246,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 8182,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8172,
											"end": 8246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8172,
											"end": 8246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 8263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"swapSingle(address,address,address,uint256,uint24)": "f6e8f4ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InputSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"indexed\":false,\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"SwapInitiated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"_poolFee\",\"type\":\"uint24\"}],\"name\":\"swapSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapContract.sol\":\"SwapContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/SwapContract.sol\":{\"keccak256\":\"0xd33b0e89fe47aa83128c1c3f05e260cbaac08faa254604fb3d975883bddaa04d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76e0f1c733d9cfd708304a7ec5d73a11bead8b48f295141053d2c7a87ffa898b\",\"dweb:/ipfs/QmVZ2QBccqELxHnpfS5yVwNjkzGAhGKS61FMdtqHchtKow\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/SwapContract.sol:SwapContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/SwapContract.sol": {
				"ast": {
					"absolutePath": "contracts/SwapContract.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"SwapContract": [
							501
						],
						"TransferHelper": [
							362
						]
					},
					"id": 502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 502,
							"sourceUnit": 192,
							"src": "85:87:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 365,
										"name": "ISwapRouter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 191,
										"src": "93:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 502,
							"sourceUnit": 363,
							"src": "173:92:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 367,
										"name": "TransferHelper",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "181:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 502,
							"sourceUnit": 78,
							"src": "266:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 369,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "274:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 501,
							"linearizedBaseContracts": [
								501
							],
							"name": "SwapContract",
							"nameLocation": "347:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "382:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 501,
									"src": "366:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "366:15:4",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "9cc9e4e0604c38363594f7c8f52370967eee2a7ab393f48c3c38aaa1a015e2c7",
									"id": 377,
									"name": "SwapInitiated",
									"nameLocation": "414:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "463:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "428:41:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 373,
														"name": "ISwapRouter.ExactInputSingleParams",
														"nameLocations": [
															"428:11:4",
															"440:22:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "428:34:4"
													},
													"referencedDeclaration": 115,
													"src": "428:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:43:4"
									},
									"src": "408:63:4"
								},
								{
									"anonymous": false,
									"eventSelector": "f28e9c4f1b694c726eacd8c6049062f63c124c8af3fe23a314a3e75484d03a56",
									"id": 381,
									"name": "SwapFinished",
									"nameLocation": "482:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "503:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "495:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:19:4"
									},
									"src": "476:38:4"
								},
								{
									"anonymous": false,
									"eventSelector": "ae0be8e6252914a661bbfc7564105c224e78711fa1ca76fc41d3209a3ecddd3a",
									"id": 389,
									"name": "InputSet",
									"nameLocation": "525:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "550:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "534:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "573:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "557:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "582:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:64:4"
									},
									"src": "519:79:4"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "618:91:4",
										"statements": [
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "628:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 395,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "644:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "648:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "644:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "636:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 393,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "636:8:4",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "636:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "628:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "628:27:4"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:0:4"
									},
									"scope": 501,
									"src": "604:105:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "736:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 404,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "754:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "758:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "754:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 406,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "768:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "754:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "775:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "746:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "746:65:4"
											},
											{
												"id": 411,
												"nodeType": "PlaceholderStatement",
												"src": "821:1:4"
											}
										]
									},
									"id": 413,
									"name": "onlyOwner",
									"nameLocation": "724:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:4"
									},
									"src": "715:114:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1048:761:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 431,
															"name": "_tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "1072:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 434,
																	"name": "_swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1090:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1082:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1082:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1082:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "1104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"name": "InputSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1063:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "EmitStatement",
												"src": "1058:54:4"
											},
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "swapRouter",
														"nameLocation": "1134:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "1122:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														},
														"typeName": {
															"id": 440,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 439,
																"name": "ISwapRouter",
																"nameLocations": [
																	"1122:11:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 191,
																"src": "1122:11:4"
															},
															"referencedDeclaration": 191,
															"src": "1122:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$191",
																"typeString": "contract ISwapRouter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"id": 443,
															"name": "_swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1159:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 442,
														"name": "ISwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "1147:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
															"typeString": "type(contract ISwapRouter)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:49:4"
											},
											{
												"assignments": [
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "1188:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "1181:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 447,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 446,
																"name": "IERC20",
																"nameLocations": [
																	"1181:6:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 77,
																"src": "1181:6:4"
															},
															"referencedDeclaration": 77,
															"src": "1181:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 450,
															"name": "_tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "1205:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 449,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1198:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1198:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1181:33:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 458,
																	"name": "_swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1249:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1241:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 456,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1241:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1241:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "1263:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 453,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "1225:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1233:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1225:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "1225:46:4"
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1324:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "1282:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 466,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 465,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1282:11:4",
																	"1294:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1282:34:4"
															},
															"referencedDeclaration": 115,
															"src": "1282:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [
														{
															"id": 470,
															"name": "_tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "1391:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "_tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1423:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "_poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1451:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1484:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1488:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1484:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 475,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1518:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1524:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1518:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 477,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "1557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1596:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1630:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 468,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1333:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1345:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1333:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1382:7:4",
														"1413:8:4",
														"1446:3:4",
														"1473:9:4",
														"1508:8:4",
														"1547:8:4",
														"1578:16:4",
														"1611:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1333:309:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1282:360:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 483,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "1672:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"id": 482,
														"name": "SwapInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "1658:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$__$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "1653:26:4"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "1690:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 489,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1730:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 487,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "1702:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1713:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "1702:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1702:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1690:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "1690:47:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 494,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "1766:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 493,
														"name": "SwapFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "1753:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1753:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "1748:28:4"
											},
											{
												"expression": {
													"id": 497,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "1793:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 429,
												"id": 498,
												"nodeType": "Return",
												"src": "1786:16:4"
											}
										]
									},
									"functionSelector": "f6e8f4ff",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "onlyOwner",
												"nameLocations": [
													"1006:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "1006:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1006:9:4"
										}
									],
									"name": "swapSingle",
									"nameLocation": "844:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "_tokenIn",
												"nameLocation": "872:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "864:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "_tokenOut",
												"nameLocation": "898:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "890:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "925:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "917:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "954:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "946:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "_poolFee",
												"nameLocation": "978:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "971:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 422,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "971:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:138:4"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1033:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1025:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:19:4"
									},
									"scope": 501,
									"src": "835:974:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 502,
							"src": "338:1473:4",
							"usedErrors": [],
							"usedEvents": [
								377,
								381,
								389
							]
						}
					],
					"src": "59:1753:4"
				},
				"id": 4
			}
		}
	}
}