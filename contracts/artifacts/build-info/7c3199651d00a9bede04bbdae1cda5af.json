{
	"id": "7c3199651d00a9bede04bbdae1cda5af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapContract.sol": {
				"content": "// contracts/FlashLoan.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ISwapRouter} from '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport {TransferHelper} from '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\n\ncontract SwapContract {\n    address payable owner;\n\n    constructor() {\n        owner = payable(msg.sender); // make the deployer of the contract the owner\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n\n    function swapSingle(\n        address _tokenIn,\n        address _tokenOut,\n        address _swapRouter,\n        uint256 _amount,\n        uint24 _poolFee\n        )\n        external onlyOwner\n        returns (uint256 amountOut)\n        {\n        ISwapRouter swapRouter = ISwapRouter(_swapRouter);\n\n        // The msg.sender must approve of this token to be spent by the router.\n\n        // Transfer the specified amount of token to this contract.\n        TransferHelper.safeTransferFrom(_tokenIn, msg.sender, address(this), _amount);\n\n        // Approve the router to spend token.\n        TransferHelper.safeApprove(_tokenIn, address(swapRouter), _amount);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n                tokenIn: _tokenIn,\n                tokenOut: _tokenOut,\n                fee: _poolFee,\n                recipient: msg.sender,\n                deadline: block.number,\n                amountIn: _amount,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountOut = swapRouter.exactInputSingle(params);\n\n        return amountOut;\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE LOG1 POP PUSH9 0xD1EDDDCA978E124D43 SAR 0x2E SWAP13 0xDB PC SIGNEXTEND 0x25 JUMPI SWAP4 0xF8 0xCE BASEFEE BLOBBASEFEE SDIV BALANCE POP SWAP11 ORIGIN SSTORE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036a15068d1edddca978e124d431d2e9cdb580b255793f8ce484a0531509a325564736f6c63430008190033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapContract.sol": {
				"SwapContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenOut",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "_poolFee",
									"type": "uint24"
								}
							],
							"name": "swapSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapContract.sol\":267:1806  contract SwapContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SwapContract.sol\":323:428  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SwapContract.sol\":363:373  msg.sender */\n  caller\n    /* \"contracts/SwapContract.sol\":347:352  owner */\n  0x00\n  dup1\n    /* \"contracts/SwapContract.sol\":347:374  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SwapContract.sol\":267:1806  contract SwapContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapContract.sol\":267:1806  contract SwapContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf6e8f4ff\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapContract.sol\":554:1804  function swapSingle(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/SwapContract.sol\":760:777  uint256 amountOut */\n      0x00\n        /* \"contracts/SwapContract.sol\":487:492  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SwapContract.sol\":473:492  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SwapContract.sol\":473:483  msg.sender */\n      caller\n        /* \"contracts/SwapContract.sol\":473:492  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SwapContract.sol\":465:530  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"contracts/SwapContract.sol\":797:819  ISwapRouter swapRouter */\n      0x00\n        /* \"contracts/SwapContract.sol\":834:845  _swapRouter */\n      dup5\n        /* \"contracts/SwapContract.sol\":797:846  ISwapRouter swapRouter = ISwapRouter(_swapRouter) */\n      swap1\n      pop\n        /* \"contracts/SwapContract.sol\":1006:1083  TransferHelper.safeTransferFrom(_tokenIn, msg.sender, address(this), _amount) */\n      tag_15\n        /* \"contracts/SwapContract.sol\":1038:1046  _tokenIn */\n      dup8\n        /* \"contracts/SwapContract.sol\":1048:1058  msg.sender */\n      caller\n        /* \"contracts/SwapContract.sol\":1068:1072  this */\n      address\n        /* \"contracts/SwapContract.sol\":1075:1082  _amount */\n      dup8\n        /* \"contracts/SwapContract.sol\":1006:1037  TransferHelper.safeTransferFrom */\n      tag_16\n        /* \"contracts/SwapContract.sol\":1006:1083  TransferHelper.safeTransferFrom(_tokenIn, msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_15:\n        /* \"contracts/SwapContract.sol\":1140:1206  TransferHelper.safeApprove(_tokenIn, address(swapRouter), _amount) */\n      tag_17\n        /* \"contracts/SwapContract.sol\":1167:1175  _tokenIn */\n      dup8\n        /* \"contracts/SwapContract.sol\":1185:1195  swapRouter */\n      dup3\n        /* \"contracts/SwapContract.sol\":1198:1205  _amount */\n      dup7\n        /* \"contracts/SwapContract.sol\":1140:1166  TransferHelper.safeApprove */\n      tag_18\n        /* \"contracts/SwapContract.sol\":1140:1206  TransferHelper.safeApprove(_tokenIn, address(swapRouter), _amount) */\n      jump\t// in\n    tag_17:\n        /* \"contracts/SwapContract.sol\":1217:1265  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SwapContract.sol\":1330:1338  _tokenIn */\n      dup10\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1366:1375  _tokenOut */\n      dup9\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1398:1406  _poolFee */\n      dup6\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1435:1445  msg.sender */\n      caller\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1473:1485  block.number */\n      number\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1513:1520  _amount */\n      dup7\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1556:1557  0 */\n      0x00\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SwapContract.sol\":1594:1595  0 */\n      0x00\n        /* \"contracts/SwapContract.sol\":1268:1610  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SwapContract.sol\":1217:1610  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"contracts/SwapContract.sol\":1735:1745  swapRouter */\n      dup2\n        /* \"contracts/SwapContract.sol\":1735:1762  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/SwapContract.sol\":1763:1769  params */\n      dup3\n        /* \"contracts/SwapContract.sol\":1735:1770  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/SwapContract.sol\":1723:1770  amountOut = swapRouter.exactInputSingle(params) */\n      swap3\n      pop\n        /* \"contracts/SwapContract.sol\":1781:1797  return amountOut */\n      pop\n      pop\n        /* \"contracts/SwapContract.sol\":554:1804  function swapSingle(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_16:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_32\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_31)\n    tag_32:\n      0x60\n      swap2\n      pop\n    tag_31:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_33\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_34\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_34:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_33:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_18:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_43:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_46\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_45)\n    tag_46:\n      0x60\n      swap2\n      pop\n    tag_45:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_47\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_48\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_49:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_48:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_47:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_54:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_56:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_57:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_94\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_56\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_58:\n        /* \"#utility.yul\":641:665   */\n      tag_96\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_57\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_97:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_59:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_99\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_58\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_60:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_61:\n        /* \"#utility.yul\":997:1021   */\n      tag_102\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_60\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_103:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_62:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_105\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_61\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1288   */\n    tag_63:\n        /* \"#utility.yul\":1233:1240   */\n      0x00\n        /* \"#utility.yul\":1273:1281   */\n      0xffffff\n        /* \"#utility.yul\":1266:1271   */\n      dup3\n        /* \"#utility.yul\":1262:1282   */\n      and\n        /* \"#utility.yul\":1251:1282   */\n      swap1\n      pop\n        /* \"#utility.yul\":1197:1288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1414   */\n    tag_64:\n        /* \"#utility.yul\":1366:1389   */\n      tag_108\n        /* \"#utility.yul\":1383:1388   */\n      dup2\n        /* \"#utility.yul\":1366:1389   */\n      tag_63\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1359:1364   */\n      dup2\n        /* \"#utility.yul\":1356:1390   */\n      eq\n        /* \"#utility.yul\":1346:1408   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1401:1402   */\n      dup1\n        /* \"#utility.yul\":1394:1406   */\n      revert\n        /* \"#utility.yul\":1346:1408   */\n    tag_109:\n        /* \"#utility.yul\":1294:1414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1557   */\n    tag_65:\n        /* \"#utility.yul\":1465:1470   */\n      0x00\n        /* \"#utility.yul\":1503:1509   */\n      dup2\n        /* \"#utility.yul\":1490:1510   */\n      calldataload\n        /* \"#utility.yul\":1481:1510   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1551   */\n      tag_111\n        /* \"#utility.yul\":1545:1550   */\n      dup2\n        /* \"#utility.yul\":1519:1551   */\n      tag_64\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1420:1557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:2472   */\n    tag_6:\n        /* \"#utility.yul\":1657:1663   */\n      0x00\n        /* \"#utility.yul\":1665:1671   */\n      dup1\n        /* \"#utility.yul\":1673:1679   */\n      0x00\n        /* \"#utility.yul\":1681:1687   */\n      dup1\n        /* \"#utility.yul\":1689:1695   */\n      0x00\n        /* \"#utility.yul\":1738:1741   */\n      0xa0\n        /* \"#utility.yul\":1726:1735   */\n      dup7\n        /* \"#utility.yul\":1717:1724   */\n      dup9\n        /* \"#utility.yul\":1713:1736   */\n      sub\n        /* \"#utility.yul\":1709:1742   */\n      slt\n        /* \"#utility.yul\":1706:1826   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1745:1824   */\n      tag_114\n      tag_54\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1706:1826   */\n    tag_113:\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1890:1943   */\n      tag_115\n        /* \"#utility.yul\":1935:1942   */\n      dup9\n        /* \"#utility.yul\":1926:1932   */\n      dup3\n        /* \"#utility.yul\":1915:1924   */\n      dup10\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1890:1943   */\n      tag_59\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1880:1943   */\n      swap6\n      pop\n        /* \"#utility.yul\":1836:1953   */\n      pop\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":2018:2071   */\n      tag_116\n        /* \"#utility.yul\":2063:2070   */\n      dup9\n        /* \"#utility.yul\":2054:2060   */\n      dup3\n        /* \"#utility.yul\":2043:2052   */\n      dup10\n        /* \"#utility.yul\":2039:2061   */\n      add\n        /* \"#utility.yul\":2018:2071   */\n      tag_59\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2008:2071   */\n      swap5\n      pop\n        /* \"#utility.yul\":1963:2081   */\n      pop\n        /* \"#utility.yul\":2120:2122   */\n      0x40\n        /* \"#utility.yul\":2146:2199   */\n      tag_117\n        /* \"#utility.yul\":2191:2198   */\n      dup9\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2171:2180   */\n      dup10\n        /* \"#utility.yul\":2167:2189   */\n      add\n        /* \"#utility.yul\":2146:2199   */\n      tag_59\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2136:2199   */\n      swap4\n      pop\n        /* \"#utility.yul\":2091:2209   */\n      pop\n        /* \"#utility.yul\":2248:2250   */\n      0x60\n        /* \"#utility.yul\":2274:2327   */\n      tag_118\n        /* \"#utility.yul\":2319:2326   */\n      dup9\n        /* \"#utility.yul\":2310:2316   */\n      dup3\n        /* \"#utility.yul\":2299:2308   */\n      dup10\n        /* \"#utility.yul\":2295:2317   */\n      add\n        /* \"#utility.yul\":2274:2327   */\n      tag_62\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2264:2327   */\n      swap3\n      pop\n        /* \"#utility.yul\":2219:2337   */\n      pop\n        /* \"#utility.yul\":2376:2379   */\n      0x80\n        /* \"#utility.yul\":2403:2455   */\n      tag_119\n        /* \"#utility.yul\":2447:2454   */\n      dup9\n        /* \"#utility.yul\":2438:2444   */\n      dup3\n        /* \"#utility.yul\":2427:2436   */\n      dup10\n        /* \"#utility.yul\":2423:2445   */\n      add\n        /* \"#utility.yul\":2403:2455   */\n      tag_65\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2393:2455   */\n      swap2\n      pop\n        /* \"#utility.yul\":2347:2465   */\n      pop\n        /* \"#utility.yul\":1563:2472   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2478:2596   */\n    tag_66:\n        /* \"#utility.yul\":2565:2589   */\n      tag_121\n        /* \"#utility.yul\":2583:2588   */\n      dup2\n        /* \"#utility.yul\":2565:2589   */\n      tag_60\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2560:2563   */\n      dup3\n        /* \"#utility.yul\":2553:2590   */\n      mstore\n        /* \"#utility.yul\":2478:2596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2824   */\n    tag_9:\n        /* \"#utility.yul\":2695:2699   */\n      0x00\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2722:2731   */\n      dup3\n        /* \"#utility.yul\":2718:2736   */\n      add\n        /* \"#utility.yul\":2710:2736   */\n      swap1\n      pop\n        /* \"#utility.yul\":2746:2817   */\n      tag_123\n        /* \"#utility.yul\":2814:2815   */\n      0x00\n        /* \"#utility.yul\":2803:2812   */\n      dup4\n        /* \"#utility.yul\":2799:2816   */\n      add\n        /* \"#utility.yul\":2790:2796   */\n      dup5\n        /* \"#utility.yul\":2746:2817   */\n      tag_66\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2602:2824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2830:2999   */\n    tag_67:\n        /* \"#utility.yul\":2914:2925   */\n      0x00\n        /* \"#utility.yul\":2948:2954   */\n      dup3\n        /* \"#utility.yul\":2943:2946   */\n      dup3\n        /* \"#utility.yul\":2936:2955   */\n      mstore\n        /* \"#utility.yul\":2988:2992   */\n      0x20\n        /* \"#utility.yul\":2983:2986   */\n      dup3\n        /* \"#utility.yul\":2979:2993   */\n      add\n        /* \"#utility.yul\":2964:2993   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3005:3225   */\n    tag_68:\n        /* \"#utility.yul\":3145:3179   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":3141:3142   */\n      0x00\n        /* \"#utility.yul\":3133:3139   */\n      dup3\n        /* \"#utility.yul\":3129:3143   */\n      add\n        /* \"#utility.yul\":3122:3180   */\n      mstore\n        /* \"#utility.yul\":3214:3217   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3209:3211   */\n      0x20\n        /* \"#utility.yul\":3201:3207   */\n      dup3\n        /* \"#utility.yul\":3197:3212   */\n      add\n        /* \"#utility.yul\":3190:3218   */\n      mstore\n        /* \"#utility.yul\":3005:3225   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3597   */\n    tag_69:\n        /* \"#utility.yul\":3373:3376   */\n      0x00\n        /* \"#utility.yul\":3394:3461   */\n      tag_127\n        /* \"#utility.yul\":3458:3460   */\n      0x21\n        /* \"#utility.yul\":3453:3456   */\n      dup4\n        /* \"#utility.yul\":3394:3461   */\n      tag_67\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3387:3461   */\n      swap2\n      pop\n        /* \"#utility.yul\":3470:3563   */\n      tag_128\n        /* \"#utility.yul\":3559:3562   */\n      dup3\n        /* \"#utility.yul\":3470:3563   */\n      tag_68\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3588:3590   */\n      0x40\n        /* \"#utility.yul\":3583:3586   */\n      dup3\n        /* \"#utility.yul\":3579:3591   */\n      add\n        /* \"#utility.yul\":3572:3591   */\n      swap1\n      pop\n        /* \"#utility.yul\":3231:3597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:4022   */\n    tag_13:\n        /* \"#utility.yul\":3769:3773   */\n      0x00\n        /* \"#utility.yul\":3807:3809   */\n      0x20\n        /* \"#utility.yul\":3796:3805   */\n      dup3\n        /* \"#utility.yul\":3792:3810   */\n      add\n        /* \"#utility.yul\":3784:3810   */\n      swap1\n      pop\n        /* \"#utility.yul\":3856:3865   */\n      dup2\n        /* \"#utility.yul\":3850:3854   */\n      dup2\n        /* \"#utility.yul\":3846:3866   */\n      sub\n        /* \"#utility.yul\":3842:3843   */\n      0x00\n        /* \"#utility.yul\":3831:3840   */\n      dup4\n        /* \"#utility.yul\":3827:3844   */\n      add\n        /* \"#utility.yul\":3820:3867   */\n      mstore\n        /* \"#utility.yul\":3884:4015   */\n      tag_130\n        /* \"#utility.yul\":4010:4014   */\n      dup2\n        /* \"#utility.yul\":3884:4015   */\n      tag_69\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3876:4015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3603:4022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4028:4136   */\n    tag_70:\n        /* \"#utility.yul\":4105:4129   */\n      tag_132\n        /* \"#utility.yul\":4123:4128   */\n      dup2\n        /* \"#utility.yul\":4105:4129   */\n      tag_57\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4100:4103   */\n      dup3\n        /* \"#utility.yul\":4093:4130   */\n      mstore\n        /* \"#utility.yul\":4028:4136   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4142:4247   */\n    tag_71:\n        /* \"#utility.yul\":4217:4240   */\n      tag_134\n        /* \"#utility.yul\":4234:4239   */\n      dup2\n        /* \"#utility.yul\":4217:4240   */\n      tag_63\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4212:4215   */\n      dup3\n        /* \"#utility.yul\":4205:4241   */\n      mstore\n        /* \"#utility.yul\":4142:4247   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4253:4361   */\n    tag_72:\n        /* \"#utility.yul\":4330:4354   */\n      tag_136\n        /* \"#utility.yul\":4348:4353   */\n      dup2\n        /* \"#utility.yul\":4330:4354   */\n      tag_60\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4325:4328   */\n      dup3\n        /* \"#utility.yul\":4318:4355   */\n      mstore\n        /* \"#utility.yul\":4253:4361   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4367:4475   */\n    tag_73:\n        /* \"#utility.yul\":4444:4468   */\n      tag_138\n        /* \"#utility.yul\":4462:4467   */\n      dup2\n        /* \"#utility.yul\":4444:4468   */\n      tag_56\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4439:4442   */\n      dup3\n        /* \"#utility.yul\":4432:4469   */\n      mstore\n        /* \"#utility.yul\":4367:4475   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4575:6198   */\n    tag_74:\n        /* \"#utility.yul\":4750:4756   */\n      0x0100\n        /* \"#utility.yul\":4745:4748   */\n      dup3\n        /* \"#utility.yul\":4741:4757   */\n      add\n        /* \"#utility.yul\":4842:4846   */\n      0x00\n        /* \"#utility.yul\":4835:4840   */\n      dup3\n        /* \"#utility.yul\":4831:4847   */\n      add\n        /* \"#utility.yul\":4825:4848   */\n      mload\n        /* \"#utility.yul\":4861:4924   */\n      tag_140\n        /* \"#utility.yul\":4918:4922   */\n      0x00\n        /* \"#utility.yul\":4913:4916   */\n      dup6\n        /* \"#utility.yul\":4909:4923   */\n      add\n        /* \"#utility.yul\":4895:4907   */\n      dup3\n        /* \"#utility.yul\":4861:4924   */\n      tag_70\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4767:4934   */\n      pop\n        /* \"#utility.yul\":5020:5024   */\n      0x20\n        /* \"#utility.yul\":5013:5018   */\n      dup3\n        /* \"#utility.yul\":5009:5025   */\n      add\n        /* \"#utility.yul\":5003:5026   */\n      mload\n        /* \"#utility.yul\":5039:5102   */\n      tag_141\n        /* \"#utility.yul\":5096:5100   */\n      0x20\n        /* \"#utility.yul\":5091:5094   */\n      dup6\n        /* \"#utility.yul\":5087:5101   */\n      add\n        /* \"#utility.yul\":5073:5085   */\n      dup3\n        /* \"#utility.yul\":5039:5102   */\n      tag_70\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4944:5112   */\n      pop\n        /* \"#utility.yul\":5193:5197   */\n      0x40\n        /* \"#utility.yul\":5186:5191   */\n      dup3\n        /* \"#utility.yul\":5182:5198   */\n      add\n        /* \"#utility.yul\":5176:5199   */\n      mload\n        /* \"#utility.yul\":5212:5273   */\n      tag_142\n        /* \"#utility.yul\":5267:5271   */\n      0x40\n        /* \"#utility.yul\":5262:5265   */\n      dup6\n        /* \"#utility.yul\":5258:5272   */\n      add\n        /* \"#utility.yul\":5244:5256   */\n      dup3\n        /* \"#utility.yul\":5212:5273   */\n      tag_71\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5122:5283   */\n      pop\n        /* \"#utility.yul\":5370:5374   */\n      0x60\n        /* \"#utility.yul\":5363:5368   */\n      dup3\n        /* \"#utility.yul\":5359:5375   */\n      add\n        /* \"#utility.yul\":5353:5376   */\n      mload\n        /* \"#utility.yul\":5389:5452   */\n      tag_143\n        /* \"#utility.yul\":5446:5450   */\n      0x60\n        /* \"#utility.yul\":5441:5444   */\n      dup6\n        /* \"#utility.yul\":5437:5451   */\n      add\n        /* \"#utility.yul\":5423:5435   */\n      dup3\n        /* \"#utility.yul\":5389:5452   */\n      tag_70\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5293:5462   */\n      pop\n        /* \"#utility.yul\":5548:5552   */\n      0x80\n        /* \"#utility.yul\":5541:5546   */\n      dup3\n        /* \"#utility.yul\":5537:5553   */\n      add\n        /* \"#utility.yul\":5531:5554   */\n      mload\n        /* \"#utility.yul\":5567:5630   */\n      tag_144\n        /* \"#utility.yul\":5624:5628   */\n      0x80\n        /* \"#utility.yul\":5619:5622   */\n      dup6\n        /* \"#utility.yul\":5615:5629   */\n      add\n        /* \"#utility.yul\":5601:5613   */\n      dup3\n        /* \"#utility.yul\":5567:5630   */\n      tag_72\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5472:5640   */\n      pop\n        /* \"#utility.yul\":5726:5730   */\n      0xa0\n        /* \"#utility.yul\":5719:5724   */\n      dup3\n        /* \"#utility.yul\":5715:5731   */\n      add\n        /* \"#utility.yul\":5709:5732   */\n      mload\n        /* \"#utility.yul\":5745:5808   */\n      tag_145\n        /* \"#utility.yul\":5802:5806   */\n      0xa0\n        /* \"#utility.yul\":5797:5800   */\n      dup6\n        /* \"#utility.yul\":5793:5807   */\n      add\n        /* \"#utility.yul\":5779:5791   */\n      dup3\n        /* \"#utility.yul\":5745:5808   */\n      tag_72\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5650:5818   */\n      pop\n        /* \"#utility.yul\":5912:5916   */\n      0xc0\n        /* \"#utility.yul\":5905:5910   */\n      dup3\n        /* \"#utility.yul\":5901:5917   */\n      add\n        /* \"#utility.yul\":5895:5918   */\n      mload\n        /* \"#utility.yul\":5931:5994   */\n      tag_146\n        /* \"#utility.yul\":5988:5992   */\n      0xc0\n        /* \"#utility.yul\":5983:5986   */\n      dup6\n        /* \"#utility.yul\":5979:5993   */\n      add\n        /* \"#utility.yul\":5965:5977   */\n      dup3\n        /* \"#utility.yul\":5931:5994   */\n      tag_72\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5828:6004   */\n      pop\n        /* \"#utility.yul\":6099:6103   */\n      0xe0\n        /* \"#utility.yul\":6092:6097   */\n      dup3\n        /* \"#utility.yul\":6088:6104   */\n      add\n        /* \"#utility.yul\":6082:6105   */\n      mload\n        /* \"#utility.yul\":6118:6181   */\n      tag_147\n        /* \"#utility.yul\":6175:6179   */\n      0xe0\n        /* \"#utility.yul\":6170:6173   */\n      dup6\n        /* \"#utility.yul\":6166:6180   */\n      add\n        /* \"#utility.yul\":6152:6164   */\n      dup3\n        /* \"#utility.yul\":6118:6181   */\n      tag_73\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6014:6191   */\n      pop\n        /* \"#utility.yul\":4719:6198   */\n      pop\n        /* \"#utility.yul\":4575:6198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6583   */\n    tag_20:\n        /* \"#utility.yul\":6375:6379   */\n      0x00\n        /* \"#utility.yul\":6413:6416   */\n      0x0100\n        /* \"#utility.yul\":6402:6411   */\n      dup3\n        /* \"#utility.yul\":6398:6417   */\n      add\n        /* \"#utility.yul\":6390:6417   */\n      swap1\n      pop\n        /* \"#utility.yul\":6427:6576   */\n      tag_149\n        /* \"#utility.yul\":6573:6574   */\n      0x00\n        /* \"#utility.yul\":6562:6571   */\n      dup4\n        /* \"#utility.yul\":6558:6575   */\n      add\n        /* \"#utility.yul\":6549:6555   */\n      dup5\n        /* \"#utility.yul\":6427:6576   */\n      tag_74\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6204:6583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6589:6732   */\n    tag_75:\n        /* \"#utility.yul\":6646:6651   */\n      0x00\n        /* \"#utility.yul\":6677:6683   */\n      dup2\n        /* \"#utility.yul\":6671:6684   */\n      mload\n        /* \"#utility.yul\":6662:6684   */\n      swap1\n      pop\n        /* \"#utility.yul\":6693:6726   */\n      tag_151\n        /* \"#utility.yul\":6720:6725   */\n      dup2\n        /* \"#utility.yul\":6693:6726   */\n      tag_61\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6589:6732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6738:7089   */\n    tag_24:\n        /* \"#utility.yul\":6808:6814   */\n      0x00\n        /* \"#utility.yul\":6857:6859   */\n      0x20\n        /* \"#utility.yul\":6845:6854   */\n      dup3\n        /* \"#utility.yul\":6836:6843   */\n      dup5\n        /* \"#utility.yul\":6832:6855   */\n      sub\n        /* \"#utility.yul\":6828:6860   */\n      slt\n        /* \"#utility.yul\":6825:6944   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":6863:6942   */\n      tag_154\n      tag_54\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6825:6944   */\n    tag_153:\n        /* \"#utility.yul\":6983:6984   */\n      0x00\n        /* \"#utility.yul\":7008:7072   */\n      tag_155\n        /* \"#utility.yul\":7064:7071   */\n      dup5\n        /* \"#utility.yul\":7055:7061   */\n      dup3\n        /* \"#utility.yul\":7044:7053   */\n      dup6\n        /* \"#utility.yul\":7040:7062   */\n      add\n        /* \"#utility.yul\":7008:7072   */\n      tag_75\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6998:7072   */\n      swap2\n      pop\n        /* \"#utility.yul\":6954:7082   */\n      pop\n        /* \"#utility.yul\":6738:7089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7095:7213   */\n    tag_76:\n        /* \"#utility.yul\":7182:7206   */\n      tag_157\n        /* \"#utility.yul\":7200:7205   */\n      dup2\n        /* \"#utility.yul\":7182:7206   */\n      tag_57\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7177:7180   */\n      dup3\n        /* \"#utility.yul\":7170:7207   */\n      mstore\n        /* \"#utility.yul\":7095:7213   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7219:7661   */\n    tag_27:\n        /* \"#utility.yul\":7368:7372   */\n      0x00\n        /* \"#utility.yul\":7406:7408   */\n      0x60\n        /* \"#utility.yul\":7395:7404   */\n      dup3\n        /* \"#utility.yul\":7391:7409   */\n      add\n        /* \"#utility.yul\":7383:7409   */\n      swap1\n      pop\n        /* \"#utility.yul\":7419:7490   */\n      tag_159\n        /* \"#utility.yul\":7487:7488   */\n      0x00\n        /* \"#utility.yul\":7476:7485   */\n      dup4\n        /* \"#utility.yul\":7472:7489   */\n      add\n        /* \"#utility.yul\":7463:7469   */\n      dup7\n        /* \"#utility.yul\":7419:7490   */\n      tag_76\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7500:7572   */\n      tag_160\n        /* \"#utility.yul\":7568:7570   */\n      0x20\n        /* \"#utility.yul\":7557:7566   */\n      dup4\n        /* \"#utility.yul\":7553:7571   */\n      add\n        /* \"#utility.yul\":7544:7550   */\n      dup6\n        /* \"#utility.yul\":7500:7572   */\n      tag_76\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7582:7654   */\n      tag_161\n        /* \"#utility.yul\":7650:7652   */\n      0x40\n        /* \"#utility.yul\":7639:7648   */\n      dup4\n        /* \"#utility.yul\":7635:7653   */\n      add\n        /* \"#utility.yul\":7626:7632   */\n      dup5\n        /* \"#utility.yul\":7582:7654   */\n      tag_66\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7219:7661   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7667:7765   */\n    tag_77:\n        /* \"#utility.yul\":7718:7724   */\n      0x00\n        /* \"#utility.yul\":7752:7757   */\n      dup2\n        /* \"#utility.yul\":7746:7758   */\n      mload\n        /* \"#utility.yul\":7736:7758   */\n      swap1\n      pop\n        /* \"#utility.yul\":7667:7765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7771:7918   */\n    tag_78:\n        /* \"#utility.yul\":7872:7883   */\n      0x00\n        /* \"#utility.yul\":7909:7912   */\n      dup2\n        /* \"#utility.yul\":7894:7912   */\n      swap1\n      pop\n        /* \"#utility.yul\":7771:7918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7924:8063   */\n    tag_79:\n        /* \"#utility.yul\":8013:8019   */\n      dup3\n        /* \"#utility.yul\":8008:8011   */\n      dup2\n        /* \"#utility.yul\":8003:8006   */\n      dup4\n        /* \"#utility.yul\":7997:8020   */\n      mcopy\n        /* \"#utility.yul\":8054:8055   */\n      0x00\n        /* \"#utility.yul\":8045:8051   */\n      dup4\n        /* \"#utility.yul\":8040:8043   */\n      dup4\n        /* \"#utility.yul\":8036:8052   */\n      add\n        /* \"#utility.yul\":8029:8056   */\n      mstore\n        /* \"#utility.yul\":7924:8063   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8069:8455   */\n    tag_80:\n        /* \"#utility.yul\":8173:8176   */\n      0x00\n        /* \"#utility.yul\":8201:8239   */\n      tag_166\n        /* \"#utility.yul\":8233:8238   */\n      dup3\n        /* \"#utility.yul\":8201:8239   */\n      tag_77\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":8255:8343   */\n      tag_167\n        /* \"#utility.yul\":8336:8342   */\n      dup2\n        /* \"#utility.yul\":8331:8334   */\n      dup6\n        /* \"#utility.yul\":8255:8343   */\n      tag_78\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":8248:8343   */\n      swap4\n      pop\n        /* \"#utility.yul\":8352:8417   */\n      tag_168\n        /* \"#utility.yul\":8410:8416   */\n      dup2\n        /* \"#utility.yul\":8405:8408   */\n      dup6\n        /* \"#utility.yul\":8398:8402   */\n      0x20\n        /* \"#utility.yul\":8391:8396   */\n      dup7\n        /* \"#utility.yul\":8387:8403   */\n      add\n        /* \"#utility.yul\":8352:8417   */\n      tag_79\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8442:8448   */\n      dup1\n        /* \"#utility.yul\":8437:8440   */\n      dup5\n        /* \"#utility.yul\":8433:8449   */\n      add\n        /* \"#utility.yul\":8426:8449   */\n      swap2\n      pop\n        /* \"#utility.yul\":8177:8455   */\n      pop\n        /* \"#utility.yul\":8069:8455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8461:8732   */\n    tag_29:\n        /* \"#utility.yul\":8591:8594   */\n      0x00\n        /* \"#utility.yul\":8613:8706   */\n      tag_170\n        /* \"#utility.yul\":8702:8705   */\n      dup3\n        /* \"#utility.yul\":8693:8699   */\n      dup5\n        /* \"#utility.yul\":8613:8706   */\n      tag_80\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":8606:8706   */\n      swap2\n      pop\n        /* \"#utility.yul\":8723:8726   */\n      dup2\n        /* \"#utility.yul\":8716:8726   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8738:8828   */\n    tag_81:\n        /* \"#utility.yul\":8772:8779   */\n      0x00\n        /* \"#utility.yul\":8815:8820   */\n      dup2\n        /* \"#utility.yul\":8808:8821   */\n      iszero\n        /* \"#utility.yul\":8801:8822   */\n      iszero\n        /* \"#utility.yul\":8790:8822   */\n      swap1\n      pop\n        /* \"#utility.yul\":8738:8828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8834:8950   */\n    tag_82:\n        /* \"#utility.yul\":8904:8925   */\n      tag_173\n        /* \"#utility.yul\":8919:8924   */\n      dup2\n        /* \"#utility.yul\":8904:8925   */\n      tag_81\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":8897:8902   */\n      dup2\n        /* \"#utility.yul\":8894:8926   */\n      eq\n        /* \"#utility.yul\":8884:8944   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":8940:8941   */\n      0x00\n        /* \"#utility.yul\":8937:8938   */\n      dup1\n        /* \"#utility.yul\":8930:8942   */\n      revert\n        /* \"#utility.yul\":8884:8944   */\n    tag_174:\n        /* \"#utility.yul\":8834:8950   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8956:9093   */\n    tag_83:\n        /* \"#utility.yul\":9010:9015   */\n      0x00\n        /* \"#utility.yul\":9041:9047   */\n      dup2\n        /* \"#utility.yul\":9035:9048   */\n      mload\n        /* \"#utility.yul\":9026:9048   */\n      swap1\n      pop\n        /* \"#utility.yul\":9057:9087   */\n      tag_176\n        /* \"#utility.yul\":9081:9086   */\n      dup2\n        /* \"#utility.yul\":9057:9087   */\n      tag_82\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8956:9093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9099:9444   */\n    tag_36:\n        /* \"#utility.yul\":9166:9172   */\n      0x00\n        /* \"#utility.yul\":9215:9217   */\n      0x20\n        /* \"#utility.yul\":9203:9212   */\n      dup3\n        /* \"#utility.yul\":9194:9201   */\n      dup5\n        /* \"#utility.yul\":9190:9213   */\n      sub\n        /* \"#utility.yul\":9186:9218   */\n      slt\n        /* \"#utility.yul\":9183:9302   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":9221:9300   */\n      tag_179\n      tag_54\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":9183:9302   */\n    tag_178:\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9366:9427   */\n      tag_180\n        /* \"#utility.yul\":9419:9426   */\n      dup5\n        /* \"#utility.yul\":9410:9416   */\n      dup3\n        /* \"#utility.yul\":9399:9408   */\n      dup6\n        /* \"#utility.yul\":9395:9417   */\n      add\n        /* \"#utility.yul\":9366:9427   */\n      tag_83\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":9356:9427   */\n      swap2\n      pop\n        /* \"#utility.yul\":9312:9437   */\n      pop\n        /* \"#utility.yul\":9099:9444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9450:9603   */\n    tag_84:\n        /* \"#utility.yul\":9590:9595   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9586:9587   */\n      0x00\n        /* \"#utility.yul\":9578:9584   */\n      dup3\n        /* \"#utility.yul\":9574:9588   */\n      add\n        /* \"#utility.yul\":9567:9596   */\n      mstore\n        /* \"#utility.yul\":9450:9603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9609:9974   */\n    tag_85:\n        /* \"#utility.yul\":9751:9754   */\n      0x00\n        /* \"#utility.yul\":9772:9838   */\n      tag_183\n        /* \"#utility.yul\":9836:9837   */\n      0x03\n        /* \"#utility.yul\":9831:9834   */\n      dup4\n        /* \"#utility.yul\":9772:9838   */\n      tag_67\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":9765:9838   */\n      swap2\n      pop\n        /* \"#utility.yul\":9847:9940   */\n      tag_184\n        /* \"#utility.yul\":9936:9939   */\n      dup3\n        /* \"#utility.yul\":9847:9940   */\n      tag_84\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":9965:9967   */\n      0x20\n        /* \"#utility.yul\":9960:9963   */\n      dup3\n        /* \"#utility.yul\":9956:9968   */\n      add\n        /* \"#utility.yul\":9949:9968   */\n      swap1\n      pop\n        /* \"#utility.yul\":9609:9974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9980:10399   */\n    tag_39:\n        /* \"#utility.yul\":10146:10150   */\n      0x00\n        /* \"#utility.yul\":10184:10186   */\n      0x20\n        /* \"#utility.yul\":10173:10182   */\n      dup3\n        /* \"#utility.yul\":10169:10187   */\n      add\n        /* \"#utility.yul\":10161:10187   */\n      swap1\n      pop\n        /* \"#utility.yul\":10233:10242   */\n      dup2\n        /* \"#utility.yul\":10227:10231   */\n      dup2\n        /* \"#utility.yul\":10223:10243   */\n      sub\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10208:10217   */\n      dup4\n        /* \"#utility.yul\":10204:10221   */\n      add\n        /* \"#utility.yul\":10197:10244   */\n      mstore\n        /* \"#utility.yul\":10261:10392   */\n      tag_186\n        /* \"#utility.yul\":10387:10391   */\n      dup2\n        /* \"#utility.yul\":10261:10392   */\n      tag_85\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":10253:10392   */\n      swap1\n      pop\n        /* \"#utility.yul\":9980:10399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10405:10737   */\n    tag_42:\n        /* \"#utility.yul\":10526:10530   */\n      0x00\n        /* \"#utility.yul\":10564:10566   */\n      0x40\n        /* \"#utility.yul\":10553:10562   */\n      dup3\n        /* \"#utility.yul\":10549:10567   */\n      add\n        /* \"#utility.yul\":10541:10567   */\n      swap1\n      pop\n        /* \"#utility.yul\":10577:10648   */\n      tag_188\n        /* \"#utility.yul\":10645:10646   */\n      0x00\n        /* \"#utility.yul\":10634:10643   */\n      dup4\n        /* \"#utility.yul\":10630:10647   */\n      add\n        /* \"#utility.yul\":10621:10627   */\n      dup6\n        /* \"#utility.yul\":10577:10648   */\n      tag_76\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":10658:10730   */\n      tag_189\n        /* \"#utility.yul\":10726:10728   */\n      0x20\n        /* \"#utility.yul\":10715:10724   */\n      dup4\n        /* \"#utility.yul\":10711:10729   */\n      add\n        /* \"#utility.yul\":10702:10708   */\n      dup5\n        /* \"#utility.yul\":10658:10730   */\n      tag_66\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":10405:10737   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10743:10895   */\n    tag_86:\n        /* \"#utility.yul\":10883:10887   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10879:10880   */\n      0x00\n        /* \"#utility.yul\":10871:10877   */\n      dup3\n        /* \"#utility.yul\":10867:10881   */\n      add\n        /* \"#utility.yul\":10860:10888   */\n      mstore\n        /* \"#utility.yul\":10743:10895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10901:11266   */\n    tag_87:\n        /* \"#utility.yul\":11043:11046   */\n      0x00\n        /* \"#utility.yul\":11064:11130   */\n      tag_192\n        /* \"#utility.yul\":11128:11129   */\n      0x02\n        /* \"#utility.yul\":11123:11126   */\n      dup4\n        /* \"#utility.yul\":11064:11130   */\n      tag_67\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":11057:11130   */\n      swap2\n      pop\n        /* \"#utility.yul\":11139:11232   */\n      tag_193\n        /* \"#utility.yul\":11228:11231   */\n      dup3\n        /* \"#utility.yul\":11139:11232   */\n      tag_86\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":11257:11259   */\n      0x20\n        /* \"#utility.yul\":11252:11255   */\n      dup3\n        /* \"#utility.yul\":11248:11260   */\n      add\n        /* \"#utility.yul\":11241:11260   */\n      swap1\n      pop\n        /* \"#utility.yul\":10901:11266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11272:11691   */\n    tag_52:\n        /* \"#utility.yul\":11438:11442   */\n      0x00\n        /* \"#utility.yul\":11476:11478   */\n      0x20\n        /* \"#utility.yul\":11465:11474   */\n      dup3\n        /* \"#utility.yul\":11461:11479   */\n      add\n        /* \"#utility.yul\":11453:11479   */\n      swap1\n      pop\n        /* \"#utility.yul\":11525:11534   */\n      dup2\n        /* \"#utility.yul\":11519:11523   */\n      dup2\n        /* \"#utility.yul\":11515:11535   */\n      sub\n        /* \"#utility.yul\":11511:11512   */\n      0x00\n        /* \"#utility.yul\":11500:11509   */\n      dup4\n        /* \"#utility.yul\":11496:11513   */\n      add\n        /* \"#utility.yul\":11489:11536   */\n      mstore\n        /* \"#utility.yul\":11553:11684   */\n      tag_195\n        /* \"#utility.yul\":11679:11683   */\n      dup2\n        /* \"#utility.yul\":11553:11684   */\n      tag_87\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":11545:11684   */\n      swap1\n      pop\n        /* \"#utility.yul\":11272:11691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ae42048f3a949b6fb2a00d7a4adda874501a1c2cdf7b65a7e87b81eeced0648064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_382": {
									"entryPoint": null,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a3c8061005b5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f6e8f4ff1461002d575b5f80fd5b61004760048036038101906100429190610591565b61005d565b6040516100549190610617565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e3906106b0565b60405180910390fd5b5f8490506100fc87333087610227565b610107878286610379565b5f6040518061010001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018562ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014381526020018681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090508173ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101da91906107aa565b6020604051808303815f875af11580156101f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061021a91906107d8565b9250505095945050505050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161025d93929190610812565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c79190610899565b5f604051808303815f865af19150503d805f8114610300576040519150601f19603f3d011682016040523d82523d5f602084013e610305565b606091505b509150915081801561033257505f8151148061033157508080602001905181019061033091906108e4565b5b5b610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036890610959565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016103ad929190610977565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104179190610899565b5f604051808303815f865af19150503d805f8114610450576040519150601f19603f3d011682016040523d82523d5f602084013e610455565b606091505b509150915081801561048257505f8151148061048157508080602001905181019061048091906108e4565b5b5b6104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b8906109e8565b60405180910390fd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104f5826104cc565b9050919050565b610505816104eb565b811461050f575f80fd5b50565b5f81359050610520816104fc565b92915050565b5f819050919050565b61053881610526565b8114610542575f80fd5b50565b5f813590506105538161052f565b92915050565b5f62ffffff82169050919050565b61057081610559565b811461057a575f80fd5b50565b5f8135905061058b81610567565b92915050565b5f805f805f60a086880312156105aa576105a96104c8565b5b5f6105b788828901610512565b95505060206105c888828901610512565b94505060406105d988828901610512565b93505060606105ea88828901610545565b92505060806105fb8882890161057d565b9150509295509295909350565b61061181610526565b82525050565b5f60208201905061062a5f830184610608565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61069a602183610630565b91506106a582610640565b604082019050919050565b5f6020820190508181035f8301526106c78161068e565b9050919050565b6106d7816104eb565b82525050565b6106e681610559565b82525050565b6106f581610526565b82525050565b610704816104cc565b82525050565b61010082015f82015161071f5f8501826106ce565b50602082015161073260208501826106ce565b50604082015161074560408501826106dd565b50606082015161075860608501826106ce565b50608082015161076b60808501826106ec565b5060a082015161077e60a08501826106ec565b5060c082015161079160c08501826106ec565b5060e08201516107a460e08501826106fb565b50505050565b5f610100820190506107be5f83018461070a565b92915050565b5f815190506107d28161052f565b92915050565b5f602082840312156107ed576107ec6104c8565b5b5f6107fa848285016107c4565b91505092915050565b61080c816104eb565b82525050565b5f6060820190506108255f830186610803565b6108326020830185610803565b61083f6040830184610608565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61087382610847565b61087d8185610851565b935061088d81856020860161085b565b80840191505092915050565b5f6108a48284610869565b915081905092915050565b5f8115159050919050565b6108c3816108af565b81146108cd575f80fd5b50565b5f815190506108de816108ba565b92915050565b5f602082840312156108f9576108f86104c8565b5b5f610906848285016108d0565b91505092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610943600383610630565b915061094e8261090f565b602082019050919050565b5f6020820190508181035f83015261097081610937565b9050919050565b5f60408201905061098a5f830185610803565b6109976020830184610608565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6109d2600283610630565b91506109dd8261099e565b602082019050919050565b5f6020820190508181035f8301526109ff816109c6565b905091905056fea2646970667358221220ae42048f3a949b6fb2a00d7a4adda874501a1c2cdf7b65a7e87b81eeced0648064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xA3C DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF6E8F4FF EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 SWAP1 POP PUSH2 0xFC DUP8 CALLER ADDRESS DUP8 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x107 DUP8 DUP3 DUP7 PUSH2 0x379 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x332 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x331 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3AD SWAP3 SWAP2 SWAP1 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x455 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x482 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x481 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F5 DUP3 PUSH2 0x4CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x505 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP2 EQ PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x520 DUP2 PUSH2 0x4FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x538 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP2 EQ PUSH2 0x542 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x553 DUP2 PUSH2 0x52F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 DUP2 PUSH2 0x559 JUMP JUMPDEST DUP2 EQ PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B7 DUP9 DUP3 DUP10 ADD PUSH2 0x512 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x5C8 DUP9 DUP3 DUP10 ADD PUSH2 0x512 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5D9 DUP9 DUP3 DUP10 ADD PUSH2 0x512 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x5FB DUP9 DUP3 DUP10 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62A PUSH0 DUP4 ADD DUP5 PUSH2 0x608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x69A PUSH1 0x21 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x6A5 DUP3 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6C7 DUP2 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D7 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F5 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x704 DUP2 PUSH2 0x4CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x71F PUSH0 DUP6 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x732 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x745 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6DD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x758 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x76B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6EC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x77E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6EC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x791 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6EC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7A4 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x6FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x7BE PUSH0 DUP4 ADD DUP5 PUSH2 0x70A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7D2 DUP2 PUSH2 0x52F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7FA DUP5 DUP3 DUP6 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80C DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x825 PUSH0 DUP4 ADD DUP7 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x832 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x83F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x608 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x873 DUP3 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x87D DUP2 DUP6 PUSH2 0x851 JUMP JUMPDEST SWAP4 POP PUSH2 0x88D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x85B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A4 DUP3 DUP5 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C3 DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP2 EQ PUSH2 0x8CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8DE DUP2 PUSH2 0x8BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x943 PUSH1 0x3 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x94E DUP3 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x970 DUP2 PUSH2 0x937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x98A PUSH0 DUP4 ADD DUP6 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x997 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x608 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9D2 PUSH1 0x2 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x9DD DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9FF DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE TIMESTAMP DIV DUP16 GASPRICE SWAP5 SWAP12 PUSH16 0xB2A00D7A4ADDA874501A1C2CDF7B65A7 0xE8 PUSH28 0x81EECED0648064736F6C634300081900330000000000000000000000 ",
							"sourceMap": "267:1539:4:-:0;;;323:105;;;;;;;;;;363:10;347:5;;:27;;;;;;;;;;;;;;;;;;267:1539;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@safeApprove_335": {
									"entryPoint": 889,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 551,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapSingle_471": {
									"entryPoint": 93,
									"id": 471,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint24": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 1600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11694:5",
										"nodeType": "YulBlock",
										"src": "0:11694:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1241:47:5",
													"nodeType": "YulBlock",
													"src": "1241:47:5",
													"statements": [
														{
															"nativeSrc": "1251:31:5",
															"nodeType": "YulAssignment",
															"src": "1251:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1266:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1266:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1273:8:5",
																		"nodeType": "YulLiteral",
																		"src": "1273:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1262:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:5"
																},
																"nativeSrc": "1262:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1262:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1251:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1251:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "1197:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1223:5:5",
														"nodeType": "YulTypedName",
														"src": "1223:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1233:7:5",
														"nodeType": "YulTypedName",
														"src": "1233:7:5",
														"type": ""
													}
												],
												"src": "1197:91:5"
											},
											{
												"body": {
													"nativeSrc": "1336:78:5",
													"nodeType": "YulBlock",
													"src": "1336:78:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1392:16:5",
																"nodeType": "YulBlock",
																"src": "1392:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1401:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1401:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1404:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1394:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1394:6:5"
																			},
																			"nativeSrc": "1394:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1394:12:5"
																		},
																		"nativeSrc": "1394:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1394:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1359:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1359:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1383:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1383:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "1366:16:5",
																					"nodeType": "YulIdentifier",
																					"src": "1366:16:5"
																				},
																				"nativeSrc": "1366:23:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1366:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1356:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1356:2:5"
																		},
																		"nativeSrc": "1356:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1349:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1349:6:5"
																},
																"nativeSrc": "1349:42:5",
																"nodeType": "YulFunctionCall",
																"src": "1349:42:5"
															},
															"nativeSrc": "1346:62:5",
															"nodeType": "YulIf",
															"src": "1346:62:5"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "1294:120:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1329:5:5",
														"nodeType": "YulTypedName",
														"src": "1329:5:5",
														"type": ""
													}
												],
												"src": "1294:120:5"
											},
											{
												"body": {
													"nativeSrc": "1471:86:5",
													"nodeType": "YulBlock",
													"src": "1471:86:5",
													"statements": [
														{
															"nativeSrc": "1481:29:5",
															"nodeType": "YulAssignment",
															"src": "1481:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1503:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1490:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1490:12:5"
																},
																"nativeSrc": "1490:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1490:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1481:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1481:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1545:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1545:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "1519:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "1519:25:5"
																},
																"nativeSrc": "1519:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1519:32:5"
															},
															"nativeSrc": "1519:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "1519:32:5"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "1420:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1449:6:5",
														"nodeType": "YulTypedName",
														"src": "1449:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1457:3:5",
														"nodeType": "YulTypedName",
														"src": "1457:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1465:5:5",
														"nodeType": "YulTypedName",
														"src": "1465:5:5",
														"type": ""
													}
												],
												"src": "1420:137:5"
											},
											{
												"body": {
													"nativeSrc": "1696:776:5",
													"nodeType": "YulBlock",
													"src": "1696:776:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1743:83:5",
																"nodeType": "YulBlock",
																"src": "1743:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1745:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1745:77:5"
																			},
																			"nativeSrc": "1745:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1745:79:5"
																		},
																		"nativeSrc": "1745:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1745:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1717:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1717:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1726:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1726:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1713:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1713:3:5"
																		},
																		"nativeSrc": "1713:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1713:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1738:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1738:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:5"
																},
																"nativeSrc": "1709:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1709:33:5"
															},
															"nativeSrc": "1706:120:5",
															"nodeType": "YulIf",
															"src": "1706:120:5"
														},
														{
															"nativeSrc": "1836:117:5",
															"nodeType": "YulBlock",
															"src": "1836:117:5",
															"statements": [
																{
																	"nativeSrc": "1851:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1851:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1865:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1855:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1855:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1880:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1880:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1915:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1915:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1926:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1926:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1911:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1911:3:5"
																				},
																				"nativeSrc": "1911:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1911:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1935:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1935:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1890:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1890:20:5"
																		},
																		"nativeSrc": "1890:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1890:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1880:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1880:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1963:118:5",
															"nodeType": "YulBlock",
															"src": "1963:118:5",
															"statements": [
																{
																	"nativeSrc": "1978:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1992:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1982:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2008:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2008:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2043:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2043:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2054:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2054:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2039:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2039:3:5"
																				},
																				"nativeSrc": "2039:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2039:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2063:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2018:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2018:20:5"
																		},
																		"nativeSrc": "2018:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2008:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2008:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2091:118:5",
															"nodeType": "YulBlock",
															"src": "2091:118:5",
															"statements": [
																{
																	"nativeSrc": "2106:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2106:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2120:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2110:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2110:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2136:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2136:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2171:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2171:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2182:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2182:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2167:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:5"
																				},
																				"nativeSrc": "2167:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2146:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2146:20:5"
																		},
																		"nativeSrc": "2146:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2136:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2136:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2219:118:5",
															"nodeType": "YulBlock",
															"src": "2219:118:5",
															"statements": [
																{
																	"nativeSrc": "2234:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2234:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2248:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2238:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2238:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2264:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2264:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2299:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2299:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:5"
																				},
																				"nativeSrc": "2295:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2319:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2319:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2274:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2274:20:5"
																		},
																		"nativeSrc": "2274:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2264:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2264:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2347:118:5",
															"nodeType": "YulBlock",
															"src": "2347:118:5",
															"statements": [
																{
																	"nativeSrc": "2362:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2362:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2376:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2376:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2366:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2366:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2393:62:5",
																	"nodeType": "YulAssignment",
																	"src": "2393:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2427:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2427:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2438:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2438:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2423:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2423:3:5"
																				},
																				"nativeSrc": "2423:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2423:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2447:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2447:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "2403:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "2403:19:5"
																		},
																		"nativeSrc": "2403:52:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2393:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2393:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint24",
												"nativeSrc": "1563:909:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1634:9:5",
														"nodeType": "YulTypedName",
														"src": "1634:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1645:7:5",
														"nodeType": "YulTypedName",
														"src": "1645:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1657:6:5",
														"nodeType": "YulTypedName",
														"src": "1657:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1665:6:5",
														"nodeType": "YulTypedName",
														"src": "1665:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1673:6:5",
														"nodeType": "YulTypedName",
														"src": "1673:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1681:6:5",
														"nodeType": "YulTypedName",
														"src": "1681:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1689:6:5",
														"nodeType": "YulTypedName",
														"src": "1689:6:5",
														"type": ""
													}
												],
												"src": "1563:909:5"
											},
											{
												"body": {
													"nativeSrc": "2543:53:5",
													"nodeType": "YulBlock",
													"src": "2543:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2560:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2560:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2583:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2565:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2565:17:5"
																		},
																		"nativeSrc": "2565:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2553:6:5"
																},
																"nativeSrc": "2553:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2553:37:5"
															},
															"nativeSrc": "2553:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2553:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2478:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2531:5:5",
														"nodeType": "YulTypedName",
														"src": "2531:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2538:3:5",
														"nodeType": "YulTypedName",
														"src": "2538:3:5",
														"type": ""
													}
												],
												"src": "2478:118:5"
											},
											{
												"body": {
													"nativeSrc": "2700:124:5",
													"nodeType": "YulBlock",
													"src": "2700:124:5",
													"statements": [
														{
															"nativeSrc": "2710:26:5",
															"nodeType": "YulAssignment",
															"src": "2710:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2722:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2722:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2733:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2718:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:5"
																},
																"nativeSrc": "2718:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2718:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2710:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2710:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2790:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2790:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2803:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2814:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2799:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:5"
																		},
																		"nativeSrc": "2799:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2746:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2746:43:5"
																},
																"nativeSrc": "2746:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2746:71:5"
															},
															"nativeSrc": "2746:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2746:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2602:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:5",
														"nodeType": "YulTypedName",
														"src": "2672:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2684:6:5",
														"nodeType": "YulTypedName",
														"src": "2684:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2695:4:5",
														"nodeType": "YulTypedName",
														"src": "2695:4:5",
														"type": ""
													}
												],
												"src": "2602:222:5"
											},
											{
												"body": {
													"nativeSrc": "2926:73:5",
													"nodeType": "YulBlock",
													"src": "2926:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2943:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2943:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2948:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2948:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2936:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2936:6:5"
																},
																"nativeSrc": "2936:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2936:19:5"
															},
															"nativeSrc": "2936:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2936:19:5"
														},
														{
															"nativeSrc": "2964:29:5",
															"nodeType": "YulAssignment",
															"src": "2964:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2988:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2979:3:5"
																},
																"nativeSrc": "2979:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2979:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2964:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "2964:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2830:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2898:3:5",
														"nodeType": "YulTypedName",
														"src": "2898:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2903:6:5",
														"nodeType": "YulTypedName",
														"src": "2903:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2914:11:5",
														"nodeType": "YulTypedName",
														"src": "2914:11:5",
														"type": ""
													}
												],
												"src": "2830:169:5"
											},
											{
												"body": {
													"nativeSrc": "3111:114:5",
													"nodeType": "YulBlock",
													"src": "3111:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3133:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3133:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3141:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3141:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3129:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:5"
																		},
																		"nativeSrc": "3129:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3129:14:5"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "3145:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3145:34:5",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3122:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:5"
																},
																"nativeSrc": "3122:58:5",
																"nodeType": "YulFunctionCall",
																"src": "3122:58:5"
															},
															"nativeSrc": "3122:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "3122:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3201:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3201:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3209:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3209:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3197:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:5"
																		},
																		"nativeSrc": "3197:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:15:5"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "3214:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3214:3:5",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3190:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:5"
																},
																"nativeSrc": "3190:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3190:28:5"
															},
															"nativeSrc": "3190:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "3190:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "3005:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3103:6:5",
														"nodeType": "YulTypedName",
														"src": "3103:6:5",
														"type": ""
													}
												],
												"src": "3005:220:5"
											},
											{
												"body": {
													"nativeSrc": "3377:220:5",
													"nodeType": "YulBlock",
													"src": "3377:220:5",
													"statements": [
														{
															"nativeSrc": "3387:74:5",
															"nodeType": "YulAssignment",
															"src": "3387:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3453:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3453:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3458:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3458:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3394:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3394:58:5"
																},
																"nativeSrc": "3394:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3394:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3387:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3559:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3559:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "3470:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3470:88:5"
																},
																"nativeSrc": "3470:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3470:93:5"
															},
															"nativeSrc": "3470:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3470:93:5"
														},
														{
															"nativeSrc": "3572:19:5",
															"nodeType": "YulAssignment",
															"src": "3572:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3583:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3583:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3588:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3588:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:5"
																},
																"nativeSrc": "3579:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3579:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3572:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3572:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3231:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3365:3:5",
														"nodeType": "YulTypedName",
														"src": "3365:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3373:3:5",
														"nodeType": "YulTypedName",
														"src": "3373:3:5",
														"type": ""
													}
												],
												"src": "3231:366:5"
											},
											{
												"body": {
													"nativeSrc": "3774:248:5",
													"nodeType": "YulBlock",
													"src": "3774:248:5",
													"statements": [
														{
															"nativeSrc": "3784:26:5",
															"nodeType": "YulAssignment",
															"src": "3784:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3796:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3796:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3792:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:5"
																},
																"nativeSrc": "3792:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3792:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3784:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3784:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3831:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3842:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3842:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:5"
																		},
																		"nativeSrc": "3827:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3827:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3850:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3850:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3856:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3856:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3846:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:5"
																		},
																		"nativeSrc": "3846:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3820:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:5"
																},
																"nativeSrc": "3820:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3820:47:5"
															},
															"nativeSrc": "3820:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3820:47:5"
														},
														{
															"nativeSrc": "3876:139:5",
															"nodeType": "YulAssignment",
															"src": "3876:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4010:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4010:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3884:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "3884:124:5"
																},
																"nativeSrc": "3884:131:5",
																"nodeType": "YulFunctionCall",
																"src": "3884:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3876:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3876:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3603:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3754:9:5",
														"nodeType": "YulTypedName",
														"src": "3754:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3769:4:5",
														"nodeType": "YulTypedName",
														"src": "3769:4:5",
														"type": ""
													}
												],
												"src": "3603:419:5"
											},
											{
												"body": {
													"nativeSrc": "4083:53:5",
													"nodeType": "YulBlock",
													"src": "4083:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4100:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4100:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4123:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4123:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4105:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4105:17:5"
																		},
																		"nativeSrc": "4105:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4105:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4093:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:5"
																},
																"nativeSrc": "4093:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4093:37:5"
															},
															"nativeSrc": "4093:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4093:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "4028:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4071:5:5",
														"nodeType": "YulTypedName",
														"src": "4071:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4078:3:5",
														"nodeType": "YulTypedName",
														"src": "4078:3:5",
														"type": ""
													}
												],
												"src": "4028:108:5"
											},
											{
												"body": {
													"nativeSrc": "4195:52:5",
													"nodeType": "YulBlock",
													"src": "4195:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4212:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4212:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4234:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4234:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "4217:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "4217:16:5"
																		},
																		"nativeSrc": "4217:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4205:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4205:6:5"
																},
																"nativeSrc": "4205:36:5",
																"nodeType": "YulFunctionCall",
																"src": "4205:36:5"
															},
															"nativeSrc": "4205:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "4205:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "4142:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4183:5:5",
														"nodeType": "YulTypedName",
														"src": "4183:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4190:3:5",
														"nodeType": "YulTypedName",
														"src": "4190:3:5",
														"type": ""
													}
												],
												"src": "4142:105:5"
											},
											{
												"body": {
													"nativeSrc": "4308:53:5",
													"nodeType": "YulBlock",
													"src": "4308:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4325:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4325:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4348:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4348:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4330:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4330:17:5"
																		},
																		"nativeSrc": "4330:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4330:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4318:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4318:6:5"
																},
																"nativeSrc": "4318:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4318:37:5"
															},
															"nativeSrc": "4318:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4318:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4253:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4296:5:5",
														"nodeType": "YulTypedName",
														"src": "4296:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4303:3:5",
														"nodeType": "YulTypedName",
														"src": "4303:3:5",
														"type": ""
													}
												],
												"src": "4253:108:5"
											},
											{
												"body": {
													"nativeSrc": "4422:53:5",
													"nodeType": "YulBlock",
													"src": "4422:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4439:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4439:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4462:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4462:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "4444:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4444:17:5"
																		},
																		"nativeSrc": "4444:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4444:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4432:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:5"
																},
																"nativeSrc": "4432:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4432:37:5"
															},
															"nativeSrc": "4432:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4432:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "4367:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4410:5:5",
														"nodeType": "YulTypedName",
														"src": "4410:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4417:3:5",
														"nodeType": "YulTypedName",
														"src": "4417:3:5",
														"type": ""
													}
												],
												"src": "4367:108:5"
											},
											{
												"body": {
													"nativeSrc": "4719:1479:5",
													"nodeType": "YulBlock",
													"src": "4719:1479:5",
													"statements": [
														{
															"nativeSrc": "4729:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4729:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4745:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4745:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4750:6:5",
																		"nodeType": "YulLiteral",
																		"src": "4750:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4741:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4741:3:5"
																},
																"nativeSrc": "4741:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4741:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4733:4:5",
																	"nodeType": "YulTypedName",
																	"src": "4733:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4767:167:5",
															"nodeType": "YulBlock",
															"src": "4767:167:5",
															"statements": [
																{
																	"nativeSrc": "4805:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4805:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4835:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4835:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4842:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4842:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4831:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:5"
																				},
																				"nativeSrc": "4831:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4825:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4825:5:5"
																		},
																		"nativeSrc": "4825:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4825:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4809:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4809:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4895:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4895:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4913:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4913:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4918:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4918:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4909:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4909:3:5"
																				},
																				"nativeSrc": "4909:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4861:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4861:33:5"
																		},
																		"nativeSrc": "4861:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4861:63:5"
																	},
																	"nativeSrc": "4861:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4861:63:5"
																}
															]
														},
														{
															"nativeSrc": "4944:168:5",
															"nodeType": "YulBlock",
															"src": "4944:168:5",
															"statements": [
																{
																	"nativeSrc": "4983:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4983:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5013:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5013:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5020:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5020:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5009:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5009:3:5"
																				},
																				"nativeSrc": "5009:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5009:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5003:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5003:5:5"
																		},
																		"nativeSrc": "5003:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5003:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4987:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4987:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5073:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5073:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5091:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5091:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5096:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5096:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5087:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5087:3:5"
																				},
																				"nativeSrc": "5087:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5087:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5039:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5039:33:5"
																		},
																		"nativeSrc": "5039:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5039:63:5"
																	},
																	"nativeSrc": "5039:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5039:63:5"
																}
															]
														},
														{
															"nativeSrc": "5122:161:5",
															"nodeType": "YulBlock",
															"src": "5122:161:5",
															"statements": [
																{
																	"nativeSrc": "5156:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5156:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5186:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5186:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5193:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5193:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5182:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5182:3:5"
																				},
																				"nativeSrc": "5182:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5182:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5176:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5176:5:5"
																		},
																		"nativeSrc": "5176:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5176:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5160:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5160:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5244:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5244:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5262:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5262:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5267:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5267:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5258:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5258:3:5"
																				},
																				"nativeSrc": "5258:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5258:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "5212:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5212:31:5"
																		},
																		"nativeSrc": "5212:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5212:61:5"
																	},
																	"nativeSrc": "5212:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5212:61:5"
																}
															]
														},
														{
															"nativeSrc": "5293:169:5",
															"nodeType": "YulBlock",
															"src": "5293:169:5",
															"statements": [
																{
																	"nativeSrc": "5333:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5333:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5363:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5363:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5370:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5370:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5359:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5359:3:5"
																				},
																				"nativeSrc": "5359:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5359:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5353:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5353:5:5"
																		},
																		"nativeSrc": "5353:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5337:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5337:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5423:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5423:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5441:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5441:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5446:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5446:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5437:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5437:3:5"
																				},
																				"nativeSrc": "5437:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5437:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5389:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5389:33:5"
																		},
																		"nativeSrc": "5389:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5389:63:5"
																	},
																	"nativeSrc": "5389:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5389:63:5"
																}
															]
														},
														{
															"nativeSrc": "5472:168:5",
															"nodeType": "YulBlock",
															"src": "5472:168:5",
															"statements": [
																{
																	"nativeSrc": "5511:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5511:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5541:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5541:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5548:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5548:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5537:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5537:3:5"
																				},
																				"nativeSrc": "5537:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5537:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5531:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5531:5:5"
																		},
																		"nativeSrc": "5531:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5531:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5515:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5515:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5601:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5601:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5619:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5619:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5624:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5624:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5615:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5615:3:5"
																				},
																				"nativeSrc": "5615:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5615:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5567:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5567:33:5"
																		},
																		"nativeSrc": "5567:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5567:63:5"
																	},
																	"nativeSrc": "5567:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5567:63:5"
																}
															]
														},
														{
															"nativeSrc": "5650:168:5",
															"nodeType": "YulBlock",
															"src": "5650:168:5",
															"statements": [
																{
																	"nativeSrc": "5689:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5689:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5719:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5719:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5726:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5726:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5715:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:5"
																				},
																				"nativeSrc": "5715:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5715:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5709:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5709:5:5"
																		},
																		"nativeSrc": "5709:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5693:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5693:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5779:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5779:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5797:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5797:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5802:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5802:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5793:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5793:3:5"
																				},
																				"nativeSrc": "5793:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5793:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5745:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5745:33:5"
																		},
																		"nativeSrc": "5745:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5745:63:5"
																	},
																	"nativeSrc": "5745:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5745:63:5"
																}
															]
														},
														{
															"nativeSrc": "5828:176:5",
															"nodeType": "YulBlock",
															"src": "5828:176:5",
															"statements": [
																{
																	"nativeSrc": "5875:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5875:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5912:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5912:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5901:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5901:3:5"
																				},
																				"nativeSrc": "5901:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5901:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5895:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5895:5:5"
																		},
																		"nativeSrc": "5895:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5895:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5879:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5879:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5965:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5965:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5983:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5983:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5988:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5988:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5979:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5979:3:5"
																				},
																				"nativeSrc": "5979:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5979:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5931:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5931:33:5"
																		},
																		"nativeSrc": "5931:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5931:63:5"
																	},
																	"nativeSrc": "5931:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5931:63:5"
																}
															]
														},
														{
															"nativeSrc": "6014:177:5",
															"nodeType": "YulBlock",
															"src": "6014:177:5",
															"statements": [
																{
																	"nativeSrc": "6062:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6062:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6092:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6092:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6099:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6099:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6088:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6088:3:5"
																				},
																				"nativeSrc": "6088:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6088:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6082:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6082:5:5"
																		},
																		"nativeSrc": "6082:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6066:12:5",
																			"nodeType": "YulTypedName",
																			"src": "6066:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6152:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "6152:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6170:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6170:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6175:4:5",
																						"nodeType": "YulLiteral",
																						"src": "6175:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6166:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6166:3:5"
																				},
																				"nativeSrc": "6166:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6166:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "6118:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "6118:33:5"
																		},
																		"nativeSrc": "6118:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6118:63:5"
																	},
																	"nativeSrc": "6118:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "6118:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "4575:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4706:5:5",
														"nodeType": "YulTypedName",
														"src": "4706:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4713:3:5",
														"nodeType": "YulTypedName",
														"src": "4713:3:5",
														"type": ""
													}
												],
												"src": "4575:1623:5"
											},
											{
												"body": {
													"nativeSrc": "6380:203:5",
													"nodeType": "YulBlock",
													"src": "6380:203:5",
													"statements": [
														{
															"nativeSrc": "6390:27:5",
															"nodeType": "YulAssignment",
															"src": "6390:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6402:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6402:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6413:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6413:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6398:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:5"
																},
																"nativeSrc": "6398:19:5",
																"nodeType": "YulFunctionCall",
																"src": "6398:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6390:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6390:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6549:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6549:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6562:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6573:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6573:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6558:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:5"
																		},
																		"nativeSrc": "6558:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6558:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "6427:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "6427:121:5"
																},
																"nativeSrc": "6427:149:5",
																"nodeType": "YulFunctionCall",
																"src": "6427:149:5"
															},
															"nativeSrc": "6427:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "6427:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "6204:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6352:9:5",
														"nodeType": "YulTypedName",
														"src": "6352:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6364:6:5",
														"nodeType": "YulTypedName",
														"src": "6364:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6375:4:5",
														"nodeType": "YulTypedName",
														"src": "6375:4:5",
														"type": ""
													}
												],
												"src": "6204:379:5"
											},
											{
												"body": {
													"nativeSrc": "6652:80:5",
													"nodeType": "YulBlock",
													"src": "6652:80:5",
													"statements": [
														{
															"nativeSrc": "6662:22:5",
															"nodeType": "YulAssignment",
															"src": "6662:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6677:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6677:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6671:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6671:5:5"
																},
																"nativeSrc": "6671:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6671:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6662:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6662:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6720:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6720:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6693:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "6693:26:5"
																},
																"nativeSrc": "6693:33:5",
																"nodeType": "YulFunctionCall",
																"src": "6693:33:5"
															},
															"nativeSrc": "6693:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "6693:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6589:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6630:6:5",
														"nodeType": "YulTypedName",
														"src": "6630:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6638:3:5",
														"nodeType": "YulTypedName",
														"src": "6638:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6646:5:5",
														"nodeType": "YulTypedName",
														"src": "6646:5:5",
														"type": ""
													}
												],
												"src": "6589:143:5"
											},
											{
												"body": {
													"nativeSrc": "6815:274:5",
													"nodeType": "YulBlock",
													"src": "6815:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6861:83:5",
																"nodeType": "YulBlock",
																"src": "6861:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6863:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6863:77:5"
																			},
																			"nativeSrc": "6863:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6863:79:5"
																		},
																		"nativeSrc": "6863:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6863:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6836:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6836:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6845:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6832:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:5"
																		},
																		"nativeSrc": "6832:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6857:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6857:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6828:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6828:3:5"
																},
																"nativeSrc": "6828:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6828:32:5"
															},
															"nativeSrc": "6825:119:5",
															"nodeType": "YulIf",
															"src": "6825:119:5"
														},
														{
															"nativeSrc": "6954:128:5",
															"nodeType": "YulBlock",
															"src": "6954:128:5",
															"statements": [
																{
																	"nativeSrc": "6969:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6969:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6983:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6983:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6973:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6973:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6998:74:5",
																	"nodeType": "YulAssignment",
																	"src": "6998:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7044:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7044:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7055:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7055:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7040:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7040:3:5"
																				},
																				"nativeSrc": "7040:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7040:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7064:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7064:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7008:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "7008:31:5"
																		},
																		"nativeSrc": "7008:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7008:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6998:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6998:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6738:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6785:9:5",
														"nodeType": "YulTypedName",
														"src": "6785:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6796:7:5",
														"nodeType": "YulTypedName",
														"src": "6796:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6808:6:5",
														"nodeType": "YulTypedName",
														"src": "6808:6:5",
														"type": ""
													}
												],
												"src": "6738:351:5"
											},
											{
												"body": {
													"nativeSrc": "7160:53:5",
													"nodeType": "YulBlock",
													"src": "7160:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7177:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7177:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7200:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7200:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7182:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "7182:17:5"
																		},
																		"nativeSrc": "7182:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7182:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7170:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7170:6:5"
																},
																"nativeSrc": "7170:37:5",
																"nodeType": "YulFunctionCall",
																"src": "7170:37:5"
															},
															"nativeSrc": "7170:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "7170:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7095:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7148:5:5",
														"nodeType": "YulTypedName",
														"src": "7148:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7155:3:5",
														"nodeType": "YulTypedName",
														"src": "7155:3:5",
														"type": ""
													}
												],
												"src": "7095:118:5"
											},
											{
												"body": {
													"nativeSrc": "7373:288:5",
													"nodeType": "YulBlock",
													"src": "7373:288:5",
													"statements": [
														{
															"nativeSrc": "7383:26:5",
															"nodeType": "YulAssignment",
															"src": "7383:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7395:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7395:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7406:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7391:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7391:3:5"
																},
																"nativeSrc": "7391:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7391:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7383:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7383:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7463:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7463:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7476:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7476:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7487:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7487:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7472:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7472:3:5"
																		},
																		"nativeSrc": "7472:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7472:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7419:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7419:43:5"
																},
																"nativeSrc": "7419:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7419:71:5"
															},
															"nativeSrc": "7419:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7419:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7544:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7544:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7557:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7557:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7568:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7568:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7553:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:5"
																		},
																		"nativeSrc": "7553:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7553:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7500:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7500:43:5"
																},
																"nativeSrc": "7500:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7500:72:5"
															},
															"nativeSrc": "7500:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7500:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7626:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7626:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7639:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7639:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7650:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7650:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7635:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7635:3:5"
																		},
																		"nativeSrc": "7635:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7635:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7582:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7582:43:5"
																},
																"nativeSrc": "7582:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7582:72:5"
															},
															"nativeSrc": "7582:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7582:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7219:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7329:9:5",
														"nodeType": "YulTypedName",
														"src": "7329:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7341:6:5",
														"nodeType": "YulTypedName",
														"src": "7341:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7349:6:5",
														"nodeType": "YulTypedName",
														"src": "7349:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7357:6:5",
														"nodeType": "YulTypedName",
														"src": "7357:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7368:4:5",
														"nodeType": "YulTypedName",
														"src": "7368:4:5",
														"type": ""
													}
												],
												"src": "7219:442:5"
											},
											{
												"body": {
													"nativeSrc": "7725:40:5",
													"nodeType": "YulBlock",
													"src": "7725:40:5",
													"statements": [
														{
															"nativeSrc": "7736:22:5",
															"nodeType": "YulAssignment",
															"src": "7736:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7752:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7752:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7746:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7746:5:5"
																},
																"nativeSrc": "7746:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7746:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7736:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7667:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7708:5:5",
														"nodeType": "YulTypedName",
														"src": "7708:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7718:6:5",
														"nodeType": "YulTypedName",
														"src": "7718:6:5",
														"type": ""
													}
												],
												"src": "7667:98:5"
											},
											{
												"body": {
													"nativeSrc": "7884:34:5",
													"nodeType": "YulBlock",
													"src": "7884:34:5",
													"statements": [
														{
															"nativeSrc": "7894:18:5",
															"nodeType": "YulAssignment",
															"src": "7894:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7909:3:5",
																"nodeType": "YulIdentifier",
																"src": "7909:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7894:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "7894:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7771:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7856:3:5",
														"nodeType": "YulTypedName",
														"src": "7856:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7861:6:5",
														"nodeType": "YulTypedName",
														"src": "7861:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7872:11:5",
														"nodeType": "YulTypedName",
														"src": "7872:11:5",
														"type": ""
													}
												],
												"src": "7771:147:5"
											},
											{
												"body": {
													"nativeSrc": "7986:77:5",
													"nodeType": "YulBlock",
													"src": "7986:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8003:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8003:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8008:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8008:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8013:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8013:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7997:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7997:5:5"
																},
																"nativeSrc": "7997:23:5",
																"nodeType": "YulFunctionCall",
																"src": "7997:23:5"
															},
															"nativeSrc": "7997:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "7997:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8040:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "8040:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8045:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8045:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8036:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:5"
																		},
																		"nativeSrc": "8036:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8036:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8054:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8054:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8029:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:5"
																},
																"nativeSrc": "8029:27:5",
																"nodeType": "YulFunctionCall",
																"src": "8029:27:5"
															},
															"nativeSrc": "8029:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "8029:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7924:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7968:3:5",
														"nodeType": "YulTypedName",
														"src": "7968:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7973:3:5",
														"nodeType": "YulTypedName",
														"src": "7973:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7978:6:5",
														"nodeType": "YulTypedName",
														"src": "7978:6:5",
														"type": ""
													}
												],
												"src": "7924:139:5"
											},
											{
												"body": {
													"nativeSrc": "8177:278:5",
													"nodeType": "YulBlock",
													"src": "8177:278:5",
													"statements": [
														{
															"nativeSrc": "8187:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8187:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8233:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8233:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8201:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "8201:31:5"
																},
																"nativeSrc": "8201:38:5",
																"nodeType": "YulFunctionCall",
																"src": "8201:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8191:6:5",
																	"nodeType": "YulTypedName",
																	"src": "8191:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8248:95:5",
															"nodeType": "YulAssignment",
															"src": "8248:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8331:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8331:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8336:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8336:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8255:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "8255:75:5"
																},
																"nativeSrc": "8255:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8255:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8248:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8391:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8391:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8398:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8398:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8387:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:5"
																		},
																		"nativeSrc": "8387:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8387:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8405:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8405:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8410:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8410:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8352:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "8352:34:5"
																},
																"nativeSrc": "8352:65:5",
																"nodeType": "YulFunctionCall",
																"src": "8352:65:5"
															},
															"nativeSrc": "8352:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "8352:65:5"
														},
														{
															"nativeSrc": "8426:23:5",
															"nodeType": "YulAssignment",
															"src": "8426:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8437:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8437:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8442:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8442:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8433:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8433:3:5"
																},
																"nativeSrc": "8433:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8433:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8426:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8426:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8069:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8158:5:5",
														"nodeType": "YulTypedName",
														"src": "8158:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8165:3:5",
														"nodeType": "YulTypedName",
														"src": "8165:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8173:3:5",
														"nodeType": "YulTypedName",
														"src": "8173:3:5",
														"type": ""
													}
												],
												"src": "8069:386:5"
											},
											{
												"body": {
													"nativeSrc": "8595:137:5",
													"nodeType": "YulBlock",
													"src": "8595:137:5",
													"statements": [
														{
															"nativeSrc": "8606:100:5",
															"nodeType": "YulAssignment",
															"src": "8606:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8693:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8693:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8702:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8702:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8613:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "8613:79:5"
																},
																"nativeSrc": "8613:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8613:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8606:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8606:3:5"
																}
															]
														},
														{
															"nativeSrc": "8716:10:5",
															"nodeType": "YulAssignment",
															"src": "8716:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "8723:3:5",
																"nodeType": "YulIdentifier",
																"src": "8723:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8716:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8461:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8574:3:5",
														"nodeType": "YulTypedName",
														"src": "8574:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8580:6:5",
														"nodeType": "YulTypedName",
														"src": "8580:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8591:3:5",
														"nodeType": "YulTypedName",
														"src": "8591:3:5",
														"type": ""
													}
												],
												"src": "8461:271:5"
											},
											{
												"body": {
													"nativeSrc": "8780:48:5",
													"nodeType": "YulBlock",
													"src": "8780:48:5",
													"statements": [
														{
															"nativeSrc": "8790:32:5",
															"nodeType": "YulAssignment",
															"src": "8790:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8815:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8815:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8808:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8808:6:5"
																		},
																		"nativeSrc": "8808:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8808:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8801:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:5"
																},
																"nativeSrc": "8801:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8801:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8790:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8790:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8738:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8762:5:5",
														"nodeType": "YulTypedName",
														"src": "8762:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8772:7:5",
														"nodeType": "YulTypedName",
														"src": "8772:7:5",
														"type": ""
													}
												],
												"src": "8738:90:5"
											},
											{
												"body": {
													"nativeSrc": "8874:76:5",
													"nodeType": "YulBlock",
													"src": "8874:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8928:16:5",
																"nodeType": "YulBlock",
																"src": "8928:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8937:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8937:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8940:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8940:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8930:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8930:6:5"
																			},
																			"nativeSrc": "8930:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8930:12:5"
																		},
																		"nativeSrc": "8930:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8897:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8897:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8919:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8919:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8904:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "8904:14:5"
																				},
																				"nativeSrc": "8904:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8904:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8894:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8894:2:5"
																		},
																		"nativeSrc": "8894:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8887:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8887:6:5"
																},
																"nativeSrc": "8887:40:5",
																"nodeType": "YulFunctionCall",
																"src": "8887:40:5"
															},
															"nativeSrc": "8884:60:5",
															"nodeType": "YulIf",
															"src": "8884:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8834:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8867:5:5",
														"nodeType": "YulTypedName",
														"src": "8867:5:5",
														"type": ""
													}
												],
												"src": "8834:116:5"
											},
											{
												"body": {
													"nativeSrc": "9016:77:5",
													"nodeType": "YulBlock",
													"src": "9016:77:5",
													"statements": [
														{
															"nativeSrc": "9026:22:5",
															"nodeType": "YulAssignment",
															"src": "9026:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9041:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9041:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9035:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9035:5:5"
																},
																"nativeSrc": "9035:13:5",
																"nodeType": "YulFunctionCall",
																"src": "9035:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9026:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9026:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9081:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9081:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9057:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "9057:23:5"
																},
																"nativeSrc": "9057:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9057:30:5"
															},
															"nativeSrc": "9057:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9057:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8956:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8994:6:5",
														"nodeType": "YulTypedName",
														"src": "8994:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9002:3:5",
														"nodeType": "YulTypedName",
														"src": "9002:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9010:5:5",
														"nodeType": "YulTypedName",
														"src": "9010:5:5",
														"type": ""
													}
												],
												"src": "8956:137:5"
											},
											{
												"body": {
													"nativeSrc": "9173:271:5",
													"nodeType": "YulBlock",
													"src": "9173:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9219:83:5",
																"nodeType": "YulBlock",
																"src": "9219:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9221:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "9221:77:5"
																			},
																			"nativeSrc": "9221:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:79:5"
																		},
																		"nativeSrc": "9221:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9221:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9194:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9194:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9203:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9190:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9190:3:5"
																		},
																		"nativeSrc": "9190:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9190:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9215:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9215:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9186:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:5"
																},
																"nativeSrc": "9186:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9186:32:5"
															},
															"nativeSrc": "9183:119:5",
															"nodeType": "YulIf",
															"src": "9183:119:5"
														},
														{
															"nativeSrc": "9312:125:5",
															"nodeType": "YulBlock",
															"src": "9312:125:5",
															"statements": [
																{
																	"nativeSrc": "9327:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9327:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9341:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9341:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9331:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9331:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9356:71:5",
																	"nodeType": "YulAssignment",
																	"src": "9356:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9399:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9399:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9410:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9410:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9395:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9395:3:5"
																				},
																				"nativeSrc": "9395:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9395:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9419:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9419:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9366:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "9366:28:5"
																		},
																		"nativeSrc": "9366:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9366:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9356:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9356:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9099:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9143:9:5",
														"nodeType": "YulTypedName",
														"src": "9143:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9154:7:5",
														"nodeType": "YulTypedName",
														"src": "9154:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9166:6:5",
														"nodeType": "YulTypedName",
														"src": "9166:6:5",
														"type": ""
													}
												],
												"src": "9099:345:5"
											},
											{
												"body": {
													"nativeSrc": "9556:47:5",
													"nodeType": "YulBlock",
													"src": "9556:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9578:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9578:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9586:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9586:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9574:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9574:3:5"
																		},
																		"nativeSrc": "9574:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9574:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "9590:5:5",
																		"nodeType": "YulLiteral",
																		"src": "9590:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9567:6:5"
																},
																"nativeSrc": "9567:29:5",
																"nodeType": "YulFunctionCall",
																"src": "9567:29:5"
															},
															"nativeSrc": "9567:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "9567:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "9450:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9548:6:5",
														"nodeType": "YulTypedName",
														"src": "9548:6:5",
														"type": ""
													}
												],
												"src": "9450:153:5"
											},
											{
												"body": {
													"nativeSrc": "9755:219:5",
													"nodeType": "YulBlock",
													"src": "9755:219:5",
													"statements": [
														{
															"nativeSrc": "9765:73:5",
															"nodeType": "YulAssignment",
															"src": "9765:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9831:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9831:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9836:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9836:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9772:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9772:58:5"
																},
																"nativeSrc": "9772:66:5",
																"nodeType": "YulFunctionCall",
																"src": "9772:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9765:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9765:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9936:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9936:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "9847:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9847:88:5"
																},
																"nativeSrc": "9847:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9847:93:5"
															},
															"nativeSrc": "9847:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9847:93:5"
														},
														{
															"nativeSrc": "9949:19:5",
															"nodeType": "YulAssignment",
															"src": "9949:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9960:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9965:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9965:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9956:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9956:3:5"
																},
																"nativeSrc": "9956:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9956:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9949:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9949:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9609:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9743:3:5",
														"nodeType": "YulTypedName",
														"src": "9743:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9751:3:5",
														"nodeType": "YulTypedName",
														"src": "9751:3:5",
														"type": ""
													}
												],
												"src": "9609:365:5"
											},
											{
												"body": {
													"nativeSrc": "10151:248:5",
													"nodeType": "YulBlock",
													"src": "10151:248:5",
													"statements": [
														{
															"nativeSrc": "10161:26:5",
															"nodeType": "YulAssignment",
															"src": "10161:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10173:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10173:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10184:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10184:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10169:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10169:3:5"
																},
																"nativeSrc": "10169:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10169:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10161:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10161:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10208:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10208:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10219:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10219:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10204:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10204:3:5"
																		},
																		"nativeSrc": "10204:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10204:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10227:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10227:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10233:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10233:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10223:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10223:3:5"
																		},
																		"nativeSrc": "10223:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10223:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10197:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10197:6:5"
																},
																"nativeSrc": "10197:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10197:47:5"
															},
															"nativeSrc": "10197:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10197:47:5"
														},
														{
															"nativeSrc": "10253:139:5",
															"nodeType": "YulAssignment",
															"src": "10253:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10387:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10387:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10261:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10261:124:5"
																},
																"nativeSrc": "10261:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10261:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10253:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10253:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9980:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10131:9:5",
														"nodeType": "YulTypedName",
														"src": "10131:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10146:4:5",
														"nodeType": "YulTypedName",
														"src": "10146:4:5",
														"type": ""
													}
												],
												"src": "9980:419:5"
											},
											{
												"body": {
													"nativeSrc": "10531:206:5",
													"nodeType": "YulBlock",
													"src": "10531:206:5",
													"statements": [
														{
															"nativeSrc": "10541:26:5",
															"nodeType": "YulAssignment",
															"src": "10541:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10553:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10553:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10564:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10564:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10549:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:5"
																},
																"nativeSrc": "10549:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10549:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10541:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10541:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10621:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10621:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10634:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10634:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10645:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10645:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10630:3:5"
																		},
																		"nativeSrc": "10630:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10630:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10577:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10577:43:5"
																},
																"nativeSrc": "10577:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10577:71:5"
															},
															"nativeSrc": "10577:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10577:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10702:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10702:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10715:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10715:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10726:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10726:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10711:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10711:3:5"
																		},
																		"nativeSrc": "10711:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10711:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10658:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10658:43:5"
																},
																"nativeSrc": "10658:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10658:72:5"
															},
															"nativeSrc": "10658:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10658:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10405:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10495:9:5",
														"nodeType": "YulTypedName",
														"src": "10495:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10507:6:5",
														"nodeType": "YulTypedName",
														"src": "10507:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10515:6:5",
														"nodeType": "YulTypedName",
														"src": "10515:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10526:4:5",
														"nodeType": "YulTypedName",
														"src": "10526:4:5",
														"type": ""
													}
												],
												"src": "10405:332:5"
											},
											{
												"body": {
													"nativeSrc": "10849:46:5",
													"nodeType": "YulBlock",
													"src": "10849:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10871:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10871:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10879:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10879:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10867:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10867:3:5"
																		},
																		"nativeSrc": "10867:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10867:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "10883:4:5",
																		"nodeType": "YulLiteral",
																		"src": "10883:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10860:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10860:6:5"
																},
																"nativeSrc": "10860:28:5",
																"nodeType": "YulFunctionCall",
																"src": "10860:28:5"
															},
															"nativeSrc": "10860:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "10860:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "10743:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10841:6:5",
														"nodeType": "YulTypedName",
														"src": "10841:6:5",
														"type": ""
													}
												],
												"src": "10743:152:5"
											},
											{
												"body": {
													"nativeSrc": "11047:219:5",
													"nodeType": "YulBlock",
													"src": "11047:219:5",
													"statements": [
														{
															"nativeSrc": "11057:73:5",
															"nodeType": "YulAssignment",
															"src": "11057:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11123:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11123:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11128:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11128:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11064:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11064:58:5"
																},
																"nativeSrc": "11064:66:5",
																"nodeType": "YulFunctionCall",
																"src": "11064:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11057:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11057:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11228:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11228:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "11139:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11139:88:5"
																},
																"nativeSrc": "11139:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11139:93:5"
															},
															"nativeSrc": "11139:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11139:93:5"
														},
														{
															"nativeSrc": "11241:19:5",
															"nodeType": "YulAssignment",
															"src": "11241:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11252:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11252:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11257:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11257:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11248:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11248:3:5"
																},
																"nativeSrc": "11248:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11248:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11241:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11241:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10901:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11035:3:5",
														"nodeType": "YulTypedName",
														"src": "11035:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11043:3:5",
														"nodeType": "YulTypedName",
														"src": "11043:3:5",
														"type": ""
													}
												],
												"src": "10901:365:5"
											},
											{
												"body": {
													"nativeSrc": "11443:248:5",
													"nodeType": "YulBlock",
													"src": "11443:248:5",
													"statements": [
														{
															"nativeSrc": "11453:26:5",
															"nodeType": "YulAssignment",
															"src": "11453:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11465:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11465:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11476:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11476:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11461:3:5"
																},
																"nativeSrc": "11461:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11461:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11453:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11453:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11500:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11500:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11511:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11511:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11496:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11496:3:5"
																		},
																		"nativeSrc": "11496:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11496:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11519:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11519:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11525:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11515:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11515:3:5"
																		},
																		"nativeSrc": "11515:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11515:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11489:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11489:6:5"
																},
																"nativeSrc": "11489:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11489:47:5"
															},
															"nativeSrc": "11489:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11489:47:5"
														},
														{
															"nativeSrc": "11545:139:5",
															"nodeType": "YulAssignment",
															"src": "11545:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11679:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11679:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11553:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11553:124:5"
																},
																"nativeSrc": "11553:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11553:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11545:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11545:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11272:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11423:9:5",
														"nodeType": "YulTypedName",
														"src": "11423:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11438:4:5",
														"nodeType": "YulTypedName",
														"src": "11438:4:5",
														"type": ""
													}
												],
												"src": "11272:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint24(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f6e8f4ff1461002d575b5f80fd5b61004760048036038101906100429190610591565b61005d565b6040516100549190610617565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e3906106b0565b60405180910390fd5b5f8490506100fc87333087610227565b610107878286610379565b5f6040518061010001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018562ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014381526020018681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090508173ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101da91906107aa565b6020604051808303815f875af11580156101f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061021a91906107d8565b9250505095945050505050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161025d93929190610812565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c79190610899565b5f604051808303815f865af19150503d805f8114610300576040519150601f19603f3d011682016040523d82523d5f602084013e610305565b606091505b509150915081801561033257505f8151148061033157508080602001905181019061033091906108e4565b5b5b610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036890610959565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016103ad929190610977565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104179190610899565b5f604051808303815f865af19150503d805f8114610450576040519150601f19603f3d011682016040523d82523d5f602084013e610455565b606091505b509150915081801561048257505f8151148061048157508080602001905181019061048091906108e4565b5b5b6104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b8906109e8565b60405180910390fd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104f5826104cc565b9050919050565b610505816104eb565b811461050f575f80fd5b50565b5f81359050610520816104fc565b92915050565b5f819050919050565b61053881610526565b8114610542575f80fd5b50565b5f813590506105538161052f565b92915050565b5f62ffffff82169050919050565b61057081610559565b811461057a575f80fd5b50565b5f8135905061058b81610567565b92915050565b5f805f805f60a086880312156105aa576105a96104c8565b5b5f6105b788828901610512565b95505060206105c888828901610512565b94505060406105d988828901610512565b93505060606105ea88828901610545565b92505060806105fb8882890161057d565b9150509295509295909350565b61061181610526565b82525050565b5f60208201905061062a5f830184610608565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61069a602183610630565b91506106a582610640565b604082019050919050565b5f6020820190508181035f8301526106c78161068e565b9050919050565b6106d7816104eb565b82525050565b6106e681610559565b82525050565b6106f581610526565b82525050565b610704816104cc565b82525050565b61010082015f82015161071f5f8501826106ce565b50602082015161073260208501826106ce565b50604082015161074560408501826106dd565b50606082015161075860608501826106ce565b50608082015161076b60808501826106ec565b5060a082015161077e60a08501826106ec565b5060c082015161079160c08501826106ec565b5060e08201516107a460e08501826106fb565b50505050565b5f610100820190506107be5f83018461070a565b92915050565b5f815190506107d28161052f565b92915050565b5f602082840312156107ed576107ec6104c8565b5b5f6107fa848285016107c4565b91505092915050565b61080c816104eb565b82525050565b5f6060820190506108255f830186610803565b6108326020830185610803565b61083f6040830184610608565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61087382610847565b61087d8185610851565b935061088d81856020860161085b565b80840191505092915050565b5f6108a48284610869565b915081905092915050565b5f8115159050919050565b6108c3816108af565b81146108cd575f80fd5b50565b5f815190506108de816108ba565b92915050565b5f602082840312156108f9576108f86104c8565b5b5f610906848285016108d0565b91505092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610943600383610630565b915061094e8261090f565b602082019050919050565b5f6020820190508181035f83015261097081610937565b9050919050565b5f60408201905061098a5f830185610803565b6109976020830184610608565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6109d2600283610630565b91506109dd8261099e565b602082019050919050565b5f6020820190508181035f8301526109ff816109c6565b905091905056fea2646970667358221220ae42048f3a949b6fb2a00d7a4adda874501a1c2cdf7b65a7e87b81eeced0648064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF6E8F4FF EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 SWAP1 POP PUSH2 0xFC DUP8 CALLER ADDRESS DUP8 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x107 DUP8 DUP3 DUP7 PUSH2 0x379 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x332 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x331 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3AD SWAP3 SWAP2 SWAP1 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x455 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x482 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x481 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F5 DUP3 PUSH2 0x4CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x505 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP2 EQ PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x520 DUP2 PUSH2 0x4FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x538 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP2 EQ PUSH2 0x542 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x553 DUP2 PUSH2 0x52F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 DUP2 PUSH2 0x559 JUMP JUMPDEST DUP2 EQ PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B7 DUP9 DUP3 DUP10 ADD PUSH2 0x512 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x5C8 DUP9 DUP3 DUP10 ADD PUSH2 0x512 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5D9 DUP9 DUP3 DUP10 ADD PUSH2 0x512 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x5FB DUP9 DUP3 DUP10 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62A PUSH0 DUP4 ADD DUP5 PUSH2 0x608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x69A PUSH1 0x21 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x6A5 DUP3 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6C7 DUP2 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D7 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F5 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x704 DUP2 PUSH2 0x4CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x71F PUSH0 DUP6 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x732 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x745 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6DD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x758 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x76B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6EC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x77E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6EC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x791 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6EC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7A4 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x6FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x7BE PUSH0 DUP4 ADD DUP5 PUSH2 0x70A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7D2 DUP2 PUSH2 0x52F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7FA DUP5 DUP3 DUP6 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80C DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x825 PUSH0 DUP4 ADD DUP7 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x832 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x83F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x608 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x873 DUP3 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x87D DUP2 DUP6 PUSH2 0x851 JUMP JUMPDEST SWAP4 POP PUSH2 0x88D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x85B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A4 DUP3 DUP5 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C3 DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP2 EQ PUSH2 0x8CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8DE DUP2 PUSH2 0x8BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x943 PUSH1 0x3 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x94E DUP3 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x970 DUP2 PUSH2 0x937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x98A PUSH0 DUP4 ADD DUP6 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x997 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x608 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9D2 PUSH1 0x2 DUP4 PUSH2 0x630 JUMP JUMPDEST SWAP2 POP PUSH2 0x9DD DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9FF DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE TIMESTAMP DIV DUP16 GASPRICE SWAP5 SWAP12 PUSH16 0xB2A00D7A4ADDA874501A1C2CDF7B65A7 0xE8 PUSH28 0x81EECED0648064736F6C634300081900330000000000000000000000 ",
							"sourceMap": "267:1539:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:1250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;760:17;487:5;;;;;;;;;;;473:19;;:10;:19;;;465:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;797:22:::1;834:11;797:49;;1006:77;1038:8;1048:10;1068:4;1075:7;1006:31;:77::i;:::-;1140:66;1167:8;1185:10;1198:7;1140:26;:66::i;:::-;1217:48;1268:342;;;;;;;;1330:8;1268:342;;;;;;1366:9;1268:342;;;;;;1398:8;1268:342;;;;;;1435:10;1268:342;;;;;;1473:12;1268:342;;;;1513:7;1268:342;;;;1556:1;1268:342;;;;1594:1;1268:342;;;;::::0;1217:393:::1;;1735:10;:27;;;1763:6;1735:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1723:47;;1781:16;;554:1250:::0;;;;;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:91::-;1233:7;1273:8;1266:5;1262:20;1251:31;;1197:91;;;:::o;1294:120::-;1366:23;1383:5;1366:23;:::i;:::-;1359:5;1356:34;1346:62;;1404:1;1401;1394:12;1346:62;1294:120;:::o;1420:137::-;1465:5;1503:6;1490:20;1481:29;;1519:32;1545:5;1519:32;:::i;:::-;1420:137;;;;:::o;1563:909::-;1657:6;1665;1673;1681;1689;1738:3;1726:9;1717:7;1713:23;1709:33;1706:120;;;1745:79;;:::i;:::-;1706:120;1865:1;1890:53;1935:7;1926:6;1915:9;1911:22;1890:53;:::i;:::-;1880:63;;1836:117;1992:2;2018:53;2063:7;2054:6;2043:9;2039:22;2018:53;:::i;:::-;2008:63;;1963:118;2120:2;2146:53;2191:7;2182:6;2171:9;2167:22;2146:53;:::i;:::-;2136:63;;2091:118;2248:2;2274:53;2319:7;2310:6;2299:9;2295:22;2274:53;:::i;:::-;2264:63;;2219:118;2376:3;2403:52;2447:7;2438:6;2427:9;2423:22;2403:52;:::i;:::-;2393:62;;2347:118;1563:909;;;;;;;;:::o;2478:118::-;2565:24;2583:5;2565:24;:::i;:::-;2560:3;2553:37;2478:118;;:::o;2602:222::-;2695:4;2733:2;2722:9;2718:18;2710:26;;2746:71;2814:1;2803:9;2799:17;2790:6;2746:71;:::i;:::-;2602:222;;;;:::o;2830:169::-;2914:11;2948:6;2943:3;2936:19;2988:4;2983:3;2979:14;2964:29;;2830:169;;;;:::o;3005:220::-;3145:34;3141:1;3133:6;3129:14;3122:58;3214:3;3209:2;3201:6;3197:15;3190:28;3005:220;:::o;3231:366::-;3373:3;3394:67;3458:2;3453:3;3394:67;:::i;:::-;3387:74;;3470:93;3559:3;3470:93;:::i;:::-;3588:2;3583:3;3579:12;3572:19;;3231:366;;;:::o;3603:419::-;3769:4;3807:2;3796:9;3792:18;3784:26;;3856:9;3850:4;3846:20;3842:1;3831:9;3827:17;3820:47;3884:131;4010:4;3884:131;:::i;:::-;3876:139;;3603:419;;;:::o;4028:108::-;4105:24;4123:5;4105:24;:::i;:::-;4100:3;4093:37;4028:108;;:::o;4142:105::-;4217:23;4234:5;4217:23;:::i;:::-;4212:3;4205:36;4142:105;;:::o;4253:108::-;4330:24;4348:5;4330:24;:::i;:::-;4325:3;4318:37;4253:108;;:::o;4367:::-;4444:24;4462:5;4444:24;:::i;:::-;4439:3;4432:37;4367:108;;:::o;4575:1623::-;4750:6;4745:3;4741:16;4842:4;4835:5;4831:16;4825:23;4861:63;4918:4;4913:3;4909:14;4895:12;4861:63;:::i;:::-;4767:167;5020:4;5013:5;5009:16;5003:23;5039:63;5096:4;5091:3;5087:14;5073:12;5039:63;:::i;:::-;4944:168;5193:4;5186:5;5182:16;5176:23;5212:61;5267:4;5262:3;5258:14;5244:12;5212:61;:::i;:::-;5122:161;5370:4;5363:5;5359:16;5353:23;5389:63;5446:4;5441:3;5437:14;5423:12;5389:63;:::i;:::-;5293:169;5548:4;5541:5;5537:16;5531:23;5567:63;5624:4;5619:3;5615:14;5601:12;5567:63;:::i;:::-;5472:168;5726:4;5719:5;5715:16;5709:23;5745:63;5802:4;5797:3;5793:14;5779:12;5745:63;:::i;:::-;5650:168;5912:4;5905:5;5901:16;5895:23;5931:63;5988:4;5983:3;5979:14;5965:12;5931:63;:::i;:::-;5828:176;6099:4;6092:5;6088:16;6082:23;6118:63;6175:4;6170:3;6166:14;6152:12;6118:63;:::i;:::-;6014:177;4719:1479;4575:1623;;:::o;6204:379::-;6375:4;6413:3;6402:9;6398:19;6390:27;;6427:149;6573:1;6562:9;6558:17;6549:6;6427:149;:::i;:::-;6204:379;;;;:::o;6589:143::-;6646:5;6677:6;6671:13;6662:22;;6693:33;6720:5;6693:33;:::i;:::-;6589:143;;;;:::o;6738:351::-;6808:6;6857:2;6845:9;6836:7;6832:23;6828:32;6825:119;;;6863:79;;:::i;:::-;6825:119;6983:1;7008:64;7064:7;7055:6;7044:9;7040:22;7008:64;:::i;:::-;6998:74;;6954:128;6738:351;;;;:::o;7095:118::-;7182:24;7200:5;7182:24;:::i;:::-;7177:3;7170:37;7095:118;;:::o;7219:442::-;7368:4;7406:2;7395:9;7391:18;7383:26;;7419:71;7487:1;7476:9;7472:17;7463:6;7419:71;:::i;:::-;7500:72;7568:2;7557:9;7553:18;7544:6;7500:72;:::i;:::-;7582;7650:2;7639:9;7635:18;7626:6;7582:72;:::i;:::-;7219:442;;;;;;:::o;7667:98::-;7718:6;7752:5;7746:12;7736:22;;7667:98;;;:::o;7771:147::-;7872:11;7909:3;7894:18;;7771:147;;;;:::o;7924:139::-;8013:6;8008:3;8003;7997:23;8054:1;8045:6;8040:3;8036:16;8029:27;7924:139;;;:::o;8069:386::-;8173:3;8201:38;8233:5;8201:38;:::i;:::-;8255:88;8336:6;8331:3;8255:88;:::i;:::-;8248:95;;8352:65;8410:6;8405:3;8398:4;8391:5;8387:16;8352:65;:::i;:::-;8442:6;8437:3;8433:16;8426:23;;8177:278;8069:386;;;;:::o;8461:271::-;8591:3;8613:93;8702:3;8693:6;8613:93;:::i;:::-;8606:100;;8723:3;8716:10;;8461:271;;;;:::o;8738:90::-;8772:7;8815:5;8808:13;8801:21;8790:32;;8738:90;;;:::o;8834:116::-;8904:21;8919:5;8904:21;:::i;:::-;8897:5;8894:32;8884:60;;8940:1;8937;8930:12;8884:60;8834:116;:::o;8956:137::-;9010:5;9041:6;9035:13;9026:22;;9057:30;9081:5;9057:30;:::i;:::-;8956:137;;;;:::o;9099:345::-;9166:6;9215:2;9203:9;9194:7;9190:23;9186:32;9183:119;;;9221:79;;:::i;:::-;9183:119;9341:1;9366:61;9419:7;9410:6;9399:9;9395:22;9366:61;:::i;:::-;9356:71;;9312:125;9099:345;;;;:::o;9450:153::-;9590:5;9586:1;9578:6;9574:14;9567:29;9450:153;:::o;9609:365::-;9751:3;9772:66;9836:1;9831:3;9772:66;:::i;:::-;9765:73;;9847:93;9936:3;9847:93;:::i;:::-;9965:2;9960:3;9956:12;9949:19;;9609:365;;;:::o;9980:419::-;10146:4;10184:2;10173:9;10169:18;10161:26;;10233:9;10227:4;10223:20;10219:1;10208:9;10204:17;10197:47;10261:131;10387:4;10261:131;:::i;:::-;10253:139;;9980:419;;;:::o;10405:332::-;10526:4;10564:2;10553:9;10549:18;10541:26;;10577:71;10645:1;10634:9;10630:17;10621:6;10577:71;:::i;:::-;10658:72;10726:2;10715:9;10711:18;10702:6;10658:72;:::i;:::-;10405:332;;;;;:::o;10743:152::-;10883:4;10879:1;10871:6;10867:14;10860:28;10743:152;:::o;10901:365::-;11043:3;11064:66;11128:1;11123:3;11064:66;:::i;:::-;11057:73;;11139:93;11228:3;11139:93;:::i;:::-;11257:2;11252:3;11248:12;11241:19;;10901:365;;;:::o;11272:419::-;11438:4;11476:2;11465:9;11461:18;11453:26;;11525:9;11519:4;11515:20;11511:1;11500:9;11496:17;11489:47;11553:131;11679:4;11553:131;:::i;:::-;11545:139;;11272:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "524000",
								"executionCost": "24819",
								"totalCost": "548819"
							},
							"external": {
								"swapSingle(address,address,address,uint256,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 267,
									"end": 1806,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 323,
									"end": 428,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 428,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 323,
									"end": 428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 323,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 363,
									"end": 373,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 347,
									"end": 352,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 352,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 347,
									"end": 374,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 347,
									"end": 374,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 347,
									"end": 374,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 347,
									"end": 374,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1806,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae42048f3a949b6fb2a00d7a4adda874501a1c2cdf7b65a7e87b81eeced0648064736f6c63430008190033",
									".code": [
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "F6E8F4FF"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 267,
											"end": 1806,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 554,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 554,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 554,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 760,
											"end": 777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 473,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 473,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 473,
											"end": 483,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 473,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 473,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 473,
											"end": 492,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 465,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 465,
											"end": 530,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 465,
											"end": 530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 845,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 797,
											"end": 846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 797,
											"end": 846,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1038,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1058,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1072,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1006,
											"end": 1083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1006,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1167,
											"end": 1175,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1205,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1140,
											"end": 1206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1140,
											"end": 1206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1338,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1375,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1398,
											"end": 1406,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1445,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1485,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 1763,
											"end": 1769,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 1770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1735,
											"end": 1770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 1266,
											"end": 1271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1383,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1366,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1356,
											"end": 1390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1519,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1741,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1745,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1890,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2018,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2071,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2180,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2146,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2199,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2319,
											"end": 2326,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2274,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2436,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 2472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2583,
											"end": 2588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2565,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2560,
											"end": 2563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2746,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3225,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3005,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3458,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3453,
											"end": 3456,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3394,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3559,
											"end": 3562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3470,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3470,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3866,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4010,
											"end": 4014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3884,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3884,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4136,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4028,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4123,
											"end": 4128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4105,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4129,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4105,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4247,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4142,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4234,
											"end": 4239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4217,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4361,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4253,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4348,
											"end": 4353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4330,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4330,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4318,
											"end": 4355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4475,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4367,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4444,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4468,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4444,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4439,
											"end": 4442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 6198,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4575,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4745,
											"end": 4748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4847,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4848,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4861,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5096,
											"end": 5100,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5085,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5039,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5176,
											"end": 5199,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5267,
											"end": 5271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5258,
											"end": 5272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5244,
											"end": 5256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5212,
											"end": 5273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5273,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5212,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5363,
											"end": 5368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5441,
											"end": 5444,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5389,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5452,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5389,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5552,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5541,
											"end": 5546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5554,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5624,
											"end": 5628,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5619,
											"end": 5622,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5567,
											"end": 5630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5630,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5567,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5730,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5719,
											"end": 5724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5802,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5797,
											"end": 5800,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5779,
											"end": 5791,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5745,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5808,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5745,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5905,
											"end": 5910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5895,
											"end": 5918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 5993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5965,
											"end": 5977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5931,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5828,
											"end": 6004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6103,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6092,
											"end": 6097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6175,
											"end": 6179,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6170,
											"end": 6173,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 6118,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6014,
											"end": 6191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4719,
											"end": 6198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 6198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 6198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6583,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6402,
											"end": 6411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6427,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6571,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6427,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 6427,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6427,
											"end": 6576,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6427,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6732,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6589,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6662,
											"end": 6684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6662,
											"end": 6684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6720,
											"end": 6725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 6693,
											"end": 6726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6726,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6693,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6732,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 7089,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6738,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6808,
											"end": 6814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 6859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6836,
											"end": 6843,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6832,
											"end": 6855,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6828,
											"end": 6860,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6944,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6825,
											"end": 6944,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6863,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 6863,
											"end": 6942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 6942,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6863,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6944,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6825,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6983,
											"end": 6984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7064,
											"end": 7071,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7044,
											"end": 7053,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7008,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7008,
											"end": 7072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7008,
											"end": 7072,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7008,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6954,
											"end": 7082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 7089,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 7089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 7089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 7089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7200,
											"end": 7205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7182,
											"end": 7206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7206,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7182,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7177,
											"end": 7180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7170,
											"end": 7207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7472,
											"end": 7489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7419,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7490,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7419,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7568,
											"end": 7570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7500,
											"end": 7572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7572,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7500,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7650,
											"end": 7652,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7639,
											"end": 7648,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7635,
											"end": 7653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 7582,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7765,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 7667,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7746,
											"end": 7758,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7918,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 7771,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8063,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7924,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8013,
											"end": 8019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8003,
											"end": 8006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8020,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8045,
											"end": 8051,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8043,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8069,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8233,
											"end": 8238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 8201,
											"end": 8239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8239,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8201,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8255,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8336,
											"end": 8342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8331,
											"end": 8334,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8255,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 8255,
											"end": 8343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8255,
											"end": 8343,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8255,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8343,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8410,
											"end": 8416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8408,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8398,
											"end": 8402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8391,
											"end": 8396,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 8352,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8417,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8352,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8437,
											"end": 8440,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8433,
											"end": 8449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8426,
											"end": 8449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8426,
											"end": 8449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8177,
											"end": 8455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8732,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 8461,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8702,
											"end": 8705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8693,
											"end": 8699,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8613,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8706,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8613,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8706,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8716,
											"end": 8726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8716,
											"end": 8726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8732,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8828,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 8738,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8772,
											"end": 8779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8821,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8801,
											"end": 8822,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8790,
											"end": 8822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8790,
											"end": 8822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8834,
											"end": 8950,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 8834,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8904,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8919,
											"end": 8924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8904,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 8904,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8904,
											"end": 8925,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8904,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 8902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8894,
											"end": 8926,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8884,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 8884,
											"end": 8944,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 8941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8930,
											"end": 8942,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8884,
											"end": 8944,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 8884,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8834,
											"end": 8950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8834,
											"end": 8950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 9093,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 8956,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9010,
											"end": 9015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9048,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 9081,
											"end": 9086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 9057,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 9093,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 9093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 9093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 9093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 9093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9444,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 9099,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9215,
											"end": 9217,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9203,
											"end": 9212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9194,
											"end": 9201,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9190,
											"end": 9213,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9186,
											"end": 9218,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 9221,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 9419,
											"end": 9426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 9416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9408,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 9366,
											"end": 9427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9427,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 9366,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9312,
											"end": 9437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9444,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9603,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9450,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9590,
											"end": 9595,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9567,
											"end": 9596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9974,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 9609,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9751,
											"end": 9754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9836,
											"end": 9837,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9831,
											"end": 9834,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9772,
											"end": 9838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9765,
											"end": 9838,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9765,
											"end": 9838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 9936,
											"end": 9939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9847,
											"end": 9940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9940,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 9847,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9965,
											"end": 9967,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9960,
											"end": 9963,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9956,
											"end": 9968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 9968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 9968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 10399,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 9980,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10186,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10169,
											"end": 10187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10161,
											"end": 10187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10161,
											"end": 10187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10227,
											"end": 10231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10223,
											"end": 10243,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10204,
											"end": 10221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10197,
											"end": 10244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10261,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10387,
											"end": 10391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10261,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 10261,
											"end": 10392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10261,
											"end": 10392,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10261,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 10399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 10399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 10399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 10399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10564,
											"end": 10566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10553,
											"end": 10562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10577,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10643,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10621,
											"end": 10627,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10577,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 10577,
											"end": 10648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10577,
											"end": 10648,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10577,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 10726,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10715,
											"end": 10724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10708,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 10658,
											"end": 10730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10405,
											"end": 10737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10895,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 10743,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10887,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10871,
											"end": 10877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10867,
											"end": 10881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 10888,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11266,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 10901,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 11123,
											"end": 11126,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 11064,
											"end": 11130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11139,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 11228,
											"end": 11231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11139,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 11139,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11139,
											"end": 11232,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 11139,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11252,
											"end": 11255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11241,
											"end": 11260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11241,
											"end": 11260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 11266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11691,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 11272,
											"end": 11691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11438,
											"end": 11442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11465,
											"end": 11474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11453,
											"end": 11479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11453,
											"end": 11479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11525,
											"end": 11534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11519,
											"end": 11523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11515,
											"end": 11535,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11511,
											"end": 11512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11489,
											"end": 11536,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11553,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 11679,
											"end": 11683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11553,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 11553,
											"end": 11684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11553,
											"end": 11684,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 11553,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11545,
											"end": 11684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11545,
											"end": 11684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SwapContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"swapSingle(address,address,address,uint256,uint24)": "f6e8f4ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"_poolFee\",\"type\":\"uint24\"}],\"name\":\"swapSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapContract.sol\":\"SwapContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/SwapContract.sol\":{\"keccak256\":\"0xb79185638378d5f3b84404fe35c301dd764a4144c42caeb9ccb38afc22277fa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75971242044d2b88a381cc7e5b9ff8ba3adaca04ec5670c6fb38cc6f68f0b2ed\",\"dweb:/ipfs/QmYMMiS6mN3d3QRCCoMVTXzsTXQRTR83YQ7jzup2EaG4UD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 370,
								"contract": "contracts/SwapContract.sol:SwapContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/SwapContract.sol": {
				"ast": {
					"absolutePath": "contracts/SwapContract.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"SwapContract": [
							472
						],
						"TransferHelper": [
							362
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 192,
							"src": "85:87:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 365,
										"name": "ISwapRouter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 191,
										"src": "93:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 363,
							"src": "173:92:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 367,
										"name": "TransferHelper",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "181:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SwapContract",
							"nameLocation": "276:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 370,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "311:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 472,
									"src": "295:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 369,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "295:15:4",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "337:91:4",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "347:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 376,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "363:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "367:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "363:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "355:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 374,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "355:8:4",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "355:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "347:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "347:27:4"
											}
										]
									},
									"id": 382,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:2:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:0:4"
									},
									"scope": 472,
									"src": "323:105:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "455:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 385,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "473:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "477:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "473:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 387,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "487:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "473:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "494:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "465:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "465:65:4"
											},
											{
												"id": 392,
												"nodeType": "PlaceholderStatement",
												"src": "540:1:4"
											}
										]
									},
									"id": 394,
									"name": "onlyOwner",
									"nameLocation": "443:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:2:4"
									},
									"src": "434:114:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "787:1017:4",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "swapRouter",
														"nameLocation": "809:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "797:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														},
														"typeName": {
															"id": 412,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 411,
																"name": "ISwapRouter",
																"nameLocations": [
																	"797:11:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 191,
																"src": "797:11:4"
															},
															"referencedDeclaration": 191,
															"src": "797:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$191",
																"typeString": "contract ISwapRouter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"arguments": [
														{
															"id": 415,
															"name": "_swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "834:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 414,
														"name": "ISwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "822:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
															"typeString": "type(contract ISwapRouter)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "797:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "_tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1038:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1048:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1052:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1048:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 426,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1068:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapContract_$472",
																		"typeString": "contract SwapContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapContract_$472",
																		"typeString": "contract SwapContract"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1060:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1060:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1060:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1075:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 418,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1006:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1021:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1006:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1006:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1006:77:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "_tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1167:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 437,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1185:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1177:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1177:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1177:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1198:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 431,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1140:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1155:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "1140:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1140:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1140:66:4"
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1259:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "1217:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 445,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 444,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1217:11:4",
																	"1229:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1217:34:4"
															},
															"referencedDeclaration": 115,
															"src": "1217:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "_tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1330:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "_tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1366:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "_poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1398:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1435:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1439:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1435:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 454,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1473:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1479:6:4",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "1473:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1513:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1556:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1594:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 447,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1268:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1280:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1268:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1321:7:4",
														"1356:8:4",
														"1393:3:4",
														"1424:9:4",
														"1463:8:4",
														"1503:8:4",
														"1538:16:4",
														"1575:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1268:342:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1217:393:4"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 461,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1723:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 464,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "1763:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 462,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "1735:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1746:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "1735:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1735:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1723:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "1723:47:4"
											},
											{
												"expression": {
													"id": 468,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "1788:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 410,
												"id": 469,
												"nodeType": "Return",
												"src": "1781:16:4"
											}
										]
									},
									"functionSelector": "f6e8f4ff",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 406,
												"name": "onlyOwner",
												"nameLocations": [
													"733:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 394,
												"src": "733:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "733:9:4"
										}
									],
									"name": "swapSingle",
									"nameLocation": "563:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_tokenIn",
												"nameLocation": "591:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "583:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_tokenOut",
												"nameLocation": "617:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "609:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "644:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "636:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "665:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_poolFee",
												"nameLocation": "697:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "690:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 403,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "690:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:142:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "768:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "760:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:19:4"
									},
									"scope": 472,
									"src": "554:1250:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 473,
							"src": "267:1539:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "59:1747:4"
				},
				"id": 4
			}
		}
	}
}